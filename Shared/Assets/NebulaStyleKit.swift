//
//  NebulaStyleKit.swift
//  MrPutt
//
//  Created by KTJW on 1/21/17.
//  Copyright Â© 2017 KTJW. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class NebulaStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfNebulaHole1: UIImage?
        static var nebulaHole1Targets: [AnyObject]?
        static var imageOfNebulaHole2: UIImage?
        static var nebulaHole2Targets: [AnyObject]?
        static var imageOfNebulaHole3: UIImage?
        static var nebulaHole3Targets: [AnyObject]?
        static var imageOfNebulaHole4: UIImage?
        static var nebulaHole4Targets: [AnyObject]?
        static var imageOfNebulaHole5: UIImage?
        static var nebulaHole5Targets: [AnyObject]?
        static var imageOfNebulaHole6: UIImage?
        static var nebulaHole6Targets: [AnyObject]?
        static var imageOfNebulaHole7: UIImage?
        static var nebulaHole7Targets: [AnyObject]?
        static var imageOfNebulaHole8: UIImage?
        static var nebulaHole8Targets: [AnyObject]?
        static var imageOfNebulaHole9: UIImage?
        static var nebulaHole9Targets: [AnyObject]?
    }

    //// Drawing Methods

    public dynamic class func drawNebulaHole1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 203.04, y: 262.62))
        bezier3Path.addLine(to: CGPoint(x: 111.58, y: 354.08))
        bezier3Path.addLine(to: CGPoint(x: 196, y: 438.5))
        bezier3Path.addLine(to: CGPoint(x: 287.46, y: 347.04))
        bezier3Path.addLine(to: CGPoint(x: 203.04, y: 262.62))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 289.69, y: 112.89))
        bezier3Path.addCurve(to: CGPoint(x: 289.69, y: 270.62), controlPoint1: CGPoint(x: 289.69, y: 112.89), controlPoint2: CGPoint(x: 289.69, y: 243.13))
        bezier3Path.addCurve(to: CGPoint(x: 363, y: 351.17), controlPoint1: CGPoint(x: 310.42, y: 293.39), controlPoint2: CGPoint(x: 363, y: 351.17))
        bezier3Path.addCurve(to: CGPoint(x: 362.7, y: 351.5), controlPoint1: CGPoint(x: 363, y: 351.17), controlPoint2: CGPoint(x: 362.9, y: 351.29))
        bezier3Path.addCurve(to: CGPoint(x: 363, y: 351.83), controlPoint1: CGPoint(x: 362.9, y: 351.71), controlPoint2: CGPoint(x: 363, y: 351.83))
        bezier3Path.addCurve(to: CGPoint(x: 289.69, y: 432.38), controlPoint1: CGPoint(x: 363, y: 351.83), controlPoint2: CGPoint(x: 310.42, y: 409.61))
        bezier3Path.addCurve(to: CGPoint(x: 289.69, y: 590.11), controlPoint1: CGPoint(x: 289.69, y: 459.87), controlPoint2: CGPoint(x: 289.69, y: 590.11))
        bezier3Path.addCurve(to: CGPoint(x: 199.88, y: 671.5), controlPoint1: CGPoint(x: 289.69, y: 590.11), controlPoint2: CGPoint(x: 199.88, y: 671.5))
        bezier3Path.addCurve(to: CGPoint(x: 146.46, y: 623.1), controlPoint1: CGPoint(x: 199.88, y: 671.5), controlPoint2: CGPoint(x: 171.36, y: 645.66))
        bezier3Path.addCurve(to: CGPoint(x: 110.06, y: 590.11), controlPoint1: CGPoint(x: 127.17, y: 605.62), controlPoint2: CGPoint(x: 110.06, y: 590.11))
        bezier3Path.addCurve(to: CGPoint(x: 110.06, y: 432.38), controlPoint1: CGPoint(x: 110.06, y: 590.11), controlPoint2: CGPoint(x: 110.06, y: 459.87))
        bezier3Path.addCurve(to: CGPoint(x: 36.75, y: 351.83), controlPoint1: CGPoint(x: 89.33, y: 409.61), controlPoint2: CGPoint(x: 36.75, y: 351.83))
        bezier3Path.addCurve(to: CGPoint(x: 37.05, y: 351.5), controlPoint1: CGPoint(x: 36.75, y: 351.83), controlPoint2: CGPoint(x: 36.85, y: 351.71))
        bezier3Path.addCurve(to: CGPoint(x: 36.75, y: 351.17), controlPoint1: CGPoint(x: 36.85, y: 351.29), controlPoint2: CGPoint(x: 36.75, y: 351.17))
        bezier3Path.addCurve(to: CGPoint(x: 67.97, y: 316.87), controlPoint1: CGPoint(x: 36.75, y: 351.17), controlPoint2: CGPoint(x: 51.22, y: 335.27))
        bezier3Path.addCurve(to: CGPoint(x: 110.06, y: 270.62), controlPoint1: CGPoint(x: 83.15, y: 300.18), controlPoint2: CGPoint(x: 100.2, y: 281.44))
        bezier3Path.addCurve(to: CGPoint(x: 110.06, y: 112.89), controlPoint1: CGPoint(x: 110.06, y: 243.13), controlPoint2: CGPoint(x: 110.06, y: 112.89))
        bezier3Path.addCurve(to: CGPoint(x: 119.8, y: 104.06), controlPoint1: CGPoint(x: 110.06, y: 112.89), controlPoint2: CGPoint(x: 113.82, y: 109.48))
        bezier3Path.addCurve(to: CGPoint(x: 146.46, y: 79.9), controlPoint1: CGPoint(x: 126.58, y: 97.92), controlPoint2: CGPoint(x: 136.21, y: 89.19))
        bezier3Path.addCurve(to: CGPoint(x: 163.91, y: 64.09), controlPoint1: CGPoint(x: 152.22, y: 74.69), controlPoint2: CGPoint(x: 158.16, y: 69.3))
        bezier3Path.addCurve(to: CGPoint(x: 199.86, y: 31.51), controlPoint1: CGPoint(x: 182.74, y: 47.02), controlPoint2: CGPoint(x: 199.39, y: 31.94))
        bezier3Path.addLine(to: CGPoint(x: 289.69, y: 112.89))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineCapStyle = .round
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 203.04, y: 260.12))
        bezier2Path.addLine(to: CGPoint(x: 111.58, y: 351.58))
        bezier2Path.addLine(to: CGPoint(x: 196, y: 436))
        bezier2Path.addLine(to: CGPoint(x: 287.46, y: 344.54))
        bezier2Path.addLine(to: CGPoint(x: 203.04, y: 260.12))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 289.69, y: 110.39))
        bezier2Path.addCurve(to: CGPoint(x: 289.69, y: 268.12), controlPoint1: CGPoint(x: 289.69, y: 110.39), controlPoint2: CGPoint(x: 289.69, y: 240.63))
        bezier2Path.addCurve(to: CGPoint(x: 363, y: 348.67), controlPoint1: CGPoint(x: 310.42, y: 290.89), controlPoint2: CGPoint(x: 363, y: 348.67))
        bezier2Path.addCurve(to: CGPoint(x: 362.7, y: 349), controlPoint1: CGPoint(x: 363, y: 348.67), controlPoint2: CGPoint(x: 362.9, y: 348.79))
        bezier2Path.addCurve(to: CGPoint(x: 363, y: 349.33), controlPoint1: CGPoint(x: 362.9, y: 349.21), controlPoint2: CGPoint(x: 363, y: 349.33))
        bezier2Path.addCurve(to: CGPoint(x: 289.69, y: 429.88), controlPoint1: CGPoint(x: 363, y: 349.33), controlPoint2: CGPoint(x: 310.42, y: 407.11))
        bezier2Path.addCurve(to: CGPoint(x: 289.69, y: 587.61), controlPoint1: CGPoint(x: 289.69, y: 457.37), controlPoint2: CGPoint(x: 289.69, y: 587.61))
        bezier2Path.addCurve(to: CGPoint(x: 199.88, y: 669), controlPoint1: CGPoint(x: 289.69, y: 587.61), controlPoint2: CGPoint(x: 199.88, y: 669))
        bezier2Path.addCurve(to: CGPoint(x: 146.46, y: 620.6), controlPoint1: CGPoint(x: 199.88, y: 669), controlPoint2: CGPoint(x: 171.36, y: 643.16))
        bezier2Path.addCurve(to: CGPoint(x: 110.06, y: 587.61), controlPoint1: CGPoint(x: 127.17, y: 603.12), controlPoint2: CGPoint(x: 110.06, y: 587.61))
        bezier2Path.addCurve(to: CGPoint(x: 110.06, y: 429.88), controlPoint1: CGPoint(x: 110.06, y: 587.61), controlPoint2: CGPoint(x: 110.06, y: 457.37))
        bezier2Path.addCurve(to: CGPoint(x: 36.75, y: 349.33), controlPoint1: CGPoint(x: 89.33, y: 407.11), controlPoint2: CGPoint(x: 36.75, y: 349.33))
        bezier2Path.addCurve(to: CGPoint(x: 37.05, y: 349), controlPoint1: CGPoint(x: 36.75, y: 349.33), controlPoint2: CGPoint(x: 36.85, y: 349.21))
        bezier2Path.addCurve(to: CGPoint(x: 36.75, y: 348.67), controlPoint1: CGPoint(x: 36.85, y: 348.79), controlPoint2: CGPoint(x: 36.75, y: 348.67))
        bezier2Path.addCurve(to: CGPoint(x: 67.97, y: 314.37), controlPoint1: CGPoint(x: 36.75, y: 348.67), controlPoint2: CGPoint(x: 51.22, y: 332.77))
        bezier2Path.addCurve(to: CGPoint(x: 110.06, y: 268.12), controlPoint1: CGPoint(x: 83.15, y: 297.68), controlPoint2: CGPoint(x: 100.2, y: 278.94))
        bezier2Path.addCurve(to: CGPoint(x: 110.06, y: 110.39), controlPoint1: CGPoint(x: 110.06, y: 240.63), controlPoint2: CGPoint(x: 110.06, y: 110.39))
        bezier2Path.addCurve(to: CGPoint(x: 119.8, y: 101.56), controlPoint1: CGPoint(x: 110.06, y: 110.39), controlPoint2: CGPoint(x: 113.82, y: 106.98))
        bezier2Path.addCurve(to: CGPoint(x: 146.46, y: 77.4), controlPoint1: CGPoint(x: 126.58, y: 95.42), controlPoint2: CGPoint(x: 136.21, y: 86.69))
        bezier2Path.addCurve(to: CGPoint(x: 163.91, y: 61.59), controlPoint1: CGPoint(x: 152.22, y: 72.19), controlPoint2: CGPoint(x: 158.16, y: 66.8))
        bezier2Path.addCurve(to: CGPoint(x: 199.86, y: 29.01), controlPoint1: CGPoint(x: 182.74, y: 44.52), controlPoint2: CGPoint(x: 199.39, y: 29.44))
        bezier2Path.addLine(to: CGPoint(x: 289.69, y: 110.39))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 37, y: -29, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// wall Drawing
        let wallPath = UIBezierPath()
        wallPath.move(to: CGPoint(x: 206.57, y: 264.65))
        wallPath.addLine(to: CGPoint(x: 115.11, y: 356.11))
        wallPath.addLine(to: CGPoint(x: 115.11, y: 349.04))
        wallPath.addLine(to: CGPoint(x: 199.54, y: 433.46))
        wallPath.addLine(to: CGPoint(x: 192.46, y: 433.46))
        wallPath.addLine(to: CGPoint(x: 283.92, y: 342.01))
        wallPath.addLine(to: CGPoint(x: 283.92, y: 349.08))
        wallPath.addLine(to: CGPoint(x: 199.5, y: 264.65))
        wallPath.addLine(to: CGPoint(x: 206.57, y: 264.65))
        wallPath.close()
        wallPath.move(to: CGPoint(x: 199.5, y: 257.58))
        wallPath.addCurve(to: CGPoint(x: 206.57, y: 257.58), controlPoint1: CGPoint(x: 201.45, y: 255.63), controlPoint2: CGPoint(x: 204.62, y: 255.63))
        wallPath.addLine(to: CGPoint(x: 290.99, y: 342.01))
        wallPath.addCurve(to: CGPoint(x: 290.99, y: 349.08), controlPoint1: CGPoint(x: 292.95, y: 343.96), controlPoint2: CGPoint(x: 292.95, y: 347.12))
        wallPath.addLine(to: CGPoint(x: 199.54, y: 440.54))
        wallPath.addCurve(to: CGPoint(x: 192.46, y: 440.54), controlPoint1: CGPoint(x: 197.58, y: 442.49), controlPoint2: CGPoint(x: 194.42, y: 442.49))
        wallPath.addLine(to: CGPoint(x: 108.04, y: 356.11))
        wallPath.addCurve(to: CGPoint(x: 108.04, y: 349.04), controlPoint1: CGPoint(x: 106.09, y: 354.16), controlPoint2: CGPoint(x: 106.09, y: 350.99))
        wallPath.addLine(to: CGPoint(x: 199.5, y: 257.58))
        wallPath.close()
        wallPath.move(to: CGPoint(x: 294.69, y: 111.39))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 118.39), controlPoint1: CGPoint(x: 294.69, y: 112.66), controlPoint2: CGPoint(x: 294.69, y: 112.66))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 136.83), controlPoint1: CGPoint(x: 294.69, y: 126.02), controlPoint2: CGPoint(x: 294.69, y: 126.02))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 192.78), controlPoint1: CGPoint(x: 294.69, y: 162.26), controlPoint2: CGPoint(x: 294.69, y: 162.26))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 269.12), controlPoint1: CGPoint(x: 294.69, y: 240.94), controlPoint2: CGPoint(x: 294.69, y: 240.94))
        wallPath.addLine(to: CGPoint(x: 293.39, y: 265.75))
        wallPath.addCurve(to: CGPoint(x: 325.92, y: 301.49), controlPoint1: CGPoint(x: 307.39, y: 281.13), controlPoint2: CGPoint(x: 307.39, y: 281.13))
        wallPath.addCurve(to: CGPoint(x: 353.95, y: 332.3), controlPoint1: CGPoint(x: 341.21, y: 318.3), controlPoint2: CGPoint(x: 341.21, y: 318.3))
        wallPath.addCurve(to: CGPoint(x: 363.19, y: 342.46), controlPoint1: CGPoint(x: 359.37, y: 338.26), controlPoint2: CGPoint(x: 359.37, y: 338.26))
        wallPath.addCurve(to: CGPoint(x: 366.7, y: 346.31), controlPoint1: CGPoint(x: 366.06, y: 345.61), controlPoint2: CGPoint(x: 366.06, y: 345.61))
        wallPath.addCurve(to: CGPoint(x: 366.7, y: 353.04), controlPoint1: CGPoint(x: 368.43, y: 348.22), controlPoint2: CGPoint(x: 368.43, y: 351.13))
        wallPath.addCurve(to: CGPoint(x: 366.4, y: 353.37), controlPoint1: CGPoint(x: 366.65, y: 353.09), controlPoint2: CGPoint(x: 366.65, y: 353.09))
        wallPath.addLine(to: CGPoint(x: 362.7, y: 350))
        wallPath.addLine(to: CGPoint(x: 366.4, y: 346.63))
        wallPath.addCurve(to: CGPoint(x: 366.7, y: 346.96), controlPoint1: CGPoint(x: 366.65, y: 346.91), controlPoint2: CGPoint(x: 366.65, y: 346.91))
        wallPath.addCurve(to: CGPoint(x: 366.7, y: 353.69), controlPoint1: CGPoint(x: 368.43, y: 348.87), controlPoint2: CGPoint(x: 368.43, y: 351.78))
        wallPath.addCurve(to: CGPoint(x: 363.19, y: 357.54), controlPoint1: CGPoint(x: 366.06, y: 354.39), controlPoint2: CGPoint(x: 366.06, y: 354.39))
        wallPath.addCurve(to: CGPoint(x: 353.95, y: 367.7), controlPoint1: CGPoint(x: 359.37, y: 361.74), controlPoint2: CGPoint(x: 359.37, y: 361.74))
        wallPath.addCurve(to: CGPoint(x: 325.92, y: 398.51), controlPoint1: CGPoint(x: 341.21, y: 381.7), controlPoint2: CGPoint(x: 341.21, y: 381.7))
        wallPath.addCurve(to: CGPoint(x: 293.39, y: 434.25), controlPoint1: CGPoint(x: 307.39, y: 418.87), controlPoint2: CGPoint(x: 307.39, y: 418.87))
        wallPath.addLine(to: CGPoint(x: 294.69, y: 430.88))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 507.22), controlPoint1: CGPoint(x: 294.69, y: 441.67), controlPoint2: CGPoint(x: 294.69, y: 459.06))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 563.17), controlPoint1: CGPoint(x: 294.69, y: 537.74), controlPoint2: CGPoint(x: 294.69, y: 537.74))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 581.61), controlPoint1: CGPoint(x: 294.69, y: 573.98), controlPoint2: CGPoint(x: 294.69, y: 573.98))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 588.61), controlPoint1: CGPoint(x: 294.69, y: 587.34), controlPoint2: CGPoint(x: 294.69, y: 587.34))
        wallPath.addCurve(to: CGPoint(x: 293.05, y: 592.31), controlPoint1: CGPoint(x: 294.69, y: 590.02), controlPoint2: CGPoint(x: 294.1, y: 591.37))
        wallPath.addCurve(to: CGPoint(x: 289.19, y: 595.81), controlPoint1: CGPoint(x: 292.35, y: 592.95), controlPoint2: CGPoint(x: 292.35, y: 592.95))
        wallPath.addCurve(to: CGPoint(x: 279.02, y: 605.03), controlPoint1: CGPoint(x: 284.98, y: 599.63), controlPoint2: CGPoint(x: 284.98, y: 599.63))
        wallPath.addCurve(to: CGPoint(x: 248.14, y: 633.01), controlPoint1: CGPoint(x: 264.98, y: 617.75), controlPoint2: CGPoint(x: 264.98, y: 617.75))
        wallPath.addCurve(to: CGPoint(x: 217.27, y: 660.99), controlPoint1: CGPoint(x: 231.3, y: 648.27), controlPoint2: CGPoint(x: 231.3, y: 648.27))
        wallPath.addCurve(to: CGPoint(x: 207.09, y: 670.21), controlPoint1: CGPoint(x: 211.3, y: 666.39), controlPoint2: CGPoint(x: 211.3, y: 666.39))
        wallPath.addCurve(to: CGPoint(x: 204.24, y: 672.79), controlPoint1: CGPoint(x: 205.38, y: 671.76), controlPoint2: CGPoint(x: 205.38, y: 671.76))
        wallPath.addCurve(to: CGPoint(x: 203.49, y: 673.47), controlPoint1: CGPoint(x: 203.79, y: 673.2), controlPoint2: CGPoint(x: 203.79, y: 673.2))
        wallPath.addCurve(to: CGPoint(x: 203.3, y: 673.65), controlPoint1: CGPoint(x: 203.37, y: 673.58), controlPoint2: CGPoint(x: 203.37, y: 673.58))
        wallPath.addCurve(to: CGPoint(x: 203.25, y: 673.69), controlPoint1: CGPoint(x: 203.27, y: 673.67), controlPoint2: CGPoint(x: 203.27, y: 673.67))
        wallPath.addCurve(to: CGPoint(x: 203.24, y: 673.7), controlPoint1: CGPoint(x: 203.24, y: 673.7), controlPoint2: CGPoint(x: 203.24, y: 673.7))
        wallPath.addCurve(to: CGPoint(x: 203.23, y: 673.7), controlPoint1: CGPoint(x: 203.24, y: 673.7), controlPoint2: CGPoint(x: 203.24, y: 673.7))
        wallPath.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wallPath.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wallPath.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wallPath.addLine(to: CGPoint(x: 199.88, y: 670))
        wallPath.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wallPath.addCurve(to: CGPoint(x: 196.26, y: 673.47), controlPoint1: CGPoint(x: 196.48, y: 673.67), controlPoint2: CGPoint(x: 196.48, y: 673.67))
        wallPath.addCurve(to: CGPoint(x: 195.51, y: 672.79), controlPoint1: CGPoint(x: 195.97, y: 673.2), controlPoint2: CGPoint(x: 195.97, y: 673.2))
        wallPath.addCurve(to: CGPoint(x: 192.66, y: 670.21), controlPoint1: CGPoint(x: 194.86, y: 672.21), controlPoint2: CGPoint(x: 193.91, y: 671.34))
        wallPath.addCurve(to: CGPoint(x: 182.48, y: 660.99), controlPoint1: CGPoint(x: 190.3, y: 668.07), controlPoint2: CGPoint(x: 186.9, y: 664.99))
        wallPath.addCurve(to: CGPoint(x: 151.61, y: 633.01), controlPoint1: CGPoint(x: 175.15, y: 654.34), controlPoint2: CGPoint(x: 165.82, y: 645.89))
        wallPath.addLine(to: CGPoint(x: 151.61, y: 633.01))
        wallPath.addCurve(to: CGPoint(x: 143.1, y: 625.3), controlPoint1: CGPoint(x: 147.33, y: 629.13), controlPoint2: CGPoint(x: 147.33, y: 629.13))
        wallPath.addCurve(to: CGPoint(x: 117.67, y: 602.25), controlPoint1: CGPoint(x: 128.91, y: 612.44), controlPoint2: CGPoint(x: 128.91, y: 612.44))
        wallPath.addCurve(to: CGPoint(x: 109.68, y: 595.01), controlPoint1: CGPoint(x: 112.95, y: 597.98), controlPoint2: CGPoint(x: 112.95, y: 597.98))
        wallPath.addCurve(to: CGPoint(x: 106.7, y: 592.31), controlPoint1: CGPoint(x: 107.24, y: 592.8), controlPoint2: CGPoint(x: 107.24, y: 592.8))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 588.61), controlPoint1: CGPoint(x: 105.65, y: 591.37), controlPoint2: CGPoint(x: 105.06, y: 590.02))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 581.61), controlPoint1: CGPoint(x: 105.06, y: 587.34), controlPoint2: CGPoint(x: 105.06, y: 587.34))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 563.17), controlPoint1: CGPoint(x: 105.06, y: 573.98), controlPoint2: CGPoint(x: 105.06, y: 573.98))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 507.22), controlPoint1: CGPoint(x: 105.06, y: 537.74), controlPoint2: CGPoint(x: 105.06, y: 537.74))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 430.88), controlPoint1: CGPoint(x: 105.06, y: 459.06), controlPoint2: CGPoint(x: 105.06, y: 459.06))
        wallPath.addLine(to: CGPoint(x: 106.36, y: 434.25))
        wallPath.addCurve(to: CGPoint(x: 73.83, y: 398.51), controlPoint1: CGPoint(x: 92.36, y: 418.87), controlPoint2: CGPoint(x: 92.36, y: 418.87))
        wallPath.addCurve(to: CGPoint(x: 45.8, y: 367.7), controlPoint1: CGPoint(x: 58.54, y: 381.7), controlPoint2: CGPoint(x: 58.54, y: 381.7))
        wallPath.addCurve(to: CGPoint(x: 36.56, y: 357.54), controlPoint1: CGPoint(x: 40.38, y: 361.74), controlPoint2: CGPoint(x: 40.38, y: 361.74))
        wallPath.addCurve(to: CGPoint(x: 33.05, y: 353.69), controlPoint1: CGPoint(x: 33.69, y: 354.39), controlPoint2: CGPoint(x: 33.69, y: 354.39))
        wallPath.addCurve(to: CGPoint(x: 33.05, y: 346.96), controlPoint1: CGPoint(x: 31.32, y: 351.78), controlPoint2: CGPoint(x: 31.32, y: 348.87))
        wallPath.addCurve(to: CGPoint(x: 33.35, y: 346.63), controlPoint1: CGPoint(x: 33.1, y: 346.91), controlPoint2: CGPoint(x: 33.1, y: 346.91))
        wallPath.addLine(to: CGPoint(x: 37.05, y: 350))
        wallPath.addLine(to: CGPoint(x: 33.35, y: 353.37))
        wallPath.addCurve(to: CGPoint(x: 33.05, y: 353.04), controlPoint1: CGPoint(x: 33.1, y: 353.09), controlPoint2: CGPoint(x: 33.1, y: 353.09))
        wallPath.addCurve(to: CGPoint(x: 33.05, y: 346.31), controlPoint1: CGPoint(x: 31.32, y: 351.13), controlPoint2: CGPoint(x: 31.32, y: 348.22))
        wallPath.addCurve(to: CGPoint(x: 35.57, y: 343.54), controlPoint1: CGPoint(x: 33.5, y: 345.81), controlPoint2: CGPoint(x: 33.5, y: 345.81))
        wallPath.addCurve(to: CGPoint(x: 42.38, y: 336.06), controlPoint1: CGPoint(x: 38.36, y: 340.48), controlPoint2: CGPoint(x: 38.36, y: 340.48))
        wallPath.addCurve(to: CGPoint(x: 64.27, y: 312), controlPoint1: CGPoint(x: 51.99, y: 325.49), controlPoint2: CGPoint(x: 51.99, y: 325.49))
        wallPath.addCurve(to: CGPoint(x: 73.83, y: 301.49), controlPoint1: CGPoint(x: 69.01, y: 306.79), controlPoint2: CGPoint(x: 69.01, y: 306.79))
        wallPath.addCurve(to: CGPoint(x: 106.36, y: 265.75), controlPoint1: CGPoint(x: 92.36, y: 281.13), controlPoint2: CGPoint(x: 92.36, y: 281.13))
        wallPath.addLine(to: CGPoint(x: 105.06, y: 269.12))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 192.78), controlPoint1: CGPoint(x: 105.06, y: 240.94), controlPoint2: CGPoint(x: 105.06, y: 240.94))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 136.83), controlPoint1: CGPoint(x: 105.06, y: 162.26), controlPoint2: CGPoint(x: 105.06, y: 162.26))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 118.39), controlPoint1: CGPoint(x: 105.06, y: 126.02), controlPoint2: CGPoint(x: 105.06, y: 126.02))
        wallPath.addCurve(to: CGPoint(x: 105.06, y: 111.39), controlPoint1: CGPoint(x: 105.06, y: 112.66), controlPoint2: CGPoint(x: 105.06, y: 112.66))
        wallPath.addCurve(to: CGPoint(x: 106.7, y: 107.69), controlPoint1: CGPoint(x: 105.06, y: 109.98), controlPoint2: CGPoint(x: 105.65, y: 108.63))
        wallPath.addCurve(to: CGPoint(x: 109.33, y: 105.3), controlPoint1: CGPoint(x: 107.17, y: 107.26), controlPoint2: CGPoint(x: 107.17, y: 107.26))
        wallPath.addCurve(to: CGPoint(x: 116.44, y: 98.86), controlPoint1: CGPoint(x: 112.23, y: 102.67), controlPoint2: CGPoint(x: 112.23, y: 102.67))
        wallPath.addCurve(to: CGPoint(x: 143.1, y: 74.7), controlPoint1: CGPoint(x: 128.04, y: 88.35), controlPoint2: CGPoint(x: 128.04, y: 88.35))
        wallPath.addCurve(to: CGPoint(x: 151.61, y: 66.99), controlPoint1: CGPoint(x: 147.33, y: 70.87), controlPoint2: CGPoint(x: 147.33, y: 70.87))
        wallPath.addCurve(to: CGPoint(x: 160.55, y: 58.89), controlPoint1: CGPoint(x: 156.11, y: 62.91), controlPoint2: CGPoint(x: 156.11, y: 62.91))
        wallPath.addCurve(to: CGPoint(x: 185.42, y: 36.36), controlPoint1: CGPoint(x: 174.4, y: 46.33), controlPoint2: CGPoint(x: 174.4, y: 46.33))
        wallPath.addCurve(to: CGPoint(x: 193.34, y: 29.18), controlPoint1: CGPoint(x: 190.06, y: 32.15), controlPoint2: CGPoint(x: 190.06, y: 32.15))
        wallPath.addCurve(to: CGPoint(x: 196.51, y: 26.3), controlPoint1: CGPoint(x: 195.82, y: 26.92), controlPoint2: CGPoint(x: 195.82, y: 26.92))
        wallPath.addCurve(to: CGPoint(x: 203.22, y: 26.3), controlPoint1: CGPoint(x: 198.41, y: 24.58), controlPoint2: CGPoint(x: 201.32, y: 24.58))
        wallPath.addLine(to: CGPoint(x: 293.05, y: 107.69))
        wallPath.addCurve(to: CGPoint(x: 294.69, y: 111.39), controlPoint1: CGPoint(x: 294.09, y: 108.63), controlPoint2: CGPoint(x: 294.69, y: 109.98))
        wallPath.close()
        wallPath.move(to: CGPoint(x: 284.69, y: 111.39))
        wallPath.addLine(to: CGPoint(x: 286.33, y: 115.1))
        wallPath.addLine(to: CGPoint(x: 196.51, y: 33.71))
        wallPath.addLine(to: CGPoint(x: 199.86, y: 30.01))
        wallPath.addLine(to: CGPoint(x: 203.22, y: 33.71))
        wallPath.addCurve(to: CGPoint(x: 200.05, y: 36.59), controlPoint1: CGPoint(x: 202.54, y: 34.33), controlPoint2: CGPoint(x: 202.54, y: 34.33))
        wallPath.addCurve(to: CGPoint(x: 192.13, y: 43.77), controlPoint1: CGPoint(x: 196.78, y: 39.56), controlPoint2: CGPoint(x: 196.78, y: 39.56))
        wallPath.addCurve(to: CGPoint(x: 167.27, y: 66.3), controlPoint1: CGPoint(x: 181.12, y: 53.74), controlPoint2: CGPoint(x: 181.12, y: 53.74))
        wallPath.addCurve(to: CGPoint(x: 158.32, y: 74.4), controlPoint1: CGPoint(x: 162.82, y: 70.32), controlPoint2: CGPoint(x: 162.82, y: 70.32))
        wallPath.addCurve(to: CGPoint(x: 149.82, y: 82.11), controlPoint1: CGPoint(x: 154.05, y: 78.28), controlPoint2: CGPoint(x: 154.05, y: 78.28))
        wallPath.addCurve(to: CGPoint(x: 123.16, y: 106.27), controlPoint1: CGPoint(x: 134.76, y: 95.76), controlPoint2: CGPoint(x: 134.76, y: 95.76))
        wallPath.addCurve(to: CGPoint(x: 116.04, y: 112.71), controlPoint1: CGPoint(x: 118.95, y: 110.08), controlPoint2: CGPoint(x: 118.95, y: 110.08))
        wallPath.addCurve(to: CGPoint(x: 113.42, y: 115.1), controlPoint1: CGPoint(x: 113.89, y: 114.67), controlPoint2: CGPoint(x: 113.89, y: 114.67))
        wallPath.addLine(to: CGPoint(x: 115.06, y: 111.39))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 118.39), controlPoint1: CGPoint(x: 115.06, y: 112.66), controlPoint2: CGPoint(x: 115.06, y: 112.66))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 136.83), controlPoint1: CGPoint(x: 115.06, y: 126.02), controlPoint2: CGPoint(x: 115.06, y: 126.02))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 192.78), controlPoint1: CGPoint(x: 115.06, y: 162.26), controlPoint2: CGPoint(x: 115.06, y: 162.26))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 269.12), controlPoint1: CGPoint(x: 115.06, y: 240.94), controlPoint2: CGPoint(x: 115.06, y: 240.94))
        wallPath.addCurve(to: CGPoint(x: 113.76, y: 272.48), controlPoint1: CGPoint(x: 115.06, y: 270.36), controlPoint2: CGPoint(x: 114.59, y: 271.56))
        wallPath.addCurve(to: CGPoint(x: 81.23, y: 308.22), controlPoint1: CGPoint(x: 99.76, y: 287.86), controlPoint2: CGPoint(x: 99.76, y: 287.86))
        wallPath.addCurve(to: CGPoint(x: 71.67, y: 318.73), controlPoint1: CGPoint(x: 76.41, y: 313.52), controlPoint2: CGPoint(x: 76.41, y: 313.52))
        wallPath.addCurve(to: CGPoint(x: 49.78, y: 342.79), controlPoint1: CGPoint(x: 59.39, y: 332.22), controlPoint2: CGPoint(x: 59.39, y: 332.22))
        wallPath.addCurve(to: CGPoint(x: 42.97, y: 350.27), controlPoint1: CGPoint(x: 45.75, y: 347.21), controlPoint2: CGPoint(x: 45.75, y: 347.21))
        wallPath.addCurve(to: CGPoint(x: 40.45, y: 353.04), controlPoint1: CGPoint(x: 40.9, y: 352.54), controlPoint2: CGPoint(x: 40.9, y: 352.54))
        wallPath.addLine(to: CGPoint(x: 36.75, y: 349.67))
        wallPath.addLine(to: CGPoint(x: 40.45, y: 346.31))
        wallPath.addCurve(to: CGPoint(x: 40.74, y: 346.63), controlPoint1: CGPoint(x: 40.5, y: 346.36), controlPoint2: CGPoint(x: 40.5, y: 346.36))
        wallPath.addCurve(to: CGPoint(x: 40.74, y: 353.37), controlPoint1: CGPoint(x: 42.48, y: 348.54), controlPoint2: CGPoint(x: 42.48, y: 351.46))
        wallPath.addCurve(to: CGPoint(x: 40.45, y: 353.69), controlPoint1: CGPoint(x: 40.5, y: 353.64), controlPoint2: CGPoint(x: 40.5, y: 353.64))
        wallPath.addLine(to: CGPoint(x: 36.75, y: 350.33))
        wallPath.addLine(to: CGPoint(x: 40.45, y: 346.96))
        wallPath.addCurve(to: CGPoint(x: 43.95, y: 350.81), controlPoint1: CGPoint(x: 41.09, y: 347.66), controlPoint2: CGPoint(x: 41.09, y: 347.66))
        wallPath.addCurve(to: CGPoint(x: 53.19, y: 360.97), controlPoint1: CGPoint(x: 47.78, y: 355.01), controlPoint2: CGPoint(x: 47.78, y: 355.01))
        wallPath.addCurve(to: CGPoint(x: 81.23, y: 391.78), controlPoint1: CGPoint(x: 65.94, y: 374.97), controlPoint2: CGPoint(x: 65.94, y: 374.97))
        wallPath.addCurve(to: CGPoint(x: 113.76, y: 427.52), controlPoint1: CGPoint(x: 99.76, y: 412.14), controlPoint2: CGPoint(x: 99.76, y: 412.14))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 430.88), controlPoint1: CGPoint(x: 114.59, y: 428.44), controlPoint2: CGPoint(x: 115.06, y: 429.64))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 507.22), controlPoint1: CGPoint(x: 115.06, y: 459.06), controlPoint2: CGPoint(x: 115.06, y: 459.06))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 563.17), controlPoint1: CGPoint(x: 115.06, y: 537.74), controlPoint2: CGPoint(x: 115.06, y: 537.74))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 581.61), controlPoint1: CGPoint(x: 115.06, y: 573.98), controlPoint2: CGPoint(x: 115.06, y: 573.98))
        wallPath.addCurve(to: CGPoint(x: 115.06, y: 588.61), controlPoint1: CGPoint(x: 115.06, y: 587.34), controlPoint2: CGPoint(x: 115.06, y: 587.34))
        wallPath.addLine(to: CGPoint(x: 113.42, y: 584.9))
        wallPath.addCurve(to: CGPoint(x: 116.39, y: 587.6), controlPoint1: CGPoint(x: 113.95, y: 585.39), controlPoint2: CGPoint(x: 113.95, y: 585.39))
        wallPath.addCurve(to: CGPoint(x: 124.38, y: 594.84), controlPoint1: CGPoint(x: 119.67, y: 590.57), controlPoint2: CGPoint(x: 119.67, y: 590.57))
        wallPath.addCurve(to: CGPoint(x: 149.82, y: 617.89), controlPoint1: CGPoint(x: 135.62, y: 605.03), controlPoint2: CGPoint(x: 135.62, y: 605.03))
        wallPath.addCurve(to: CGPoint(x: 158.32, y: 625.6), controlPoint1: CGPoint(x: 154.05, y: 621.72), controlPoint2: CGPoint(x: 154.05, y: 621.72))
        wallPath.addLine(to: CGPoint(x: 158.32, y: 625.6))
        wallPath.addCurve(to: CGPoint(x: 189.2, y: 653.58), controlPoint1: CGPoint(x: 172.53, y: 638.48), controlPoint2: CGPoint(x: 181.86, y: 646.93))
        wallPath.addCurve(to: CGPoint(x: 199.37, y: 662.8), controlPoint1: CGPoint(x: 193.62, y: 657.58), controlPoint2: CGPoint(x: 197.02, y: 660.66))
        wallPath.addCurve(to: CGPoint(x: 202.22, y: 665.38), controlPoint1: CGPoint(x: 200.62, y: 663.93), controlPoint2: CGPoint(x: 201.58, y: 664.79))
        wallPath.addCurve(to: CGPoint(x: 202.97, y: 666.06), controlPoint1: CGPoint(x: 202.68, y: 665.79), controlPoint2: CGPoint(x: 202.68, y: 665.79))
        wallPath.addCurve(to: CGPoint(x: 203.23, y: 666.29), controlPoint1: CGPoint(x: 203.19, y: 666.25), controlPoint2: CGPoint(x: 203.19, y: 666.25))
        wallPath.addCurve(to: CGPoint(x: 203.23, y: 673.7), controlPoint1: CGPoint(x: 201.46, y: 661.82), controlPoint2: CGPoint(x: 208.17, y: 669.23))
        wallPath.addLine(to: CGPoint(x: 196.52, y: 666.29))
        wallPath.addLine(to: CGPoint(x: 196.52, y: 666.29))
        wallPath.addLine(to: CGPoint(x: 196.52, y: 666.29))
        wallPath.addCurve(to: CGPoint(x: 196.52, y: 666.29), controlPoint1: CGPoint(x: 196.52, y: 666.29), controlPoint2: CGPoint(x: 196.52, y: 666.29))
        wallPath.addCurve(to: CGPoint(x: 196.53, y: 666.28), controlPoint1: CGPoint(x: 196.53, y: 666.29), controlPoint2: CGPoint(x: 196.53, y: 666.29))
        wallPath.addCurve(to: CGPoint(x: 196.58, y: 666.24), controlPoint1: CGPoint(x: 196.55, y: 666.26), controlPoint2: CGPoint(x: 196.55, y: 666.26))
        wallPath.addCurve(to: CGPoint(x: 196.78, y: 666.06), controlPoint1: CGPoint(x: 196.66, y: 666.17), controlPoint2: CGPoint(x: 196.66, y: 666.17))
        wallPath.addCurve(to: CGPoint(x: 197.53, y: 665.38), controlPoint1: CGPoint(x: 197.07, y: 665.79), controlPoint2: CGPoint(x: 197.07, y: 665.79))
        wallPath.addCurve(to: CGPoint(x: 200.38, y: 662.8), controlPoint1: CGPoint(x: 198.67, y: 664.35), controlPoint2: CGPoint(x: 198.67, y: 664.35))
        wallPath.addCurve(to: CGPoint(x: 210.55, y: 653.58), controlPoint1: CGPoint(x: 204.59, y: 658.98), controlPoint2: CGPoint(x: 204.59, y: 658.98))
        wallPath.addCurve(to: CGPoint(x: 241.43, y: 625.6), controlPoint1: CGPoint(x: 224.59, y: 640.86), controlPoint2: CGPoint(x: 224.59, y: 640.86))
        wallPath.addCurve(to: CGPoint(x: 272.3, y: 597.62), controlPoint1: CGPoint(x: 258.27, y: 610.34), controlPoint2: CGPoint(x: 258.27, y: 610.34))
        wallPath.addCurve(to: CGPoint(x: 282.47, y: 588.4), controlPoint1: CGPoint(x: 278.26, y: 592.22), controlPoint2: CGPoint(x: 278.26, y: 592.22))
        wallPath.addCurve(to: CGPoint(x: 286.33, y: 584.9), controlPoint1: CGPoint(x: 285.63, y: 585.54), controlPoint2: CGPoint(x: 285.63, y: 585.54))
        wallPath.addLine(to: CGPoint(x: 284.69, y: 588.61))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 581.61), controlPoint1: CGPoint(x: 284.69, y: 587.34), controlPoint2: CGPoint(x: 284.69, y: 587.34))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 563.17), controlPoint1: CGPoint(x: 284.69, y: 573.98), controlPoint2: CGPoint(x: 284.69, y: 573.98))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 507.22), controlPoint1: CGPoint(x: 284.69, y: 537.74), controlPoint2: CGPoint(x: 284.69, y: 537.74))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 430.88), controlPoint1: CGPoint(x: 284.69, y: 459.06), controlPoint2: CGPoint(x: 284.69, y: 441.67))
        wallPath.addCurve(to: CGPoint(x: 285.99, y: 427.52), controlPoint1: CGPoint(x: 284.69, y: 429.64), controlPoint2: CGPoint(x: 285.16, y: 428.44))
        wallPath.addCurve(to: CGPoint(x: 318.52, y: 391.78), controlPoint1: CGPoint(x: 299.99, y: 412.14), controlPoint2: CGPoint(x: 299.99, y: 412.14))
        wallPath.addCurve(to: CGPoint(x: 346.56, y: 360.97), controlPoint1: CGPoint(x: 333.81, y: 374.97), controlPoint2: CGPoint(x: 333.81, y: 374.97))
        wallPath.addCurve(to: CGPoint(x: 355.8, y: 350.81), controlPoint1: CGPoint(x: 351.97, y: 355.01), controlPoint2: CGPoint(x: 351.97, y: 355.01))
        wallPath.addCurve(to: CGPoint(x: 359.3, y: 346.96), controlPoint1: CGPoint(x: 358.66, y: 347.66), controlPoint2: CGPoint(x: 358.66, y: 347.66))
        wallPath.addLine(to: CGPoint(x: 363, y: 350.33))
        wallPath.addLine(to: CGPoint(x: 359.3, y: 353.69))
        wallPath.addCurve(to: CGPoint(x: 359.01, y: 353.37), controlPoint1: CGPoint(x: 359.25, y: 353.64), controlPoint2: CGPoint(x: 359.25, y: 353.64))
        wallPath.addCurve(to: CGPoint(x: 359.01, y: 346.63), controlPoint1: CGPoint(x: 357.27, y: 351.46), controlPoint2: CGPoint(x: 357.27, y: 348.54))
        wallPath.addCurve(to: CGPoint(x: 359.3, y: 346.31), controlPoint1: CGPoint(x: 359.25, y: 346.36), controlPoint2: CGPoint(x: 359.25, y: 346.36))
        wallPath.addLine(to: CGPoint(x: 363, y: 349.67))
        wallPath.addLine(to: CGPoint(x: 359.3, y: 353.04))
        wallPath.addCurve(to: CGPoint(x: 355.8, y: 349.19), controlPoint1: CGPoint(x: 358.66, y: 352.34), controlPoint2: CGPoint(x: 358.66, y: 352.34))
        wallPath.addCurve(to: CGPoint(x: 346.56, y: 339.03), controlPoint1: CGPoint(x: 351.97, y: 344.99), controlPoint2: CGPoint(x: 351.97, y: 344.99))
        wallPath.addCurve(to: CGPoint(x: 318.52, y: 308.22), controlPoint1: CGPoint(x: 333.81, y: 325.03), controlPoint2: CGPoint(x: 333.81, y: 325.03))
        wallPath.addCurve(to: CGPoint(x: 285.99, y: 272.48), controlPoint1: CGPoint(x: 299.99, y: 287.86), controlPoint2: CGPoint(x: 299.99, y: 287.86))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 269.12), controlPoint1: CGPoint(x: 285.16, y: 271.56), controlPoint2: CGPoint(x: 284.69, y: 270.36))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 192.78), controlPoint1: CGPoint(x: 284.69, y: 240.94), controlPoint2: CGPoint(x: 284.69, y: 240.94))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 136.83), controlPoint1: CGPoint(x: 284.69, y: 162.26), controlPoint2: CGPoint(x: 284.69, y: 162.26))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 118.39), controlPoint1: CGPoint(x: 284.69, y: 126.02), controlPoint2: CGPoint(x: 284.69, y: 126.02))
        wallPath.addCurve(to: CGPoint(x: 284.69, y: 111.39), controlPoint1: CGPoint(x: 284.69, y: 112.66), controlPoint2: CGPoint(x: 284.69, y: 112.66))
        wallPath.close()
        context.saveGState()
        wallPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 199.87, y: 25.01), end: CGPoint(x: 199.88, y: 673.7), options: [])
        context.restoreGState()

        ////// wall Inner Shadow
        context.saveGState()
        context.clip(to: wallPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wallOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wallOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wallOpaqueShadow.setFill()
        wallPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 199, y: 583, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 198, y: 113, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 259, y: 489, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 122, y: 477, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 195, y: 186))
        bezier3Path.addCurve(to: CGPoint(x: 186.56, y: 186.71), controlPoint1: CGPoint(x: 192.12, y: 186), controlPoint2: CGPoint(x: 189.31, y: 186.24))
        bezier3Path.addCurve(to: CGPoint(x: 145, y: 236), controlPoint1: CGPoint(x: 162.97, y: 190.72), controlPoint2: CGPoint(x: 145, y: 211.26))
        bezier3Path.addCurve(to: CGPoint(x: 195, y: 286), controlPoint1: CGPoint(x: 145, y: 263.61), controlPoint2: CGPoint(x: 167.39, y: 286))
        bezier3Path.addCurve(to: CGPoint(x: 245, y: 236), controlPoint1: CGPoint(x: 222.61, y: 286), controlPoint2: CGPoint(x: 245, y: 263.61))
        bezier3Path.addCurve(to: CGPoint(x: 195, y: 186), controlPoint1: CGPoint(x: 245, y: 208.39), controlPoint2: CGPoint(x: 222.61, y: 186))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 196, y: 84))
        bezier3Path.addCurve(to: CGPoint(x: 314.43, y: 420.36), controlPoint1: CGPoint(x: 196, y: 84), controlPoint2: CGPoint(x: 367, y: 178.24))
        bezier3Path.addCurve(to: CGPoint(x: 312, y: 431), controlPoint1: CGPoint(x: 313.67, y: 423.88), controlPoint2: CGPoint(x: 312.86, y: 427.42))
        bezier3Path.addLine(to: CGPoint(x: 368, y: 487))
        bezier3Path.addCurve(to: CGPoint(x: 368, y: 570), controlPoint1: CGPoint(x: 368, y: 487), controlPoint2: CGPoint(x: 368, y: 555))
        bezier3Path.addCurve(to: CGPoint(x: 267, y: 523), controlPoint1: CGPoint(x: 338, y: 540), controlPoint2: CGPoint(x: 267, y: 523))
        bezier3Path.addCurve(to: CGPoint(x: 217, y: 607), controlPoint1: CGPoint(x: 267, y: 523), controlPoint2: CGPoint(x: 218.83, y: 601.73))
        bezier3Path.addCurve(to: CGPoint(x: 217, y: 431.41), controlPoint1: CGPoint(x: 217, y: 537.82), controlPoint2: CGPoint(x: 217, y: 474.99))
        bezier3Path.addCurve(to: CGPoint(x: 245, y: 386.5), controlPoint1: CGPoint(x: 233.58, y: 423.27), controlPoint2: CGPoint(x: 245, y: 406.22))
        bezier3Path.addCurve(to: CGPoint(x: 212.35, y: 339.59), controlPoint1: CGPoint(x: 245, y: 364.99), controlPoint2: CGPoint(x: 231.41, y: 346.64))
        bezier3Path.addCurve(to: CGPoint(x: 195, y: 336.5), controlPoint1: CGPoint(x: 206.94, y: 337.59), controlPoint2: CGPoint(x: 201.1, y: 336.5))
        bezier3Path.addCurve(to: CGPoint(x: 145, y: 386.5), controlPoint1: CGPoint(x: 167.39, y: 336.5), controlPoint2: CGPoint(x: 145, y: 358.89))
        bezier3Path.addCurve(to: CGPoint(x: 180, y: 434.21), controlPoint1: CGPoint(x: 145, y: 408.89), controlPoint2: CGPoint(x: 159.71, y: 427.84))
        bezier3Path.addCurve(to: CGPoint(x: 180, y: 607), controlPoint1: CGPoint(x: 180, y: 474.86), controlPoint2: CGPoint(x: 180, y: 543.47))
        bezier3Path.addCurve(to: CGPoint(x: 130, y: 523), controlPoint1: CGPoint(x: 162.5, y: 565.5), controlPoint2: CGPoint(x: 145.5, y: 550))
        bezier3Path.addCurve(to: CGPoint(x: 29, y: 570), controlPoint1: CGPoint(x: 130, y: 523), controlPoint2: CGPoint(x: 90, y: 526))
        bezier3Path.addCurve(to: CGPoint(x: 29, y: 487), controlPoint1: CGPoint(x: 29, y: 552), controlPoint2: CGPoint(x: 29, y: 487))
        bezier3Path.addLine(to: CGPoint(x: 77, y: 431))
        bezier3Path.addCurve(to: CGPoint(x: 112.27, y: 168.89), controlPoint1: CGPoint(x: 52.14, y: 308.61), controlPoint2: CGPoint(x: 78.25, y: 223.94))
        bezier3Path.addCurve(to: CGPoint(x: 134.78, y: 137.54), controlPoint1: CGPoint(x: 119.55, y: 157.11), controlPoint2: CGPoint(x: 127.2, y: 146.69))
        bezier3Path.addCurve(to: CGPoint(x: 196, y: 84), controlPoint1: CGPoint(x: 165.89, y: 100.02), controlPoint2: CGPoint(x: 196, y: 84))
        bezier3Path.addLine(to: CGPoint(x: 196, y: 84))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 194.5, y: 186))
        bezierPath.addCurve(to: CGPoint(x: 186.06, y: 186.71), controlPoint1: CGPoint(x: 191.62, y: 186), controlPoint2: CGPoint(x: 188.81, y: 186.24))
        bezierPath.addCurve(to: CGPoint(x: 144.5, y: 236), controlPoint1: CGPoint(x: 162.47, y: 190.72), controlPoint2: CGPoint(x: 144.5, y: 211.26))
        bezierPath.addCurve(to: CGPoint(x: 194.5, y: 286), controlPoint1: CGPoint(x: 144.5, y: 263.61), controlPoint2: CGPoint(x: 166.89, y: 286))
        bezierPath.addCurve(to: CGPoint(x: 244.5, y: 236), controlPoint1: CGPoint(x: 222.11, y: 286), controlPoint2: CGPoint(x: 244.5, y: 263.61))
        bezierPath.addCurve(to: CGPoint(x: 194.5, y: 186), controlPoint1: CGPoint(x: 244.5, y: 208.39), controlPoint2: CGPoint(x: 222.11, y: 186))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 195.5, y: 84))
        bezierPath.addCurve(to: CGPoint(x: 313.93, y: 420.36), controlPoint1: CGPoint(x: 195.5, y: 84), controlPoint2: CGPoint(x: 366.5, y: 178.24))
        bezierPath.addCurve(to: CGPoint(x: 311.5, y: 431), controlPoint1: CGPoint(x: 313.17, y: 423.88), controlPoint2: CGPoint(x: 312.36, y: 427.42))
        bezierPath.addLine(to: CGPoint(x: 367.5, y: 487))
        bezierPath.addCurve(to: CGPoint(x: 367.5, y: 570), controlPoint1: CGPoint(x: 367.5, y: 487), controlPoint2: CGPoint(x: 367.5, y: 555))
        bezierPath.addCurve(to: CGPoint(x: 266.5, y: 523), controlPoint1: CGPoint(x: 337.5, y: 540), controlPoint2: CGPoint(x: 266.5, y: 523))
        bezierPath.addCurve(to: CGPoint(x: 216.5, y: 607), controlPoint1: CGPoint(x: 266.5, y: 523), controlPoint2: CGPoint(x: 218.33, y: 601.73))
        bezierPath.addCurve(to: CGPoint(x: 216.5, y: 431.41), controlPoint1: CGPoint(x: 216.5, y: 537.82), controlPoint2: CGPoint(x: 216.5, y: 474.99))
        bezierPath.addCurve(to: CGPoint(x: 244.5, y: 386.5), controlPoint1: CGPoint(x: 233.08, y: 423.27), controlPoint2: CGPoint(x: 244.5, y: 406.22))
        bezierPath.addCurve(to: CGPoint(x: 211.85, y: 339.59), controlPoint1: CGPoint(x: 244.5, y: 364.99), controlPoint2: CGPoint(x: 230.91, y: 346.64))
        bezierPath.addCurve(to: CGPoint(x: 194.5, y: 336.5), controlPoint1: CGPoint(x: 206.44, y: 337.59), controlPoint2: CGPoint(x: 200.6, y: 336.5))
        bezierPath.addCurve(to: CGPoint(x: 144.5, y: 386.5), controlPoint1: CGPoint(x: 166.89, y: 336.5), controlPoint2: CGPoint(x: 144.5, y: 358.89))
        bezierPath.addCurve(to: CGPoint(x: 179.5, y: 434.21), controlPoint1: CGPoint(x: 144.5, y: 408.89), controlPoint2: CGPoint(x: 159.21, y: 427.84))
        bezierPath.addCurve(to: CGPoint(x: 179.5, y: 607), controlPoint1: CGPoint(x: 179.5, y: 474.86), controlPoint2: CGPoint(x: 179.5, y: 543.47))
        bezierPath.addCurve(to: CGPoint(x: 129.5, y: 523), controlPoint1: CGPoint(x: 162, y: 565.5), controlPoint2: CGPoint(x: 145, y: 550))
        bezierPath.addCurve(to: CGPoint(x: 28.5, y: 570), controlPoint1: CGPoint(x: 129.5, y: 523), controlPoint2: CGPoint(x: 89.5, y: 526))
        bezierPath.addCurve(to: CGPoint(x: 28.5, y: 487), controlPoint1: CGPoint(x: 28.5, y: 552), controlPoint2: CGPoint(x: 28.5, y: 487))
        bezierPath.addLine(to: CGPoint(x: 76.5, y: 431))
        bezierPath.addCurve(to: CGPoint(x: 111.77, y: 168.89), controlPoint1: CGPoint(x: 51.64, y: 308.61), controlPoint2: CGPoint(x: 77.75, y: 223.94))
        bezierPath.addCurve(to: CGPoint(x: 134.28, y: 137.54), controlPoint1: CGPoint(x: 119.05, y: 157.11), controlPoint2: CGPoint(x: 126.7, y: 146.69))
        bezierPath.addCurve(to: CGPoint(x: 195.5, y: 84), controlPoint1: CGPoint(x: 165.39, y: 100.02), controlPoint2: CGPoint(x: 195.5, y: 84))
        bezierPath.addLine(to: CGPoint(x: 195.5, y: 84))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 29, y: -84, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 195, y: 191))
        bezier2Path.addCurve(to: CGPoint(x: 187.4, y: 191.64), controlPoint1: CGPoint(x: 192.43, y: 191), controlPoint2: CGPoint(x: 189.89, y: 191.21))
        bezier2Path.addCurve(to: CGPoint(x: 150, y: 236), controlPoint1: CGPoint(x: 165.93, y: 195.29), controlPoint2: CGPoint(x: 150, y: 213.98))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 281), controlPoint1: CGPoint(x: 150, y: 260.85), controlPoint2: CGPoint(x: 170.15, y: 281))
        bezier2Path.addCurve(to: CGPoint(x: 240, y: 236), controlPoint1: CGPoint(x: 219.85, y: 281), controlPoint2: CGPoint(x: 240, y: 260.85))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 191), controlPoint1: CGPoint(x: 240, y: 211.15), controlPoint2: CGPoint(x: 219.85, y: 191))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 195, y: 181))
        bezier2Path.addCurve(to: CGPoint(x: 250, y: 236), controlPoint1: CGPoint(x: 225.38, y: 181), controlPoint2: CGPoint(x: 250, y: 205.62))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 291), controlPoint1: CGPoint(x: 250, y: 266.38), controlPoint2: CGPoint(x: 225.38, y: 291))
        bezier2Path.addCurve(to: CGPoint(x: 140, y: 236), controlPoint1: CGPoint(x: 164.62, y: 291), controlPoint2: CGPoint(x: 140, y: 266.38))
        bezier2Path.addCurve(to: CGPoint(x: 185.72, y: 181.78), controlPoint1: CGPoint(x: 140, y: 209.08), controlPoint2: CGPoint(x: 159.47, y: 186.24))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 181), controlPoint1: CGPoint(x: 188.77, y: 181.26), controlPoint2: CGPoint(x: 191.87, y: 181))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 198.42, y: 79.62))
        bezier2Path.addCurve(to: CGPoint(x: 198.42, y: 79.62), controlPoint1: CGPoint(x: 198.42, y: 79.62), controlPoint2: CGPoint(x: 198.42, y: 79.62))
        bezier2Path.addCurve(to: CGPoint(x: 198.42, y: 79.63), controlPoint1: CGPoint(x: 198.42, y: 79.63), controlPoint2: CGPoint(x: 198.42, y: 79.63))
        bezier2Path.addCurve(to: CGPoint(x: 198.43, y: 79.63), controlPoint1: CGPoint(x: 198.43, y: 79.63), controlPoint2: CGPoint(x: 198.43, y: 79.63))
        bezier2Path.addCurve(to: CGPoint(x: 198.47, y: 79.65), controlPoint1: CGPoint(x: 198.45, y: 79.64), controlPoint2: CGPoint(x: 198.45, y: 79.64))
        bezier2Path.addCurve(to: CGPoint(x: 198.58, y: 79.72), controlPoint1: CGPoint(x: 198.51, y: 79.68), controlPoint2: CGPoint(x: 198.51, y: 79.68))
        bezier2Path.addCurve(to: CGPoint(x: 198.99, y: 79.95), controlPoint1: CGPoint(x: 198.7, y: 79.78), controlPoint2: CGPoint(x: 198.83, y: 79.86))
        bezier2Path.addCurve(to: CGPoint(x: 200.5, y: 80.84), controlPoint1: CGPoint(x: 199.42, y: 80.2), controlPoint2: CGPoint(x: 199.92, y: 80.49))
        bezier2Path.addCurve(to: CGPoint(x: 206.02, y: 84.36), controlPoint1: CGPoint(x: 202.11, y: 81.81), controlPoint2: CGPoint(x: 203.96, y: 82.99))
        bezier2Path.addCurve(to: CGPoint(x: 225.09, y: 98.66), controlPoint1: CGPoint(x: 211.88, y: 88.27), controlPoint2: CGPoint(x: 218.3, y: 93.03))
        bezier2Path.addCurve(to: CGPoint(x: 279.08, y: 158.6), controlPoint1: CGPoint(x: 244.45, y: 114.73), controlPoint2: CGPoint(x: 262.97, y: 134.63))
        bezier2Path.addCurve(to: CGPoint(x: 323.01, y: 264.68), controlPoint1: CGPoint(x: 299.79, y: 189.41), controlPoint2: CGPoint(x: 314.95, y: 224.7))
        bezier2Path.addCurve(to: CGPoint(x: 319.32, y: 421.42), controlPoint1: CGPoint(x: 332.5, y: 311.82), controlPoint2: CGPoint(x: 331.78, y: 364.01))
        bezier2Path.addCurve(to: CGPoint(x: 316.86, y: 432.17), controlPoint1: CGPoint(x: 318.54, y: 424.99), controlPoint2: CGPoint(x: 317.73, y: 428.57))
        bezier2Path.addLine(to: CGPoint(x: 312, y: 431))
        bezier2Path.addLine(to: CGPoint(x: 315.54, y: 427.46))
        bezier2Path.addLine(to: CGPoint(x: 371.54, y: 483.46))
        bezier2Path.addCurve(to: CGPoint(x: 373, y: 487), controlPoint1: CGPoint(x: 372.47, y: 484.4), controlPoint2: CGPoint(x: 373, y: 485.67))
        bezier2Path.addCurve(to: CGPoint(x: 373, y: 490.69), controlPoint1: CGPoint(x: 373, y: 487.67), controlPoint2: CGPoint(x: 373, y: 487.67))
        bezier2Path.addCurve(to: CGPoint(x: 373, y: 500.42), controlPoint1: CGPoint(x: 373, y: 494.72), controlPoint2: CGPoint(x: 373, y: 494.72))
        bezier2Path.addCurve(to: CGPoint(x: 373, y: 529.95), controlPoint1: CGPoint(x: 373, y: 513.85), controlPoint2: CGPoint(x: 373, y: 513.85))
        bezier2Path.addCurve(to: CGPoint(x: 373, y: 570), controlPoint1: CGPoint(x: 373, y: 555.06), controlPoint2: CGPoint(x: 373, y: 555.06))
        bezier2Path.addCurve(to: CGPoint(x: 364.46, y: 573.54), controlPoint1: CGPoint(x: 373, y: 574.45), controlPoint2: CGPoint(x: 367.61, y: 576.69))
        bezier2Path.addCurve(to: CGPoint(x: 322.04, y: 547.05), controlPoint1: CGPoint(x: 355, y: 564.07), controlPoint2: CGPoint(x: 340.38, y: 555.18))
        bezier2Path.addCurve(to: CGPoint(x: 283.36, y: 532.78), controlPoint1: CGPoint(x: 309.76, y: 541.6), controlPoint2: CGPoint(x: 296.56, y: 536.83))
        bezier2Path.addCurve(to: CGPoint(x: 270.61, y: 529.09), controlPoint1: CGPoint(x: 278.74, y: 531.36), controlPoint2: CGPoint(x: 274.45, y: 530.13))
        bezier2Path.addCurve(to: CGPoint(x: 267.06, y: 528.17), controlPoint1: CGPoint(x: 269.27, y: 528.73), controlPoint2: CGPoint(x: 268.08, y: 528.42))
        bezier2Path.addCurve(to: CGPoint(x: 266.13, y: 527.94), controlPoint1: CGPoint(x: 266.7, y: 528.08), controlPoint2: CGPoint(x: 266.39, y: 528))
        bezier2Path.addCurve(to: CGPoint(x: 265.84, y: 527.86), controlPoint1: CGPoint(x: 265.98, y: 527.9), controlPoint2: CGPoint(x: 265.88, y: 527.87))
        bezier2Path.addLine(to: CGPoint(x: 271.27, y: 525.61))
        bezier2Path.addCurve(to: CGPoint(x: 270.7, y: 526.53), controlPoint1: CGPoint(x: 271.17, y: 525.77), controlPoint2: CGPoint(x: 270.98, y: 526.08))
        bezier2Path.addCurve(to: CGPoint(x: 269.12, y: 529.13), controlPoint1: CGPoint(x: 270.25, y: 527.28), controlPoint2: CGPoint(x: 269.72, y: 528.15))
        bezier2Path.addCurve(to: CGPoint(x: 263.45, y: 538.42), controlPoint1: CGPoint(x: 267.41, y: 531.93), controlPoint2: CGPoint(x: 265.5, y: 535.05))
        bezier2Path.addCurve(to: CGPoint(x: 246.26, y: 566.79), controlPoint1: CGPoint(x: 257.59, y: 548.05), controlPoint2: CGPoint(x: 251.73, y: 557.72))
        bezier2Path.addCurve(to: CGPoint(x: 245.69, y: 567.72), controlPoint1: CGPoint(x: 245.97, y: 567.25), controlPoint2: CGPoint(x: 245.97, y: 567.25))
        bezier2Path.addCurve(to: CGPoint(x: 221.72, y: 608.64), controlPoint1: CGPoint(x: 231.8, y: 590.78), controlPoint2: CGPoint(x: 222.31, y: 606.95))
        bezier2Path.addCurve(to: CGPoint(x: 212, y: 607), controlPoint1: CGPoint(x: 219.87, y: 613.96), controlPoint2: CGPoint(x: 212, y: 612.64))
        bezier2Path.addCurve(to: CGPoint(x: 212, y: 480.93), controlPoint1: CGPoint(x: 212, y: 568.56), controlPoint2: CGPoint(x: 212, y: 535.91))
        bezier2Path.addCurve(to: CGPoint(x: 212, y: 431.41), controlPoint1: CGPoint(x: 212, y: 454.27), controlPoint2: CGPoint(x: 212, y: 443.24))
        bezier2Path.addCurve(to: CGPoint(x: 214.8, y: 426.92), controlPoint1: CGPoint(x: 212, y: 429.51), controlPoint2: CGPoint(x: 213.09, y: 427.76))
        bezier2Path.addCurve(to: CGPoint(x: 240, y: 386.5), controlPoint1: CGPoint(x: 230.1, y: 419.41), controlPoint2: CGPoint(x: 240, y: 403.85))
        bezier2Path.addCurve(to: CGPoint(x: 210.61, y: 344.28), controlPoint1: CGPoint(x: 240, y: 367.51), controlPoint2: CGPoint(x: 228.13, y: 350.76))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 341.5), controlPoint1: CGPoint(x: 205.66, y: 342.45), controlPoint2: CGPoint(x: 200.4, y: 341.5))
        bezier2Path.addCurve(to: CGPoint(x: 150, y: 386.5), controlPoint1: CGPoint(x: 170.15, y: 341.5), controlPoint2: CGPoint(x: 150, y: 361.65))
        bezier2Path.addCurve(to: CGPoint(x: 181.5, y: 429.44), controlPoint1: CGPoint(x: 150, y: 406.3), controlPoint2: CGPoint(x: 162.9, y: 423.6))
        bezier2Path.addCurve(to: CGPoint(x: 185, y: 434.21), controlPoint1: CGPoint(x: 183.58, y: 430.1), controlPoint2: CGPoint(x: 185, y: 432.03))
        bezier2Path.addCurve(to: CGPoint(x: 185, y: 577.5), controlPoint1: CGPoint(x: 185, y: 463.86), controlPoint2: CGPoint(x: 185, y: 506.16))
        bezier2Path.addCurve(to: CGPoint(x: 185, y: 607), controlPoint1: CGPoint(x: 185, y: 592.31), controlPoint2: CGPoint(x: 185, y: 592.31))
        bezier2Path.addCurve(to: CGPoint(x: 175.39, y: 608.94), controlPoint1: CGPoint(x: 185, y: 612.45), controlPoint2: CGPoint(x: 177.51, y: 613.97))
        bezier2Path.addCurve(to: CGPoint(x: 157.75, y: 574.25), controlPoint1: CGPoint(x: 169.9, y: 595.92), controlPoint2: CGPoint(x: 164.21, y: 584.87))
        bezier2Path.addCurve(to: CGPoint(x: 140.55, y: 548.53), controlPoint1: CGPoint(x: 153.11, y: 566.63), controlPoint2: CGPoint(x: 152.03, y: 565.04))
        bezier2Path.addCurve(to: CGPoint(x: 125.66, y: 525.49), controlPoint1: CGPoint(x: 133.91, y: 538.99), controlPoint2: CGPoint(x: 129.85, y: 532.77))
        bezier2Path.addLine(to: CGPoint(x: 130.37, y: 527.99))
        bezier2Path.addCurve(to: CGPoint(x: 128.85, y: 528.17), controlPoint1: CGPoint(x: 130.17, y: 528), controlPoint2: CGPoint(x: 129.65, y: 528.06))
        bezier2Path.addCurve(to: CGPoint(x: 123.81, y: 529.05), controlPoint1: CGPoint(x: 127.44, y: 528.36), controlPoint2: CGPoint(x: 125.76, y: 528.65))
        bezier2Path.addCurve(to: CGPoint(x: 104.05, y: 534.71), controlPoint1: CGPoint(x: 118.15, y: 530.22), controlPoint2: CGPoint(x: 111.54, y: 532.06))
        bezier2Path.addCurve(to: CGPoint(x: 31.93, y: 574.06), controlPoint1: CGPoint(x: 82.46, y: 542.37), controlPoint2: CGPoint(x: 58.23, y: 555.08))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 570), controlPoint1: CGPoint(x: 28.62, y: 576.44), controlPoint2: CGPoint(x: 24, y: 574.08))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 530.79), controlPoint1: CGPoint(x: 24, y: 554.53), controlPoint2: CGPoint(x: 24, y: 554.53))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 500.68), controlPoint1: CGPoint(x: 24, y: 514.37), controlPoint2: CGPoint(x: 24, y: 514.37))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 490.76), controlPoint1: CGPoint(x: 24, y: 494.87), controlPoint2: CGPoint(x: 24, y: 494.87))
        bezier2Path.addCurve(to: CGPoint(x: 24, y: 487), controlPoint1: CGPoint(x: 24, y: 487.68), controlPoint2: CGPoint(x: 24, y: 487.68))
        bezier2Path.addCurve(to: CGPoint(x: 25.2, y: 483.75), controlPoint1: CGPoint(x: 24, y: 485.81), controlPoint2: CGPoint(x: 24.43, y: 484.65))
        bezier2Path.addLine(to: CGPoint(x: 73.2, y: 427.75))
        bezier2Path.addLine(to: CGPoint(x: 72.1, y: 432))
        bezier2Path.addCurve(to: CGPoint(x: 67.63, y: 273.82), controlPoint1: CGPoint(x: 60.29, y: 373.85), controlPoint2: CGPoint(x: 59.24, y: 321.2))
        bezier2Path.addCurve(to: CGPoint(x: 108.02, y: 166.26), controlPoint1: CGPoint(x: 74.81, y: 233.24), controlPoint2: CGPoint(x: 88.73, y: 197.46))
        bezier2Path.addCurve(to: CGPoint(x: 130.93, y: 134.35), controlPoint1: CGPoint(x: 115.07, y: 154.86), controlPoint2: CGPoint(x: 122.74, y: 144.23))
        bezier2Path.addCurve(to: CGPoint(x: 174.03, y: 92.72), controlPoint1: CGPoint(x: 144.79, y: 117.63), controlPoint2: CGPoint(x: 159.46, y: 103.82))
        bezier2Path.addCurve(to: CGPoint(x: 188.14, y: 82.86), controlPoint1: CGPoint(x: 179.14, y: 88.83), controlPoint2: CGPoint(x: 183.88, y: 85.55))
        bezier2Path.addCurve(to: CGPoint(x: 193.65, y: 79.59), controlPoint1: CGPoint(x: 190.73, y: 81.23), controlPoint2: CGPoint(x: 192.6, y: 80.14))
        bezier2Path.addCurve(to: CGPoint(x: 198.42, y: 79.62), controlPoint1: CGPoint(x: 195.14, y: 78.79), controlPoint2: CGPoint(x: 196.94, y: 78.81))
        bezier2Path.addLine(to: CGPoint(x: 198.42, y: 79.62))
        bezier2Path.addLine(to: CGPoint(x: 196, y: 84))
        bezier2Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 198.42, y: 79.62))
        bezier2Path.addCurve(to: CGPoint(x: 193.59, y: 88.38), controlPoint1: CGPoint(x: 204.26, y: 82.85), controlPoint2: CGPoint(x: 199.42, y: 91.6))
        bezier2Path.addLine(to: CGPoint(x: 193.58, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 196, y: 84))
        bezier2Path.addLine(to: CGPoint(x: 198.35, y: 88.41))
        bezier2Path.addCurve(to: CGPoint(x: 197.15, y: 89.09), controlPoint1: CGPoint(x: 198.17, y: 88.51), controlPoint2: CGPoint(x: 197.76, y: 88.74))
        bezier2Path.addCurve(to: CGPoint(x: 193.48, y: 91.32), controlPoint1: CGPoint(x: 196.1, y: 89.7), controlPoint2: CGPoint(x: 194.87, y: 90.44))
        bezier2Path.addCurve(to: CGPoint(x: 180.09, y: 100.68), controlPoint1: CGPoint(x: 189.46, y: 93.85), controlPoint2: CGPoint(x: 184.96, y: 96.97))
        bezier2Path.addCurve(to: CGPoint(x: 138.63, y: 140.73), controlPoint1: CGPoint(x: 166.1, y: 111.33), controlPoint2: CGPoint(x: 151.98, y: 124.63))
        bezier2Path.addCurve(to: CGPoint(x: 116.53, y: 171.51), controlPoint1: CGPoint(x: 130.73, y: 150.26), controlPoint2: CGPoint(x: 123.33, y: 160.51))
        bezier2Path.addCurve(to: CGPoint(x: 77.48, y: 275.56), controlPoint1: CGPoint(x: 97.89, y: 201.66), controlPoint2: CGPoint(x: 84.44, y: 236.25))
        bezier2Path.addCurve(to: CGPoint(x: 81.9, y: 430), controlPoint1: CGPoint(x: 69.31, y: 321.68), controlPoint2: CGPoint(x: 70.34, y: 373.07))
        bezier2Path.addCurve(to: CGPoint(x: 80.8, y: 434.25), controlPoint1: CGPoint(x: 82.21, y: 431.52), controlPoint2: CGPoint(x: 81.8, y: 433.08))
        bezier2Path.addLine(to: CGPoint(x: 32.8, y: 490.25))
        bezier2Path.addLine(to: CGPoint(x: 34, y: 487))
        bezier2Path.addCurve(to: CGPoint(x: 34, y: 490.76), controlPoint1: CGPoint(x: 34, y: 487.68), controlPoint2: CGPoint(x: 34, y: 487.68))
        bezier2Path.addCurve(to: CGPoint(x: 34, y: 500.68), controlPoint1: CGPoint(x: 34, y: 494.87), controlPoint2: CGPoint(x: 34, y: 494.87))
        bezier2Path.addCurve(to: CGPoint(x: 34, y: 530.79), controlPoint1: CGPoint(x: 34, y: 514.37), controlPoint2: CGPoint(x: 34, y: 514.37))
        bezier2Path.addCurve(to: CGPoint(x: 34, y: 570), controlPoint1: CGPoint(x: 34, y: 554.53), controlPoint2: CGPoint(x: 34, y: 554.53))
        bezier2Path.addLine(to: CGPoint(x: 26.07, y: 565.94))
        bezier2Path.addCurve(to: CGPoint(x: 100.7, y: 525.29), controlPoint1: CGPoint(x: 53.15, y: 546.42), controlPoint2: CGPoint(x: 78.22, y: 533.26))
        bezier2Path.addCurve(to: CGPoint(x: 121.79, y: 519.26), controlPoint1: CGPoint(x: 108.63, y: 522.48), controlPoint2: CGPoint(x: 115.69, y: 520.52))
        bezier2Path.addCurve(to: CGPoint(x: 127.48, y: 518.26), controlPoint1: CGPoint(x: 123.95, y: 518.81), controlPoint2: CGPoint(x: 125.85, y: 518.49))
        bezier2Path.addCurve(to: CGPoint(x: 129.63, y: 518.01), controlPoint1: CGPoint(x: 128.49, y: 518.12), controlPoint2: CGPoint(x: 129.21, y: 518.05))
        bezier2Path.addCurve(to: CGPoint(x: 134.34, y: 520.51), controlPoint1: CGPoint(x: 131.55, y: 517.87), controlPoint2: CGPoint(x: 133.38, y: 518.84))
        bezier2Path.addCurve(to: CGPoint(x: 148.76, y: 542.82), controlPoint1: CGPoint(x: 138.34, y: 527.49), controlPoint2: CGPoint(x: 142.27, y: 533.5))
        bezier2Path.addCurve(to: CGPoint(x: 166.29, y: 569.05), controlPoint1: CGPoint(x: 160.39, y: 559.54), controlPoint2: CGPoint(x: 161.5, y: 561.18))
        bezier2Path.addCurve(to: CGPoint(x: 184.61, y: 605.06), controlPoint1: CGPoint(x: 173.01, y: 580.08), controlPoint2: CGPoint(x: 178.92, y: 591.58))
        bezier2Path.addLine(to: CGPoint(x: 175, y: 607))
        bezier2Path.addCurve(to: CGPoint(x: 175, y: 577.5), controlPoint1: CGPoint(x: 175, y: 592.31), controlPoint2: CGPoint(x: 175, y: 592.31))
        bezier2Path.addCurve(to: CGPoint(x: 175, y: 434.21), controlPoint1: CGPoint(x: 175, y: 506.16), controlPoint2: CGPoint(x: 175, y: 463.86))
        bezier2Path.addLine(to: CGPoint(x: 178.5, y: 438.98))
        bezier2Path.addCurve(to: CGPoint(x: 140, y: 386.5), controlPoint1: CGPoint(x: 155.77, y: 431.84), controlPoint2: CGPoint(x: 140, y: 410.7))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 331.5), controlPoint1: CGPoint(x: 140, y: 356.12), controlPoint2: CGPoint(x: 164.62, y: 331.5))
        bezier2Path.addCurve(to: CGPoint(x: 214.08, y: 334.9), controlPoint1: CGPoint(x: 201.59, y: 331.5), controlPoint2: CGPoint(x: 208.03, y: 332.66))
        bezier2Path.addCurve(to: CGPoint(x: 250, y: 386.5), controlPoint1: CGPoint(x: 235.49, y: 342.82), controlPoint2: CGPoint(x: 250, y: 363.29))
        bezier2Path.addCurve(to: CGPoint(x: 219.2, y: 435.9), controlPoint1: CGPoint(x: 250, y: 407.7), controlPoint2: CGPoint(x: 237.9, y: 426.73))
        bezier2Path.addLine(to: CGPoint(x: 222, y: 431.41))
        bezier2Path.addCurve(to: CGPoint(x: 222, y: 480.93), controlPoint1: CGPoint(x: 222, y: 443.24), controlPoint2: CGPoint(x: 222, y: 454.27))
        bezier2Path.addCurve(to: CGPoint(x: 222, y: 607), controlPoint1: CGPoint(x: 222, y: 535.91), controlPoint2: CGPoint(x: 222, y: 568.56))
        bezier2Path.addLine(to: CGPoint(x: 212.28, y: 605.36))
        bezier2Path.addCurve(to: CGPoint(x: 237.13, y: 562.56), controlPoint1: CGPoint(x: 213.24, y: 602.58), controlPoint2: CGPoint(x: 221.8, y: 587.99))
        bezier2Path.addCurve(to: CGPoint(x: 237.69, y: 561.63), controlPoint1: CGPoint(x: 237.41, y: 562.09), controlPoint2: CGPoint(x: 237.41, y: 562.09))
        bezier2Path.addCurve(to: CGPoint(x: 254.91, y: 533.22), controlPoint1: CGPoint(x: 243.17, y: 552.54), controlPoint2: CGPoint(x: 249.04, y: 542.86))
        bezier2Path.addCurve(to: CGPoint(x: 260.58, y: 523.91), controlPoint1: CGPoint(x: 256.96, y: 529.85), controlPoint2: CGPoint(x: 258.87, y: 526.72))
        bezier2Path.addCurve(to: CGPoint(x: 262.17, y: 521.31), controlPoint1: CGPoint(x: 261.18, y: 522.93), controlPoint2: CGPoint(x: 261.71, y: 522.06))
        bezier2Path.addCurve(to: CGPoint(x: 262.59, y: 520.63), controlPoint1: CGPoint(x: 262.43, y: 520.9), controlPoint2: CGPoint(x: 262.43, y: 520.9))
        bezier2Path.addCurve(to: CGPoint(x: 262.73, y: 520.39), controlPoint1: CGPoint(x: 262.71, y: 520.43), controlPoint2: CGPoint(x: 262.71, y: 520.43))
        bezier2Path.addCurve(to: CGPoint(x: 268.16, y: 518.14), controlPoint1: CGPoint(x: 263.87, y: 518.54), controlPoint2: CGPoint(x: 266.06, y: 517.63))
        bezier2Path.addCurve(to: CGPoint(x: 268.52, y: 518.22), controlPoint1: CGPoint(x: 268.23, y: 518.15), controlPoint2: CGPoint(x: 268.35, y: 518.18))
        bezier2Path.addCurve(to: CGPoint(x: 269.51, y: 518.47), controlPoint1: CGPoint(x: 268.8, y: 518.29), controlPoint2: CGPoint(x: 269.13, y: 518.38))
        bezier2Path.addCurve(to: CGPoint(x: 273.2, y: 519.44), controlPoint1: CGPoint(x: 270.58, y: 518.74), controlPoint2: CGPoint(x: 271.81, y: 519.06))
        bezier2Path.addCurve(to: CGPoint(x: 286.3, y: 523.22), controlPoint1: CGPoint(x: 277.16, y: 520.5), controlPoint2: CGPoint(x: 281.56, y: 521.76))
        bezier2Path.addCurve(to: CGPoint(x: 326.09, y: 537.9), controlPoint1: CGPoint(x: 299.85, y: 527.38), controlPoint2: CGPoint(x: 313.41, y: 532.28))
        bezier2Path.addCurve(to: CGPoint(x: 371.54, y: 566.46), controlPoint1: CGPoint(x: 345.46, y: 546.49), controlPoint2: CGPoint(x: 361.04, y: 555.97))
        bezier2Path.addLine(to: CGPoint(x: 363, y: 570))
        bezier2Path.addCurve(to: CGPoint(x: 363, y: 529.95), controlPoint1: CGPoint(x: 363, y: 555.06), controlPoint2: CGPoint(x: 363, y: 555.06))
        bezier2Path.addCurve(to: CGPoint(x: 363, y: 500.42), controlPoint1: CGPoint(x: 363, y: 513.85), controlPoint2: CGPoint(x: 363, y: 513.85))
        bezier2Path.addCurve(to: CGPoint(x: 363, y: 490.69), controlPoint1: CGPoint(x: 363, y: 494.72), controlPoint2: CGPoint(x: 363, y: 494.72))
        bezier2Path.addCurve(to: CGPoint(x: 363, y: 487), controlPoint1: CGPoint(x: 363, y: 487.67), controlPoint2: CGPoint(x: 363, y: 487.67))
        bezier2Path.addLine(to: CGPoint(x: 364.46, y: 490.54))
        bezier2Path.addLine(to: CGPoint(x: 308.46, y: 434.54))
        bezier2Path.addCurve(to: CGPoint(x: 307.14, y: 429.83), controlPoint1: CGPoint(x: 307.23, y: 433.31), controlPoint2: CGPoint(x: 306.73, y: 431.52))
        bezier2Path.addCurve(to: CGPoint(x: 309.55, y: 419.3), controlPoint1: CGPoint(x: 307.98, y: 426.3), controlPoint2: CGPoint(x: 308.79, y: 422.79))
        bezier2Path.addCurve(to: CGPoint(x: 313.2, y: 266.65), controlPoint1: CGPoint(x: 321.72, y: 363.22), controlPoint2: CGPoint(x: 322.42, y: 312.42))
        bezier2Path.addCurve(to: CGPoint(x: 270.78, y: 164.18), controlPoint1: CGPoint(x: 305.42, y: 228), controlPoint2: CGPoint(x: 290.77, y: 193.92))
        bezier2Path.addCurve(to: CGPoint(x: 218.71, y: 106.36), controlPoint1: CGPoint(x: 255.23, y: 141.05), controlPoint2: CGPoint(x: 237.37, y: 121.84))
        bezier2Path.addCurve(to: CGPoint(x: 200.47, y: 92.68), controlPoint1: CGPoint(x: 212.19, y: 100.95), controlPoint2: CGPoint(x: 206.05, y: 96.4))
        bezier2Path.addCurve(to: CGPoint(x: 195.32, y: 89.4), controlPoint1: CGPoint(x: 198.53, y: 91.39), controlPoint2: CGPoint(x: 196.81, y: 90.3))
        bezier2Path.addCurve(to: CGPoint(x: 193.99, y: 88.61), controlPoint1: CGPoint(x: 194.81, y: 89.09), controlPoint2: CGPoint(x: 194.37, y: 88.83))
        bezier2Path.addCurve(to: CGPoint(x: 193.67, y: 88.43), controlPoint1: CGPoint(x: 193.87, y: 88.54), controlPoint2: CGPoint(x: 193.76, y: 88.48))
        bezier2Path.addCurve(to: CGPoint(x: 193.6, y: 88.39), controlPoint1: CGPoint(x: 193.63, y: 88.4), controlPoint2: CGPoint(x: 193.63, y: 88.4))
        bezier2Path.addCurve(to: CGPoint(x: 193.59, y: 88.38), controlPoint1: CGPoint(x: 193.59, y: 88.38), controlPoint2: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier2Path.addLine(to: CGPoint(x: 198.42, y: 79.62))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 198.5, y: 79), end: CGPoint(x: 198.5, y: 612.01), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole3(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 202.5, y: 290.5))
        bezier3Path.addCurve(to: CGPoint(x: 183.73, y: 304.14), controlPoint1: CGPoint(x: 202.5, y: 290.5), controlPoint2: CGPoint(x: 194, y: 296.68))
        bezier3Path.addCurve(to: CGPoint(x: 148.29, y: 329.89), controlPoint1: CGPoint(x: 168.07, y: 315.52), controlPoint2: CGPoint(x: 148.29, y: 329.89))
        bezier3Path.addLine(to: CGPoint(x: 169, y: 393.61))
        bezier3Path.addLine(to: CGPoint(x: 236, y: 393.61))
        bezier3Path.addLine(to: CGPoint(x: 256.71, y: 329.89))
        bezier3Path.addLine(to: CGPoint(x: 202.5, y: 290.5))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 202.5, y: 158.5))
        bezier3Path.addCurve(to: CGPoint(x: 269.15, y: 255.76), controlPoint1: CGPoint(x: 202.5, y: 158.5), controlPoint2: CGPoint(x: 269.15, y: 255.76))
        bezier3Path.addLine(to: CGPoint(x: 382.25, y: 289.1))
        bezier3Path.addLine(to: CGPoint(x: 310.35, y: 382.54))
        bezier3Path.addLine(to: CGPoint(x: 313.59, y: 500.4))
        bezier3Path.addLine(to: CGPoint(x: 202.5, y: 460.9))
        bezier3Path.addLine(to: CGPoint(x: 91.41, y: 500.4))
        bezier3Path.addLine(to: CGPoint(x: 94.65, y: 382.54))
        bezier3Path.addLine(to: CGPoint(x: 22.75, y: 289.1))
        bezier3Path.addLine(to: CGPoint(x: 135.85, y: 255.76))
        bezier3Path.addLine(to: CGPoint(x: 202.5, y: 158.5))
        bezier3Path.addLine(to: CGPoint(x: 202.5, y: 158.5))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 202.5, y: 290.5))
        bezier2Path.addCurve(to: CGPoint(x: 183.73, y: 304.14), controlPoint1: CGPoint(x: 202.5, y: 290.5), controlPoint2: CGPoint(x: 194, y: 296.68))
        bezier2Path.addCurve(to: CGPoint(x: 148.29, y: 329.89), controlPoint1: CGPoint(x: 168.07, y: 315.52), controlPoint2: CGPoint(x: 148.29, y: 329.89))
        bezier2Path.addLine(to: CGPoint(x: 169, y: 393.61))
        bezier2Path.addLine(to: CGPoint(x: 236, y: 393.61))
        bezier2Path.addLine(to: CGPoint(x: 256.71, y: 329.89))
        bezier2Path.addLine(to: CGPoint(x: 202.5, y: 290.5))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 202.5, y: 158.5))
        bezier2Path.addCurve(to: CGPoint(x: 269.15, y: 255.76), controlPoint1: CGPoint(x: 202.5, y: 158.5), controlPoint2: CGPoint(x: 269.15, y: 255.76))
        bezier2Path.addLine(to: CGPoint(x: 382.25, y: 289.1))
        bezier2Path.addLine(to: CGPoint(x: 310.35, y: 382.54))
        bezier2Path.addLine(to: CGPoint(x: 313.59, y: 500.4))
        bezier2Path.addLine(to: CGPoint(x: 202.5, y: 460.9))
        bezier2Path.addLine(to: CGPoint(x: 91.41, y: 500.4))
        bezier2Path.addLine(to: CGPoint(x: 94.65, y: 382.54))
        bezier2Path.addLine(to: CGPoint(x: 22.75, y: 289.1))
        bezier2Path.addLine(to: CGPoint(x: 135.85, y: 255.76))
        bezier2Path.addLine(to: CGPoint(x: 202.5, y: 158.5))
        bezier2Path.addLine(to: CGPoint(x: 202.5, y: 158.5))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 23, y: -159, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 204.94, y: 294.05))
        bezierPath.addCurve(to: CGPoint(x: 199.4, y: 298.07), controlPoint1: CGPoint(x: 203.88, y: 294.82), controlPoint2: CGPoint(x: 203.88, y: 294.82))
        bezierPath.addCurve(to: CGPoint(x: 186.17, y: 307.68), controlPoint1: CGPoint(x: 193.65, y: 302.25), controlPoint2: CGPoint(x: 193.65, y: 302.25))
        bezierPath.addCurve(to: CGPoint(x: 177.83, y: 313.74), controlPoint1: CGPoint(x: 182.06, y: 310.67), controlPoint2: CGPoint(x: 182.06, y: 310.67))
        bezierPath.addCurve(to: CGPoint(x: 159.2, y: 327.28), controlPoint1: CGPoint(x: 167.67, y: 321.12), controlPoint2: CGPoint(x: 167.67, y: 321.12))
        bezierPath.addCurve(to: CGPoint(x: 153.06, y: 331.74), controlPoint1: CGPoint(x: 155.6, y: 329.89), controlPoint2: CGPoint(x: 155.6, y: 329.89))
        bezierPath.addCurve(to: CGPoint(x: 150.73, y: 333.43), controlPoint1: CGPoint(x: 151.15, y: 333.12), controlPoint2: CGPoint(x: 151.15, y: 333.12))
        bezierPath.addLine(to: CGPoint(x: 152.55, y: 327.84))
        bezierPath.addLine(to: CGPoint(x: 173.25, y: 391.57))
        bezierPath.addLine(to: CGPoint(x: 168.5, y: 388.11))
        bezierPath.addLine(to: CGPoint(x: 235.5, y: 388.11))
        bezierPath.addLine(to: CGPoint(x: 230.75, y: 391.57))
        bezierPath.addLine(to: CGPoint(x: 251.45, y: 327.84))
        bezierPath.addLine(to: CGPoint(x: 253.27, y: 333.43))
        bezierPath.addLine(to: CGPoint(x: 199.06, y: 294.05))
        bezierPath.addLine(to: CGPoint(x: 204.94, y: 294.05))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 199.06, y: 285.95))
        bezierPath.addCurve(to: CGPoint(x: 204.94, y: 285.95), controlPoint1: CGPoint(x: 200.81, y: 284.68), controlPoint2: CGPoint(x: 203.19, y: 284.68))
        bezierPath.addLine(to: CGPoint(x: 259.15, y: 325.34))
        bezierPath.addCurve(to: CGPoint(x: 260.97, y: 330.93), controlPoint1: CGPoint(x: 260.9, y: 326.61), controlPoint2: CGPoint(x: 261.63, y: 328.87))
        bezierPath.addLine(to: CGPoint(x: 240.26, y: 394.66))
        bezierPath.addCurve(to: CGPoint(x: 235.5, y: 398.11), controlPoint1: CGPoint(x: 239.59, y: 396.72), controlPoint2: CGPoint(x: 237.67, y: 398.11))
        bezierPath.addLine(to: CGPoint(x: 168.5, y: 398.11))
        bezierPath.addCurve(to: CGPoint(x: 163.74, y: 394.66), controlPoint1: CGPoint(x: 166.33, y: 398.11), controlPoint2: CGPoint(x: 164.41, y: 396.72))
        bezierPath.addLine(to: CGPoint(x: 143.03, y: 330.93))
        bezierPath.addCurve(to: CGPoint(x: 144.85, y: 325.34), controlPoint1: CGPoint(x: 142.37, y: 328.87), controlPoint2: CGPoint(x: 143.1, y: 326.61))
        bezierPath.addCurve(to: CGPoint(x: 147.18, y: 323.65), controlPoint1: CGPoint(x: 145.27, y: 325.03), controlPoint2: CGPoint(x: 145.27, y: 325.03))
        bezierPath.addCurve(to: CGPoint(x: 153.32, y: 319.19), controlPoint1: CGPoint(x: 149.72, y: 321.8), controlPoint2: CGPoint(x: 149.72, y: 321.8))
        bezierPath.addCurve(to: CGPoint(x: 171.96, y: 305.65), controlPoint1: CGPoint(x: 161.79, y: 313.03), controlPoint2: CGPoint(x: 161.79, y: 313.03))
        bezierPath.addCurve(to: CGPoint(x: 180.29, y: 299.59), controlPoint1: CGPoint(x: 176.18, y: 302.58), controlPoint2: CGPoint(x: 176.18, y: 302.58))
        bezierPath.addCurve(to: CGPoint(x: 193.53, y: 289.98), controlPoint1: CGPoint(x: 187.77, y: 294.16), controlPoint2: CGPoint(x: 187.77, y: 294.16))
        bezierPath.addCurve(to: CGPoint(x: 199.06, y: 285.95), controlPoint1: CGPoint(x: 198, y: 286.73), controlPoint2: CGPoint(x: 198, y: 286.73))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 197.88, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezierPath.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezierPath.addLine(to: CGPoint(x: 206.13, y: 155.18))
        bezierPath.addCurve(to: CGPoint(x: 206.13, y: 155.18), controlPoint1: CGPoint(x: 206.13, y: 155.18), controlPoint2: CGPoint(x: 206.13, y: 155.18))
        bezierPath.addCurve(to: CGPoint(x: 206.14, y: 155.19), controlPoint1: CGPoint(x: 206.13, y: 155.18), controlPoint2: CGPoint(x: 206.13, y: 155.18))
        bezierPath.addCurve(to: CGPoint(x: 206.17, y: 155.24), controlPoint1: CGPoint(x: 206.15, y: 155.21), controlPoint2: CGPoint(x: 206.15, y: 155.21))
        bezierPath.addCurve(to: CGPoint(x: 206.32, y: 155.45), controlPoint1: CGPoint(x: 206.23, y: 155.33), controlPoint2: CGPoint(x: 206.23, y: 155.33))
        bezierPath.addCurve(to: CGPoint(x: 206.87, y: 156.27), controlPoint1: CGPoint(x: 206.54, y: 155.77), controlPoint2: CGPoint(x: 206.54, y: 155.77))
        bezierPath.addCurve(to: CGPoint(x: 208.99, y: 159.35), controlPoint1: CGPoint(x: 207.72, y: 157.5), controlPoint2: CGPoint(x: 207.72, y: 157.5))
        bezierPath.addCurve(to: CGPoint(x: 216.54, y: 170.37), controlPoint1: CGPoint(x: 212.11, y: 163.91), controlPoint2: CGPoint(x: 212.11, y: 163.91))
        bezierPath.addCurve(to: CGPoint(x: 239.45, y: 203.8), controlPoint1: CGPoint(x: 226.95, y: 185.57), controlPoint2: CGPoint(x: 226.95, y: 185.57))
        bezierPath.addCurve(to: CGPoint(x: 262.36, y: 237.23), controlPoint1: CGPoint(x: 251.95, y: 222.04), controlPoint2: CGPoint(x: 251.95, y: 222.04))
        bezierPath.addCurve(to: CGPoint(x: 269.92, y: 248.25), controlPoint1: CGPoint(x: 266.79, y: 243.69), controlPoint2: CGPoint(x: 266.79, y: 243.69))
        bezierPath.addCurve(to: CGPoint(x: 272.78, y: 252.43), controlPoint1: CGPoint(x: 272.26, y: 251.67), controlPoint2: CGPoint(x: 272.26, y: 251.67))
        bezierPath.addLine(to: CGPoint(x: 270.07, y: 250.46))
        bezierPath.addLine(to: CGPoint(x: 383.16, y: 283.8))
        bezierPath.addCurve(to: CGPoint(x: 385.71, y: 291.64), controlPoint1: CGPoint(x: 386.53, y: 284.79), controlPoint2: CGPoint(x: 387.85, y: 288.86))
        bezierPath.addLine(to: CGPoint(x: 313.81, y: 385.09))
        bezierPath.addLine(to: CGPoint(x: 314.85, y: 381.91))
        bezierPath.addLine(to: CGPoint(x: 318.09, y: 499.77))
        bezierPath.addCurve(to: CGPoint(x: 311.42, y: 504.62), controlPoint1: CGPoint(x: 318.19, y: 503.28), controlPoint2: CGPoint(x: 314.73, y: 505.79))
        bezierPath.addLine(to: CGPoint(x: 200.32, y: 465.11))
        bezierPath.addLine(to: CGPoint(x: 203.68, y: 465.11))
        bezierPath.addLine(to: CGPoint(x: 92.58, y: 504.62))
        bezierPath.addCurve(to: CGPoint(x: 85.91, y: 499.77), controlPoint1: CGPoint(x: 89.27, y: 505.79), controlPoint2: CGPoint(x: 85.81, y: 503.28))
        bezierPath.addLine(to: CGPoint(x: 89.15, y: 381.91))
        bezierPath.addLine(to: CGPoint(x: 90.19, y: 385.09))
        bezierPath.addLine(to: CGPoint(x: 18.29, y: 291.64))
        bezierPath.addCurve(to: CGPoint(x: 20.84, y: 283.8), controlPoint1: CGPoint(x: 16.15, y: 288.86), controlPoint2: CGPoint(x: 17.47, y: 284.79))
        bezierPath.addLine(to: CGPoint(x: 133.93, y: 250.46))
        bezierPath.addLine(to: CGPoint(x: 131.22, y: 252.43))
        bezierPath.addLine(to: CGPoint(x: 197.88, y: 155.17))
        bezierPath.addCurve(to: CGPoint(x: 206.12, y: 155.17), controlPoint1: CGPoint(x: 199.86, y: 152.28), controlPoint2: CGPoint(x: 204.14, y: 152.28))
        bezierPath.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezierPath.addLine(to: CGPoint(x: 202, y: 158))
        bezierPath.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 206.13, y: 155.17))
        bezierPath.addCurve(to: CGPoint(x: 197.88, y: 160.83), controlPoint1: CGPoint(x: 209.89, y: 160.67), controlPoint2: CGPoint(x: 201.65, y: 166.33))
        bezierPath.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 202, y: 158))
        bezierPath.addLine(to: CGPoint(x: 206.12, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 139.47, y: 258.08))
        bezierPath.addCurve(to: CGPoint(x: 136.76, y: 260.05), controlPoint1: CGPoint(x: 138.82, y: 259.03), controlPoint2: CGPoint(x: 137.86, y: 259.73))
        bezierPath.addLine(to: CGPoint(x: 23.66, y: 293.39))
        bezierPath.addLine(to: CGPoint(x: 26.21, y: 285.55))
        bezierPath.addLine(to: CGPoint(x: 98.11, y: 378.99))
        bezierPath.addCurve(to: CGPoint(x: 99.15, y: 382.18), controlPoint1: CGPoint(x: 98.81, y: 379.9), controlPoint2: CGPoint(x: 99.18, y: 381.03))
        bezierPath.addLine(to: CGPoint(x: 95.91, y: 500.04))
        bezierPath.addLine(to: CGPoint(x: 89.23, y: 495.19))
        bezierPath.addLine(to: CGPoint(x: 200.32, y: 455.69))
        bezierPath.addCurve(to: CGPoint(x: 203.68, y: 455.69), controlPoint1: CGPoint(x: 201.41, y: 455.3), controlPoint2: CGPoint(x: 202.59, y: 455.3))
        bezierPath.addLine(to: CGPoint(x: 314.77, y: 495.19))
        bezierPath.addLine(to: CGPoint(x: 308.09, y: 500.04))
        bezierPath.addLine(to: CGPoint(x: 304.85, y: 382.18))
        bezierPath.addCurve(to: CGPoint(x: 305.89, y: 378.99), controlPoint1: CGPoint(x: 304.82, y: 381.03), controlPoint2: CGPoint(x: 305.19, y: 379.9))
        bezierPath.addLine(to: CGPoint(x: 377.79, y: 285.55))
        bezierPath.addLine(to: CGPoint(x: 380.34, y: 293.39))
        bezierPath.addLine(to: CGPoint(x: 267.24, y: 260.05))
        bezierPath.addCurve(to: CGPoint(x: 264.53, y: 258.08), controlPoint1: CGPoint(x: 266.14, y: 259.73), controlPoint2: CGPoint(x: 265.18, y: 259.03))
        bezierPath.addCurve(to: CGPoint(x: 261.67, y: 253.91), controlPoint1: CGPoint(x: 264.01, y: 257.32), controlPoint2: CGPoint(x: 264.01, y: 257.32))
        bezierPath.addCurve(to: CGPoint(x: 254.12, y: 242.89), controlPoint1: CGPoint(x: 258.54, y: 249.35), controlPoint2: CGPoint(x: 258.54, y: 249.35))
        bezierPath.addCurve(to: CGPoint(x: 231.2, y: 209.46), controlPoint1: CGPoint(x: 243.7, y: 227.69), controlPoint2: CGPoint(x: 243.7, y: 227.69))
        bezierPath.addCurve(to: CGPoint(x: 208.29, y: 176.02), controlPoint1: CGPoint(x: 218.71, y: 191.22), controlPoint2: CGPoint(x: 218.71, y: 191.22))
        bezierPath.addCurve(to: CGPoint(x: 200.74, y: 165.01), controlPoint1: CGPoint(x: 203.86, y: 169.57), controlPoint2: CGPoint(x: 203.86, y: 169.57))
        bezierPath.addCurve(to: CGPoint(x: 198.62, y: 161.92), controlPoint1: CGPoint(x: 199.47, y: 163.15), controlPoint2: CGPoint(x: 199.47, y: 163.15))
        bezierPath.addCurve(to: CGPoint(x: 198.07, y: 161.11), controlPoint1: CGPoint(x: 198.29, y: 161.43), controlPoint2: CGPoint(x: 198.29, y: 161.43))
        bezierPath.addCurve(to: CGPoint(x: 197.92, y: 160.9), controlPoint1: CGPoint(x: 197.98, y: 160.98), controlPoint2: CGPoint(x: 197.98, y: 160.98))
        bezierPath.addCurve(to: CGPoint(x: 197.89, y: 160.85), controlPoint1: CGPoint(x: 197.9, y: 160.87), controlPoint2: CGPoint(x: 197.9, y: 160.87))
        bezierPath.addCurve(to: CGPoint(x: 197.88, y: 160.83), controlPoint1: CGPoint(x: 197.88, y: 160.84), controlPoint2: CGPoint(x: 197.88, y: 160.84))
        bezierPath.addCurve(to: CGPoint(x: 197.88, y: 160.83), controlPoint1: CGPoint(x: 197.88, y: 160.83), controlPoint2: CGPoint(x: 197.88, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezierPath.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 202, y: 153), end: CGPoint(x: 202, y: 504.91), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 202, y: 433, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 200, y: 220, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole4(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 189.68, y: 142.54))
        bezier3Path.addCurve(to: CGPoint(x: 213, y: 187), controlPoint1: CGPoint(x: 204.65, y: 146.97), controlPoint2: CGPoint(x: 199.46, y: 179.8))
        bezier3Path.addCurve(to: CGPoint(x: 272.53, y: 187.02), controlPoint1: CGPoint(x: 227.29, y: 194.6), controlPoint2: CGPoint(x: 260.21, y: 176.72))
        bezier3Path.addCurve(to: CGPoint(x: 356, y: 365.5), controlPoint1: CGPoint(x: 323.55, y: 229.67), controlPoint2: CGPoint(x: 356, y: 293.79))
        bezier3Path.addCurve(to: CGPoint(x: 304, y: 427), controlPoint1: CGPoint(x: 356, y: 401.93), controlPoint2: CGPoint(x: 318, y: 383))
        bezier3Path.addCurve(to: CGPoint(x: 294.14, y: 523.44), controlPoint1: CGPoint(x: 294.57, y: 456.64), controlPoint2: CGPoint(x: 309.59, y: 506.75))
        bezier3Path.addCurve(to: CGPoint(x: 123.57, y: 598), controlPoint1: CGPoint(x: 251.69, y: 569.3), controlPoint2: CGPoint(x: 190.98, y: 598))
        bezier3Path.addCurve(to: CGPoint(x: 52, y: 586.77), controlPoint1: CGPoint(x: 98.6, y: 598), controlPoint2: CGPoint(x: 74.55, y: 594.06))
        bezier3Path.addCurve(to: CGPoint(x: 212.85, y: 365.5), controlPoint1: CGPoint(x: 145.34, y: 556.58), controlPoint2: CGPoint(x: 212.85, y: 468.92))
        bezier3Path.addCurve(to: CGPoint(x: 262, y: 301), controlPoint1: CGPoint(x: 212.85, y: 346.81), controlPoint2: CGPoint(x: 276.28, y: 365.8))
        bezier3Path.addCurve(to: CGPoint(x: 190.42, y: 265.71), controlPoint1: CGPoint(x: 249, y: 242), controlPoint2: CGPoint(x: 197.27, y: 280.12))
        bezier3Path.addCurve(to: CGPoint(x: 52, y: 144.23), controlPoint1: CGPoint(x: 163.14, y: 208.39), controlPoint2: CGPoint(x: 113.11, y: 164))
        bezier3Path.addCurve(to: CGPoint(x: 121.88, y: 133.01), controlPoint1: CGPoint(x: 74.03, y: 137.11), controlPoint2: CGPoint(x: 97.51, y: 133.18))
        bezier3Path.addCurve(to: CGPoint(x: 123.57, y: 133), controlPoint1: CGPoint(x: 122.44, y: 133), controlPoint2: CGPoint(x: 123.01, y: 133))
        bezier3Path.addCurve(to: CGPoint(x: 189.68, y: 142.54), controlPoint1: CGPoint(x: 146.54, y: 133), controlPoint2: CGPoint(x: 168.73, y: 136.33))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 189.68, y: 142.54))
        bezier2Path.addCurve(to: CGPoint(x: 213, y: 187), controlPoint1: CGPoint(x: 204.65, y: 146.97), controlPoint2: CGPoint(x: 199.46, y: 179.8))
        bezier2Path.addCurve(to: CGPoint(x: 272.53, y: 187.02), controlPoint1: CGPoint(x: 227.29, y: 194.6), controlPoint2: CGPoint(x: 260.21, y: 176.72))
        bezier2Path.addCurve(to: CGPoint(x: 356, y: 365.5), controlPoint1: CGPoint(x: 323.55, y: 229.67), controlPoint2: CGPoint(x: 356, y: 293.79))
        bezier2Path.addCurve(to: CGPoint(x: 304, y: 427), controlPoint1: CGPoint(x: 356, y: 401.93), controlPoint2: CGPoint(x: 318, y: 383))
        bezier2Path.addCurve(to: CGPoint(x: 294.14, y: 523.44), controlPoint1: CGPoint(x: 294.57, y: 456.64), controlPoint2: CGPoint(x: 309.59, y: 506.75))
        bezier2Path.addCurve(to: CGPoint(x: 123.57, y: 598), controlPoint1: CGPoint(x: 251.69, y: 569.3), controlPoint2: CGPoint(x: 190.98, y: 598))
        bezier2Path.addCurve(to: CGPoint(x: 52, y: 586.77), controlPoint1: CGPoint(x: 98.6, y: 598), controlPoint2: CGPoint(x: 74.55, y: 594.06))
        bezier2Path.addCurve(to: CGPoint(x: 212.85, y: 365.5), controlPoint1: CGPoint(x: 145.34, y: 556.58), controlPoint2: CGPoint(x: 212.85, y: 468.92))
        bezier2Path.addCurve(to: CGPoint(x: 262, y: 301), controlPoint1: CGPoint(x: 212.85, y: 346.81), controlPoint2: CGPoint(x: 276.28, y: 365.8))
        bezier2Path.addCurve(to: CGPoint(x: 190.42, y: 265.71), controlPoint1: CGPoint(x: 249, y: 242), controlPoint2: CGPoint(x: 197.27, y: 280.12))
        bezier2Path.addCurve(to: CGPoint(x: 52, y: 144.23), controlPoint1: CGPoint(x: 163.14, y: 208.39), controlPoint2: CGPoint(x: 113.11, y: 164))
        bezier2Path.addCurve(to: CGPoint(x: 121.88, y: 133.01), controlPoint1: CGPoint(x: 74.03, y: 137.11), controlPoint2: CGPoint(x: 97.51, y: 133.18))
        bezier2Path.addCurve(to: CGPoint(x: 123.57, y: 133), controlPoint1: CGPoint(x: 122.44, y: 133), controlPoint2: CGPoint(x: 123.01, y: 133))
        bezier2Path.addCurve(to: CGPoint(x: 189.68, y: 142.54), controlPoint1: CGPoint(x: 146.54, y: 133), controlPoint2: CGPoint(x: 168.73, y: 136.33))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 52, y: -133, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 191.1, y: 137.74))
        bezierPath.addCurve(to: CGPoint(x: 202.48, y: 148.68), controlPoint1: CGPoint(x: 196.28, y: 139.28), controlPoint2: CGPoint(x: 199.9, y: 143.06))
        bezierPath.addCurve(to: CGPoint(x: 206.99, y: 163.66), controlPoint1: CGPoint(x: 204.21, y: 152.46), controlPoint2: CGPoint(x: 205.17, y: 155.87))
        bezierPath.addCurve(to: CGPoint(x: 207.09, y: 164.08), controlPoint1: CGPoint(x: 207.04, y: 163.87), controlPoint2: CGPoint(x: 207.04, y: 163.87))
        bezierPath.addCurve(to: CGPoint(x: 215.35, y: 182.59), controlPoint1: CGPoint(x: 209.9, y: 176.11), controlPoint2: CGPoint(x: 211.83, y: 180.72))
        bezierPath.addCurve(to: CGPoint(x: 240.8, y: 181.43), controlPoint1: CGPoint(x: 219.51, y: 184.8), controlPoint2: CGPoint(x: 225.7, y: 184.36))
        bezierPath.addCurve(to: CGPoint(x: 240.81, y: 181.43), controlPoint1: CGPoint(x: 240.81, y: 181.43), controlPoint2: CGPoint(x: 240.81, y: 181.43))
        bezierPath.addCurve(to: CGPoint(x: 259.08, y: 178.77), controlPoint1: CGPoint(x: 250.18, y: 179.6), controlPoint2: CGPoint(x: 254.26, y: 178.95))
        bezierPath.addCurve(to: CGPoint(x: 275.74, y: 183.18), controlPoint1: CGPoint(x: 266.11, y: 178.49), controlPoint2: CGPoint(x: 271.6, y: 179.72))
        bezierPath.addCurve(to: CGPoint(x: 361, y: 365.5), controlPoint1: CGPoint(x: 329.39, y: 228.03), controlPoint2: CGPoint(x: 361, y: 294.19))
        bezierPath.addCurve(to: CGPoint(x: 354.37, y: 386.73), controlPoint1: CGPoint(x: 361, y: 374.65), controlPoint2: CGPoint(x: 358.81, y: 381.48))
        bezierPath.addCurve(to: CGPoint(x: 339.54, y: 396.91), controlPoint1: CGPoint(x: 350.88, y: 390.85), controlPoint2: CGPoint(x: 346.87, y: 393.4))
        bezierPath.addCurve(to: CGPoint(x: 334.67, y: 399.23), controlPoint1: CGPoint(x: 339.28, y: 397.04), controlPoint2: CGPoint(x: 335.72, y: 398.72))
        bezierPath.addCurve(to: CGPoint(x: 329.89, y: 401.7), controlPoint1: CGPoint(x: 332.84, y: 400.12), controlPoint2: CGPoint(x: 331.32, y: 400.9))
        bezierPath.addCurve(to: CGPoint(x: 308.76, y: 428.52), controlPoint1: CGPoint(x: 319.61, y: 407.44), controlPoint2: CGPoint(x: 313.09, y: 414.92))
        bezierPath.addCurve(to: CGPoint(x: 305.83, y: 466.52), controlPoint1: CGPoint(x: 305.9, y: 437.52), controlPoint2: CGPoint(x: 305.24, y: 448.55))
        bezierPath.addCurve(to: CGPoint(x: 306.09, y: 473.81), controlPoint1: CGPoint(x: 305.89, y: 468.56), controlPoint2: CGPoint(x: 305.96, y: 470.33))
        bezierPath.addCurve(to: CGPoint(x: 306.12, y: 503.43), controlPoint1: CGPoint(x: 306.71, y: 489.57), controlPoint2: CGPoint(x: 306.78, y: 495.95))
        bezierPath.addCurve(to: CGPoint(x: 297.81, y: 526.84), controlPoint1: CGPoint(x: 305.19, y: 513.88), controlPoint2: CGPoint(x: 302.71, y: 521.55))
        bezierPath.addCurve(to: CGPoint(x: 123.57, y: 603), controlPoint1: CGPoint(x: 253.16, y: 575.07), controlPoint2: CGPoint(x: 190.6, y: 603))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 591.52), controlPoint1: CGPoint(x: 98.47, y: 603), controlPoint2: CGPoint(x: 73.88, y: 599.1))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 582.01), controlPoint1: CGPoint(x: 45.85, y: 590.03), controlPoint2: CGPoint(x: 45.85, y: 583.5))
        bezierPath.addCurve(to: CGPoint(x: 207.85, y: 365.5), controlPoint1: CGPoint(x: 143.54, y: 551.9), controlPoint2: CGPoint(x: 207.85, y: 464.9))
        bezierPath.addCurve(to: CGPoint(x: 214.3, y: 354.8), controlPoint1: CGPoint(x: 207.85, y: 360.86), controlPoint2: CGPoint(x: 210.21, y: 357.29))
        bezierPath.addCurve(to: CGPoint(x: 225.64, y: 350.53), controlPoint1: CGPoint(x: 217.04, y: 353.13), controlPoint2: CGPoint(x: 220.22, y: 352))
        bezierPath.addCurve(to: CGPoint(x: 231.25, y: 349.03), controlPoint1: CGPoint(x: 226.44, y: 350.31), controlPoint2: CGPoint(x: 230.21, y: 349.31))
        bezierPath.addCurve(to: CGPoint(x: 236.91, y: 347.35), controlPoint1: CGPoint(x: 233.44, y: 348.43), controlPoint2: CGPoint(x: 235.22, y: 347.91))
        bezierPath.addCurve(to: CGPoint(x: 254.86, y: 335.31), controlPoint1: CGPoint(x: 245.58, y: 344.51), controlPoint2: CGPoint(x: 251.27, y: 340.91))
        bezierPath.addCurve(to: CGPoint(x: 257.12, y: 302.08), controlPoint1: CGPoint(x: 259.44, y: 328.14), controlPoint2: CGPoint(x: 260.51, y: 317.48))
        bezierPath.addCurve(to: CGPoint(x: 227.13, y: 271.65), controlPoint1: CGPoint(x: 252.32, y: 280.31), controlPoint2: CGPoint(x: 242.61, y: 272.22))
        bezierPath.addCurve(to: CGPoint(x: 211.32, y: 272.89), controlPoint1: CGPoint(x: 222.66, y: 271.49), controlPoint2: CGPoint(x: 218.4, y: 271.87))
        bezierPath.addCurve(to: CGPoint(x: 197.58, y: 274.25), controlPoint1: CGPoint(x: 202.5, y: 274.16), controlPoint2: CGPoint(x: 200.87, y: 274.35))
        bezierPath.addCurve(to: CGPoint(x: 185.9, y: 267.86), controlPoint1: CGPoint(x: 192.08, y: 274.09), controlPoint2: CGPoint(x: 187.99, y: 272.25))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 148.99), controlPoint1: CGPoint(x: 159.08, y: 211.48), controlPoint2: CGPoint(x: 109.94, y: 168.23))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 139.48), controlPoint1: CGPoint(x: 45.85, y: 147.5), controlPoint2: CGPoint(x: 45.85, y: 140.97))
        bezierPath.addCurve(to: CGPoint(x: 121.84, y: 128.01), controlPoint1: CGPoint(x: 73.34, y: 132.08), controlPoint2: CGPoint(x: 97.33, y: 128.18))
        bezierPath.addCurve(to: CGPoint(x: 123.57, y: 128), controlPoint1: CGPoint(x: 122.42, y: 128), controlPoint2: CGPoint(x: 123, y: 128))
        bezierPath.addCurve(to: CGPoint(x: 191.1, y: 137.74), controlPoint1: CGPoint(x: 146.69, y: 128), controlPoint2: CGPoint(x: 169.36, y: 131.31))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 188.26, y: 147.33))
        bezierPath.addCurve(to: CGPoint(x: 123.57, y: 138), controlPoint1: CGPoint(x: 167.44, y: 141.17), controlPoint2: CGPoint(x: 145.72, y: 138))
        bezierPath.addCurve(to: CGPoint(x: 121.91, y: 138.01), controlPoint1: CGPoint(x: 123.02, y: 138), controlPoint2: CGPoint(x: 122.47, y: 138))
        bezierPath.addCurve(to: CGPoint(x: 53.54, y: 148.99), controlPoint1: CGPoint(x: 98.43, y: 138.17), controlPoint2: CGPoint(x: 75.45, y: 141.9))
        bezierPath.addLine(to: CGPoint(x: 53.54, y: 139.48))
        bezierPath.addCurve(to: CGPoint(x: 194.93, y: 263.57), controlPoint1: CGPoint(x: 115.64, y: 159.56), controlPoint2: CGPoint(x: 166.93, y: 204.7))
        bezierPath.addCurve(to: CGPoint(x: 195.25, y: 263.84), controlPoint1: CGPoint(x: 194.99, y: 263.7), controlPoint2: CGPoint(x: 195.03, y: 263.74))
        bezierPath.addCurve(to: CGPoint(x: 197.86, y: 264.26), controlPoint1: CGPoint(x: 195.76, y: 264.06), controlPoint2: CGPoint(x: 196.62, y: 264.22))
        bezierPath.addCurve(to: CGPoint(x: 209.9, y: 262.99), controlPoint1: CGPoint(x: 200.31, y: 264.33), controlPoint2: CGPoint(x: 201.88, y: 264.14))
        bezierPath.addCurve(to: CGPoint(x: 227.49, y: 261.66), controlPoint1: CGPoint(x: 217.53, y: 261.9), controlPoint2: CGPoint(x: 222.26, y: 261.47))
        bezierPath.addCurve(to: CGPoint(x: 266.88, y: 299.92), controlPoint1: CGPoint(x: 247.52, y: 262.39), controlPoint2: CGPoint(x: 261.11, y: 273.7))
        bezierPath.addCurve(to: CGPoint(x: 263.28, y: 340.69), controlPoint1: CGPoint(x: 270.8, y: 317.71), controlPoint2: CGPoint(x: 269.46, y: 331.03))
        bezierPath.addCurve(to: CGPoint(x: 240.03, y: 356.86), controlPoint1: CGPoint(x: 258.24, y: 348.59), controlPoint2: CGPoint(x: 250.68, y: 353.36))
        bezierPath.addCurve(to: CGPoint(x: 233.88, y: 358.68), controlPoint1: CGPoint(x: 238.16, y: 357.47), controlPoint2: CGPoint(x: 236.22, y: 358.04))
        bezierPath.addCurve(to: CGPoint(x: 228.26, y: 360.18), controlPoint1: CGPoint(x: 232.79, y: 358.97), controlPoint2: CGPoint(x: 229.02, y: 359.97))
        bezierPath.addCurve(to: CGPoint(x: 217.85, y: 365.5), controlPoint1: CGPoint(x: 220.16, y: 362.38), controlPoint2: CGPoint(x: 217.85, y: 363.79))
        bezierPath.addCurve(to: CGPoint(x: 53.54, y: 591.52), controlPoint1: CGPoint(x: 217.85, y: 469.27), controlPoint2: CGPoint(x: 150.71, y: 560.09))
        bezierPath.addLine(to: CGPoint(x: 53.54, y: 582.01))
        bezierPath.addCurve(to: CGPoint(x: 123.57, y: 593), controlPoint1: CGPoint(x: 75.96, y: 589.26), controlPoint2: CGPoint(x: 99.51, y: 593))
        bezierPath.addCurve(to: CGPoint(x: 290.47, y: 520.04), controlPoint1: CGPoint(x: 187.78, y: 593), controlPoint2: CGPoint(x: 247.69, y: 566.25))
        bezierPath.addCurve(to: CGPoint(x: 296.16, y: 502.54), controlPoint1: CGPoint(x: 293.56, y: 516.71), controlPoint2: CGPoint(x: 295.41, y: 510.99))
        bezierPath.addCurve(to: CGPoint(x: 296.1, y: 474.2), controlPoint1: CGPoint(x: 296.77, y: 495.65), controlPoint2: CGPoint(x: 296.7, y: 489.49))
        bezierPath.addCurve(to: CGPoint(x: 295.83, y: 466.84), controlPoint1: CGPoint(x: 295.97, y: 470.7), controlPoint2: CGPoint(x: 295.9, y: 468.92))
        bezierPath.addCurve(to: CGPoint(x: 299.24, y: 425.48), controlPoint1: CGPoint(x: 295.21, y: 447.78), controlPoint2: CGPoint(x: 295.92, y: 435.91))
        bezierPath.addCurve(to: CGPoint(x: 325.01, y: 392.97), controlPoint1: CGPoint(x: 304.37, y: 409.35), controlPoint2: CGPoint(x: 312.6, y: 399.9))
        bezierPath.addCurve(to: CGPoint(x: 330.31, y: 390.23), controlPoint1: CGPoint(x: 326.64, y: 392.06), controlPoint2: CGPoint(x: 328.31, y: 391.2))
        bezierPath.addCurve(to: CGPoint(x: 335.23, y: 387.89), controlPoint1: CGPoint(x: 331.41, y: 389.7), controlPoint2: CGPoint(x: 335, y: 388))
        bezierPath.addCurve(to: CGPoint(x: 346.74, y: 380.27), controlPoint1: CGPoint(x: 341.36, y: 384.95), controlPoint2: CGPoint(x: 344.42, y: 383.01))
        bezierPath.addCurve(to: CGPoint(x: 351, y: 365.5), controlPoint1: CGPoint(x: 349.54, y: 376.95), controlPoint2: CGPoint(x: 351, y: 372.41))
        bezierPath.addCurve(to: CGPoint(x: 269.33, y: 190.85), controlPoint1: CGPoint(x: 351, y: 297.19), controlPoint2: CGPoint(x: 320.73, y: 233.82))
        bezierPath.addCurve(to: CGPoint(x: 242.72, y: 191.24), controlPoint1: CGPoint(x: 265.67, y: 187.8), controlPoint2: CGPoint(x: 259.11, y: 188.05))
        bezierPath.addCurve(to: CGPoint(x: 242.71, y: 191.24), controlPoint1: CGPoint(x: 242.72, y: 191.24), controlPoint2: CGPoint(x: 242.72, y: 191.24))
        bezierPath.addCurve(to: CGPoint(x: 226.16, y: 193.81), controlPoint1: CGPoint(x: 234.26, y: 192.89), controlPoint2: CGPoint(x: 230.57, y: 193.5))
        bezierPath.addCurve(to: CGPoint(x: 210.65, y: 191.41), controlPoint1: CGPoint(x: 219.84, y: 194.25), controlPoint2: CGPoint(x: 214.79, y: 193.61))
        bezierPath.addCurve(to: CGPoint(x: 201.4, y: 180.21), controlPoint1: CGPoint(x: 206.5, y: 189.2), controlPoint2: CGPoint(x: 203.59, y: 185.43))
        bezierPath.addCurve(to: CGPoint(x: 197.35, y: 166.36), controlPoint1: CGPoint(x: 199.89, y: 176.61), controlPoint2: CGPoint(x: 198.98, y: 173.34))
        bezierPath.addCurve(to: CGPoint(x: 197.26, y: 165.93), controlPoint1: CGPoint(x: 197.3, y: 166.14), controlPoint2: CGPoint(x: 197.3, y: 166.14))
        bezierPath.addCurve(to: CGPoint(x: 188.26, y: 147.33), controlPoint1: CGPoint(x: 194.22, y: 152.95), controlPoint2: CGPoint(x: 192.17, y: 148.49))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 204, y: 128), end: CGPoint(x: 204, y: 603), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 173, y: 555, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 162, y: 174, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole5(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 202.5, y: 348.5))
        bezier3Path.addCurve(to: CGPoint(x: 186.74, y: 359.95), controlPoint1: CGPoint(x: 202.5, y: 348.5), controlPoint2: CGPoint(x: 195.35, y: 353.69))
        bezier3Path.addCurve(to: CGPoint(x: 157.32, y: 381.32), controlPoint1: CGPoint(x: 173.71, y: 369.42), controlPoint2: CGPoint(x: 157.32, y: 381.32))
        bezier3Path.addLine(to: CGPoint(x: 174.58, y: 434.43))
        bezier3Path.addLine(to: CGPoint(x: 230.42, y: 434.43))
        bezier3Path.addLine(to: CGPoint(x: 247.68, y: 381.32))
        bezier3Path.addLine(to: CGPoint(x: 202.5, y: 348.5))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 105.23, y: 141))
        bezier3Path.addCurve(to: CGPoint(x: 179.74, y: 184.09), controlPoint1: CGPoint(x: 105.23, y: 141), controlPoint2: CGPoint(x: 179.74, y: 184.09))
        bezier3Path.addCurve(to: CGPoint(x: 179.74, y: 268.55), controlPoint1: CGPoint(x: 179.74, y: 184.09), controlPoint2: CGPoint(x: 179.74, y: 256.39))
        bezier3Path.addCurve(to: CGPoint(x: 202.16, y: 255.62), controlPoint1: CGPoint(x: 193.02, y: 260.89), controlPoint2: CGPoint(x: 202.16, y: 255.62))
        bezier3Path.addCurve(to: CGPoint(x: 225.47, y: 269.06), controlPoint1: CGPoint(x: 202.16, y: 255.62), controlPoint2: CGPoint(x: 211.72, y: 261.13))
        bezier3Path.addCurve(to: CGPoint(x: 225.47, y: 184.09), controlPoint1: CGPoint(x: 225.47, y: 258.6), controlPoint2: CGPoint(x: 225.47, y: 184.09))
        bezier3Path.addLine(to: CGPoint(x: 299.99, y: 141))
        bezier3Path.addLine(to: CGPoint(x: 374.5, y: 184.09))
        bezier3Path.addLine(to: CGPoint(x: 374.5, y: 270.28))
        bezier3Path.addCurve(to: CGPoint(x: 301.13, y: 312.71), controlPoint1: CGPoint(x: 374.5, y: 270.28), controlPoint2: CGPoint(x: 310.53, y: 307.27))
        bezier3Path.addCurve(to: CGPoint(x: 323.85, y: 325.81), controlPoint1: CGPoint(x: 314.57, y: 320.46), controlPoint2: CGPoint(x: 323.85, y: 325.81))
        bezier3Path.addLine(to: CGPoint(x: 323.85, y: 466.19))
        bezier3Path.addCurve(to: CGPoint(x: 301.13, y: 479.29), controlPoint1: CGPoint(x: 323.85, y: 466.19), controlPoint2: CGPoint(x: 314.57, y: 471.54))
        bezier3Path.addCurve(to: CGPoint(x: 374.5, y: 521.72), controlPoint1: CGPoint(x: 310.53, y: 484.73), controlPoint2: CGPoint(x: 374.5, y: 521.72))
        bezier3Path.addLine(to: CGPoint(x: 374.5, y: 607.91))
        bezier3Path.addLine(to: CGPoint(x: 299.99, y: 651))
        bezier3Path.addLine(to: CGPoint(x: 225.47, y: 607.91))
        bezier3Path.addCurve(to: CGPoint(x: 225.47, y: 522.94), controlPoint1: CGPoint(x: 225.47, y: 607.91), controlPoint2: CGPoint(x: 225.47, y: 533.4))
        bezier3Path.addCurve(to: CGPoint(x: 202.16, y: 536.38), controlPoint1: CGPoint(x: 211.72, y: 530.87), controlPoint2: CGPoint(x: 202.16, y: 536.38))
        bezier3Path.addCurve(to: CGPoint(x: 179.74, y: 523.45), controlPoint1: CGPoint(x: 202.16, y: 536.38), controlPoint2: CGPoint(x: 193.02, y: 531.11))
        bezier3Path.addCurve(to: CGPoint(x: 179.74, y: 607.91), controlPoint1: CGPoint(x: 179.74, y: 535.61), controlPoint2: CGPoint(x: 179.74, y: 607.91))
        bezier3Path.addLine(to: CGPoint(x: 105.23, y: 651))
        bezier3Path.addLine(to: CGPoint(x: 30.71, y: 607.91))
        bezier3Path.addLine(to: CGPoint(x: 30.71, y: 521.72))
        bezier3Path.addCurve(to: CGPoint(x: 103.63, y: 479.55), controlPoint1: CGPoint(x: 30.71, y: 521.72), controlPoint2: CGPoint(x: 92.83, y: 485.8))
        bezier3Path.addCurve(to: CGPoint(x: 80.47, y: 466.19), controlPoint1: CGPoint(x: 89.96, y: 471.66), controlPoint2: CGPoint(x: 80.47, y: 466.19))
        bezier3Path.addLine(to: CGPoint(x: 80.47, y: 325.81))
        bezier3Path.addCurve(to: CGPoint(x: 103.63, y: 312.45), controlPoint1: CGPoint(x: 80.47, y: 325.81), controlPoint2: CGPoint(x: 89.96, y: 320.34))
        bezier3Path.addCurve(to: CGPoint(x: 30.71, y: 270.28), controlPoint1: CGPoint(x: 92.83, y: 306.2), controlPoint2: CGPoint(x: 30.71, y: 270.28))
        bezier3Path.addLine(to: CGPoint(x: 30.71, y: 184.09))
        bezier3Path.addCurve(to: CGPoint(x: 71.8, y: 160.33), controlPoint1: CGPoint(x: 30.71, y: 184.09), controlPoint2: CGPoint(x: 51.99, y: 171.79))
        bezier3Path.addCurve(to: CGPoint(x: 105.23, y: 141), controlPoint1: CGPoint(x: 89.07, y: 150.34), controlPoint2: CGPoint(x: 105.23, y: 141))
        bezier3Path.addLine(to: CGPoint(x: 105.23, y: 141))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 203, y: 348.5))
        bezierPath.addCurve(to: CGPoint(x: 187.24, y: 359.95), controlPoint1: CGPoint(x: 203, y: 348.5), controlPoint2: CGPoint(x: 195.85, y: 353.69))
        bezierPath.addCurve(to: CGPoint(x: 157.82, y: 381.32), controlPoint1: CGPoint(x: 174.21, y: 369.42), controlPoint2: CGPoint(x: 157.82, y: 381.32))
        bezierPath.addLine(to: CGPoint(x: 175.08, y: 434.43))
        bezierPath.addLine(to: CGPoint(x: 230.92, y: 434.43))
        bezierPath.addLine(to: CGPoint(x: 248.18, y: 381.32))
        bezierPath.addLine(to: CGPoint(x: 203, y: 348.5))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 105.73, y: 141))
        bezierPath.addCurve(to: CGPoint(x: 180.24, y: 184.09), controlPoint1: CGPoint(x: 105.73, y: 141), controlPoint2: CGPoint(x: 180.24, y: 184.09))
        bezierPath.addCurve(to: CGPoint(x: 180.24, y: 268.55), controlPoint1: CGPoint(x: 180.24, y: 184.09), controlPoint2: CGPoint(x: 180.24, y: 256.39))
        bezierPath.addCurve(to: CGPoint(x: 202.66, y: 255.62), controlPoint1: CGPoint(x: 193.52, y: 260.89), controlPoint2: CGPoint(x: 202.66, y: 255.62))
        bezierPath.addCurve(to: CGPoint(x: 225.97, y: 269.06), controlPoint1: CGPoint(x: 202.66, y: 255.62), controlPoint2: CGPoint(x: 212.22, y: 261.13))
        bezierPath.addCurve(to: CGPoint(x: 225.97, y: 184.09), controlPoint1: CGPoint(x: 225.97, y: 258.6), controlPoint2: CGPoint(x: 225.97, y: 184.09))
        bezierPath.addCurve(to: CGPoint(x: 230.57, y: 181.44), controlPoint1: CGPoint(x: 225.97, y: 184.09), controlPoint2: CGPoint(x: 227.67, y: 183.11))
        bezierPath.addCurve(to: CGPoint(x: 300.49, y: 141), controlPoint1: CGPoint(x: 246.8, y: 172.05), controlPoint2: CGPoint(x: 300.49, y: 141))
        bezierPath.addLine(to: CGPoint(x: 375, y: 184.09))
        bezierPath.addLine(to: CGPoint(x: 375, y: 270.28))
        bezierPath.addCurve(to: CGPoint(x: 301.63, y: 312.71), controlPoint1: CGPoint(x: 375, y: 270.28), controlPoint2: CGPoint(x: 311.03, y: 307.27))
        bezierPath.addCurve(to: CGPoint(x: 324.35, y: 325.81), controlPoint1: CGPoint(x: 315.07, y: 320.46), controlPoint2: CGPoint(x: 324.35, y: 325.81))
        bezierPath.addLine(to: CGPoint(x: 324.35, y: 466.19))
        bezierPath.addCurve(to: CGPoint(x: 301.63, y: 479.29), controlPoint1: CGPoint(x: 324.35, y: 466.19), controlPoint2: CGPoint(x: 315.07, y: 471.54))
        bezierPath.addCurve(to: CGPoint(x: 375, y: 521.72), controlPoint1: CGPoint(x: 311.03, y: 484.73), controlPoint2: CGPoint(x: 375, y: 521.72))
        bezierPath.addLine(to: CGPoint(x: 375, y: 607.91))
        bezierPath.addLine(to: CGPoint(x: 300.49, y: 651))
        bezierPath.addLine(to: CGPoint(x: 225.97, y: 607.91))
        bezierPath.addCurve(to: CGPoint(x: 225.97, y: 522.94), controlPoint1: CGPoint(x: 225.97, y: 607.91), controlPoint2: CGPoint(x: 225.97, y: 533.4))
        bezierPath.addCurve(to: CGPoint(x: 202.66, y: 536.38), controlPoint1: CGPoint(x: 212.22, y: 530.87), controlPoint2: CGPoint(x: 202.66, y: 536.38))
        bezierPath.addCurve(to: CGPoint(x: 180.24, y: 523.45), controlPoint1: CGPoint(x: 202.66, y: 536.38), controlPoint2: CGPoint(x: 193.52, y: 531.11))
        bezierPath.addCurve(to: CGPoint(x: 180.24, y: 607.91), controlPoint1: CGPoint(x: 180.24, y: 535.61), controlPoint2: CGPoint(x: 180.24, y: 607.91))
        bezierPath.addLine(to: CGPoint(x: 105.73, y: 651))
        bezierPath.addLine(to: CGPoint(x: 31.21, y: 607.91))
        bezierPath.addLine(to: CGPoint(x: 31.21, y: 521.72))
        bezierPath.addCurve(to: CGPoint(x: 104.13, y: 479.55), controlPoint1: CGPoint(x: 31.21, y: 521.72), controlPoint2: CGPoint(x: 93.33, y: 485.8))
        bezierPath.addCurve(to: CGPoint(x: 80.97, y: 466.19), controlPoint1: CGPoint(x: 90.46, y: 471.66), controlPoint2: CGPoint(x: 80.97, y: 466.19))
        bezierPath.addLine(to: CGPoint(x: 80.97, y: 325.81))
        bezierPath.addCurve(to: CGPoint(x: 104.13, y: 312.45), controlPoint1: CGPoint(x: 80.97, y: 325.81), controlPoint2: CGPoint(x: 90.46, y: 320.34))
        bezierPath.addCurve(to: CGPoint(x: 31.21, y: 270.28), controlPoint1: CGPoint(x: 93.33, y: 306.2), controlPoint2: CGPoint(x: 31.21, y: 270.28))
        bezierPath.addLine(to: CGPoint(x: 31.21, y: 184.09))
        bezierPath.addCurve(to: CGPoint(x: 72.3, y: 160.33), controlPoint1: CGPoint(x: 31.21, y: 184.09), controlPoint2: CGPoint(x: 52.49, y: 171.79))
        bezierPath.addCurve(to: CGPoint(x: 105.73, y: 141), controlPoint1: CGPoint(x: 89.57, y: 150.34), controlPoint2: CGPoint(x: 105.73, y: 141))
        bezierPath.addLine(to: CGPoint(x: 105.73, y: 141))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 31, y: -141, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 205.94, y: 352.55))
        bezier2Path.addCurve(to: CGPoint(x: 201.29, y: 355.92), controlPoint1: CGPoint(x: 205.05, y: 353.19), controlPoint2: CGPoint(x: 205.05, y: 353.19))
        bezier2Path.addCurve(to: CGPoint(x: 190.18, y: 364), controlPoint1: CGPoint(x: 196.45, y: 359.44), controlPoint2: CGPoint(x: 196.45, y: 359.44))
        bezier2Path.addCurve(to: CGPoint(x: 183.35, y: 368.96), controlPoint1: CGPoint(x: 186.81, y: 366.44), controlPoint2: CGPoint(x: 186.81, y: 366.44))
        bezier2Path.addCurve(to: CGPoint(x: 167.82, y: 380.24), controlPoint1: CGPoint(x: 174.88, y: 375.11), controlPoint2: CGPoint(x: 174.88, y: 375.11))
        bezier2Path.addCurve(to: CGPoint(x: 162.7, y: 383.96), controlPoint1: CGPoint(x: 164.82, y: 382.42), controlPoint2: CGPoint(x: 164.82, y: 382.42))
        bezier2Path.addCurve(to: CGPoint(x: 160.76, y: 385.37), controlPoint1: CGPoint(x: 161.12, y: 385.11), controlPoint2: CGPoint(x: 161.12, y: 385.11))
        bezier2Path.addLine(to: CGPoint(x: 162.58, y: 379.78))
        bezier2Path.addLine(to: CGPoint(x: 179.84, y: 432.88))
        bezier2Path.addLine(to: CGPoint(x: 175.08, y: 429.43))
        bezier2Path.addLine(to: CGPoint(x: 230.92, y: 429.43))
        bezier2Path.addLine(to: CGPoint(x: 226.16, y: 432.88))
        bezier2Path.addLine(to: CGPoint(x: 243.42, y: 379.78))
        bezier2Path.addLine(to: CGPoint(x: 245.24, y: 385.37))
        bezier2Path.addLine(to: CGPoint(x: 200.06, y: 352.55))
        bezier2Path.addLine(to: CGPoint(x: 205.94, y: 352.55))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 200.06, y: 344.45))
        bezier2Path.addCurve(to: CGPoint(x: 205.94, y: 344.45), controlPoint1: CGPoint(x: 201.81, y: 343.18), controlPoint2: CGPoint(x: 204.19, y: 343.18))
        bezier2Path.addLine(to: CGPoint(x: 251.11, y: 377.28))
        bezier2Path.addCurve(to: CGPoint(x: 252.93, y: 382.87), controlPoint1: CGPoint(x: 252.87, y: 378.55), controlPoint2: CGPoint(x: 253.6, y: 380.81))
        bezier2Path.addLine(to: CGPoint(x: 235.68, y: 435.97))
        bezier2Path.addCurve(to: CGPoint(x: 230.92, y: 439.43), controlPoint1: CGPoint(x: 235.01, y: 438.03), controlPoint2: CGPoint(x: 233.09, y: 439.43))
        bezier2Path.addLine(to: CGPoint(x: 175.08, y: 439.43))
        bezier2Path.addCurve(to: CGPoint(x: 170.32, y: 435.97), controlPoint1: CGPoint(x: 172.91, y: 439.43), controlPoint2: CGPoint(x: 170.99, y: 438.03))
        bezier2Path.addLine(to: CGPoint(x: 153.07, y: 382.87))
        bezier2Path.addCurve(to: CGPoint(x: 154.89, y: 377.28), controlPoint1: CGPoint(x: 152.4, y: 380.81), controlPoint2: CGPoint(x: 153.13, y: 378.55))
        bezier2Path.addCurve(to: CGPoint(x: 156.83, y: 375.87), controlPoint1: CGPoint(x: 155.24, y: 377.02), controlPoint2: CGPoint(x: 155.24, y: 377.02))
        bezier2Path.addCurve(to: CGPoint(x: 161.94, y: 372.15), controlPoint1: CGPoint(x: 158.94, y: 374.33), controlPoint2: CGPoint(x: 158.94, y: 374.33))
        bezier2Path.addCurve(to: CGPoint(x: 177.47, y: 360.87), controlPoint1: CGPoint(x: 169, y: 367.02), controlPoint2: CGPoint(x: 169, y: 367.02))
        bezier2Path.addCurve(to: CGPoint(x: 184.3, y: 355.91), controlPoint1: CGPoint(x: 180.93, y: 358.35), controlPoint2: CGPoint(x: 180.93, y: 358.35))
        bezier2Path.addCurve(to: CGPoint(x: 195.41, y: 347.83), controlPoint1: CGPoint(x: 190.58, y: 351.35), controlPoint2: CGPoint(x: 190.58, y: 351.35))
        bezier2Path.addCurve(to: CGPoint(x: 200.06, y: 344.45), controlPoint1: CGPoint(x: 199.17, y: 345.1), controlPoint2: CGPoint(x: 199.17, y: 345.1))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.addCurve(to: CGPoint(x: 108.24, y: 136.68), controlPoint1: CGPoint(x: 108.23, y: 136.67), controlPoint2: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.addCurve(to: CGPoint(x: 108.25, y: 136.68), controlPoint1: CGPoint(x: 108.24, y: 136.68), controlPoint2: CGPoint(x: 108.24, y: 136.68))
        bezier2Path.addCurve(to: CGPoint(x: 108.29, y: 136.7), controlPoint1: CGPoint(x: 108.26, y: 136.69), controlPoint2: CGPoint(x: 108.26, y: 136.69))
        bezier2Path.addCurve(to: CGPoint(x: 108.45, y: 136.8), controlPoint1: CGPoint(x: 108.35, y: 136.74), controlPoint2: CGPoint(x: 108.35, y: 136.74))
        bezier2Path.addCurve(to: CGPoint(x: 109.07, y: 137.16), controlPoint1: CGPoint(x: 108.69, y: 136.94), controlPoint2: CGPoint(x: 108.69, y: 136.94))
        bezier2Path.addCurve(to: CGPoint(x: 111.43, y: 138.52), controlPoint1: CGPoint(x: 110.01, y: 137.7), controlPoint2: CGPoint(x: 110.01, y: 137.7))
        bezier2Path.addCurve(to: CGPoint(x: 119.87, y: 143.41), controlPoint1: CGPoint(x: 114.93, y: 140.54), controlPoint2: CGPoint(x: 114.93, y: 140.54))
        bezier2Path.addCurve(to: CGPoint(x: 145.49, y: 158.22), controlPoint1: CGPoint(x: 131.52, y: 150.14), controlPoint2: CGPoint(x: 131.52, y: 150.14))
        bezier2Path.addCurve(to: CGPoint(x: 171.1, y: 173.03), controlPoint1: CGPoint(x: 159.46, y: 166.3), controlPoint2: CGPoint(x: 159.46, y: 166.3))
        bezier2Path.addCurve(to: CGPoint(x: 179.54, y: 177.91), controlPoint1: CGPoint(x: 176.05, y: 175.89), controlPoint2: CGPoint(x: 176.05, y: 175.89))
        bezier2Path.addCurve(to: CGPoint(x: 182.74, y: 179.76), controlPoint1: CGPoint(x: 182.16, y: 179.43), controlPoint2: CGPoint(x: 182.16, y: 179.43))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 184.09), controlPoint1: CGPoint(x: 184.29, y: 180.66), controlPoint2: CGPoint(x: 185.24, y: 182.31))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 187.8), controlPoint1: CGPoint(x: 185.24, y: 184.77), controlPoint2: CGPoint(x: 185.24, y: 184.77))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 197.56), controlPoint1: CGPoint(x: 185.24, y: 191.84), controlPoint2: CGPoint(x: 185.24, y: 191.84))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 227.18), controlPoint1: CGPoint(x: 185.24, y: 211.03), controlPoint2: CGPoint(x: 185.24, y: 211.03))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 268.55), controlPoint1: CGPoint(x: 185.24, y: 254.07), controlPoint2: CGPoint(x: 185.24, y: 254.07))
        bezier2Path.addLine(to: CGPoint(x: 177.74, y: 264.22))
        bezier2Path.addCurve(to: CGPoint(x: 193.93, y: 254.88), controlPoint1: CGPoint(x: 187.18, y: 258.77), controlPoint2: CGPoint(x: 187.18, y: 258.77))
        bezier2Path.addCurve(to: CGPoint(x: 200.16, y: 251.29), controlPoint1: CGPoint(x: 199.02, y: 251.95), controlPoint2: CGPoint(x: 199.02, y: 251.95))
        bezier2Path.addCurve(to: CGPoint(x: 205.16, y: 251.29), controlPoint1: CGPoint(x: 201.71, y: 250.39), controlPoint2: CGPoint(x: 203.61, y: 250.39))
        bezier2Path.addCurve(to: CGPoint(x: 211.66, y: 255.03), controlPoint1: CGPoint(x: 206.35, y: 251.97), controlPoint2: CGPoint(x: 206.35, y: 251.97))
        bezier2Path.addCurve(to: CGPoint(x: 228.47, y: 264.73), controlPoint1: CGPoint(x: 218.68, y: 259.08), controlPoint2: CGPoint(x: 218.68, y: 259.08))
        bezier2Path.addLine(to: CGPoint(x: 220.97, y: 269.06))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 253.26), controlPoint1: CGPoint(x: 220.97, y: 263.73), controlPoint2: CGPoint(x: 220.97, y: 263.73))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 227.18), controlPoint1: CGPoint(x: 220.97, y: 241.08), controlPoint2: CGPoint(x: 220.97, y: 241.08))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 197.56), controlPoint1: CGPoint(x: 220.97, y: 211.03), controlPoint2: CGPoint(x: 220.97, y: 211.03))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 187.8), controlPoint1: CGPoint(x: 220.97, y: 191.84), controlPoint2: CGPoint(x: 220.97, y: 191.84))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 184.09), controlPoint1: CGPoint(x: 220.97, y: 184.77), controlPoint2: CGPoint(x: 220.97, y: 184.77))
        bezier2Path.addLine(to: CGPoint(x: 220.97, y: 184.09))
        bezier2Path.addCurve(to: CGPoint(x: 223.47, y: 179.76), controlPoint1: CGPoint(x: 220.97, y: 182.31), controlPoint2: CGPoint(x: 221.92, y: 180.66))
        bezier2Path.addCurve(to: CGPoint(x: 228.06, y: 177.11), controlPoint1: CGPoint(x: 224.32, y: 179.27), controlPoint2: CGPoint(x: 224.32, y: 179.27))
        bezier2Path.addCurve(to: CGPoint(x: 260.73, y: 158.22), controlPoint1: CGPoint(x: 241.23, y: 169.49), controlPoint2: CGPoint(x: 241.23, y: 169.49))
        bezier2Path.addCurve(to: CGPoint(x: 286.34, y: 143.41), controlPoint1: CGPoint(x: 274.7, y: 150.14), controlPoint2: CGPoint(x: 274.7, y: 150.14))
        bezier2Path.addCurve(to: CGPoint(x: 294.78, y: 138.52), controlPoint1: CGPoint(x: 291.29, y: 140.54), controlPoint2: CGPoint(x: 291.29, y: 140.54))
        bezier2Path.addCurve(to: CGPoint(x: 297.98, y: 136.67), controlPoint1: CGPoint(x: 297.4, y: 137.01), controlPoint2: CGPoint(x: 297.4, y: 137.01))
        bezier2Path.addCurve(to: CGPoint(x: 302.99, y: 136.67), controlPoint1: CGPoint(x: 299.53, y: 135.78), controlPoint2: CGPoint(x: 301.44, y: 135.78))
        bezier2Path.addLine(to: CGPoint(x: 377.5, y: 179.76))
        bezier2Path.addCurve(to: CGPoint(x: 380, y: 184.09), controlPoint1: CGPoint(x: 379.05, y: 180.66), controlPoint2: CGPoint(x: 380, y: 182.31))
        bezier2Path.addLine(to: CGPoint(x: 380, y: 270.28))
        bezier2Path.addCurve(to: CGPoint(x: 377.5, y: 274.61), controlPoint1: CGPoint(x: 380, y: 272.06), controlPoint2: CGPoint(x: 379.05, y: 273.71))
        bezier2Path.addCurve(to: CGPoint(x: 374.3, y: 276.46), controlPoint1: CGPoint(x: 376.92, y: 274.94), controlPoint2: CGPoint(x: 376.92, y: 274.94))
        bezier2Path.addCurve(to: CGPoint(x: 365.86, y: 281.34), controlPoint1: CGPoint(x: 370.81, y: 278.48), controlPoint2: CGPoint(x: 370.81, y: 278.48))
        bezier2Path.addCurve(to: CGPoint(x: 340.25, y: 296.15), controlPoint1: CGPoint(x: 354.22, y: 288.07), controlPoint2: CGPoint(x: 354.22, y: 288.07))
        bezier2Path.addCurve(to: CGPoint(x: 317.85, y: 309.1), controlPoint1: CGPoint(x: 328.33, y: 303.04), controlPoint2: CGPoint(x: 328.33, y: 303.04))
        bezier2Path.addCurve(to: CGPoint(x: 304.14, y: 317.03), controlPoint1: CGPoint(x: 308.83, y: 314.32), controlPoint2: CGPoint(x: 308.83, y: 314.32))
        bezier2Path.addLine(to: CGPoint(x: 304.13, y: 308.37))
        bezier2Path.addCurve(to: CGPoint(x: 320.53, y: 317.83), controlPoint1: CGPoint(x: 313.69, y: 313.89), controlPoint2: CGPoint(x: 313.69, y: 313.89))
        bezier2Path.addCurve(to: CGPoint(x: 326.85, y: 321.48), controlPoint1: CGPoint(x: 325.69, y: 320.81), controlPoint2: CGPoint(x: 325.69, y: 320.81))
        bezier2Path.addCurve(to: CGPoint(x: 329.35, y: 325.81), controlPoint1: CGPoint(x: 328.39, y: 322.37), controlPoint2: CGPoint(x: 329.35, y: 324.02))
        bezier2Path.addLine(to: CGPoint(x: 329.35, y: 466.19))
        bezier2Path.addCurve(to: CGPoint(x: 326.85, y: 470.52), controlPoint1: CGPoint(x: 329.35, y: 467.98), controlPoint2: CGPoint(x: 328.39, y: 469.63))
        bezier2Path.addCurve(to: CGPoint(x: 320.53, y: 474.17), controlPoint1: CGPoint(x: 325.69, y: 471.19), controlPoint2: CGPoint(x: 325.69, y: 471.19))
        bezier2Path.addCurve(to: CGPoint(x: 304.13, y: 483.63), controlPoint1: CGPoint(x: 313.69, y: 478.11), controlPoint2: CGPoint(x: 313.69, y: 478.11))
        bezier2Path.addLine(to: CGPoint(x: 304.14, y: 474.97))
        bezier2Path.addCurve(to: CGPoint(x: 340.25, y: 495.85), controlPoint1: CGPoint(x: 307.96, y: 477.18), controlPoint2: CGPoint(x: 320.97, y: 484.7))
        bezier2Path.addCurve(to: CGPoint(x: 365.86, y: 510.66), controlPoint1: CGPoint(x: 354.22, y: 503.93), controlPoint2: CGPoint(x: 354.22, y: 503.93))
        bezier2Path.addCurve(to: CGPoint(x: 374.3, y: 515.54), controlPoint1: CGPoint(x: 370.81, y: 513.52), controlPoint2: CGPoint(x: 370.81, y: 513.52))
        bezier2Path.addCurve(to: CGPoint(x: 377.5, y: 517.39), controlPoint1: CGPoint(x: 376.92, y: 517.06), controlPoint2: CGPoint(x: 376.92, y: 517.06))
        bezier2Path.addCurve(to: CGPoint(x: 380, y: 521.72), controlPoint1: CGPoint(x: 379.05, y: 518.29), controlPoint2: CGPoint(x: 380, y: 519.94))
        bezier2Path.addLine(to: CGPoint(x: 380, y: 607.91))
        bezier2Path.addCurve(to: CGPoint(x: 377.5, y: 612.24), controlPoint1: CGPoint(x: 380, y: 609.69), controlPoint2: CGPoint(x: 379.05, y: 611.34))
        bezier2Path.addLine(to: CGPoint(x: 302.99, y: 655.33))
        bezier2Path.addCurve(to: CGPoint(x: 297.98, y: 655.33), controlPoint1: CGPoint(x: 301.44, y: 656.22), controlPoint2: CGPoint(x: 299.53, y: 656.22))
        bezier2Path.addLine(to: CGPoint(x: 223.47, y: 612.24))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 607.91), controlPoint1: CGPoint(x: 221.92, y: 611.34), controlPoint2: CGPoint(x: 220.97, y: 609.69))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 604.69), controlPoint1: CGPoint(x: 220.97, y: 607.33), controlPoint2: CGPoint(x: 220.97, y: 607.33))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 596.1), controlPoint1: CGPoint(x: 220.97, y: 601.15), controlPoint2: CGPoint(x: 220.97, y: 601.15))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 569.34), controlPoint1: CGPoint(x: 220.97, y: 584.13), controlPoint2: CGPoint(x: 220.97, y: 584.13))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 564.82), controlPoint1: CGPoint(x: 220.97, y: 567.08), controlPoint2: CGPoint(x: 220.97, y: 567.08))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 538.74), controlPoint1: CGPoint(x: 220.97, y: 550.92), controlPoint2: CGPoint(x: 220.97, y: 550.92))
        bezier2Path.addCurve(to: CGPoint(x: 220.97, y: 522.94), controlPoint1: CGPoint(x: 220.97, y: 528.27), controlPoint2: CGPoint(x: 220.97, y: 528.27))
        bezier2Path.addLine(to: CGPoint(x: 228.47, y: 527.27))
        bezier2Path.addCurve(to: CGPoint(x: 211.66, y: 536.97), controlPoint1: CGPoint(x: 218.68, y: 532.92), controlPoint2: CGPoint(x: 218.68, y: 532.92))
        bezier2Path.addCurve(to: CGPoint(x: 205.16, y: 540.71), controlPoint1: CGPoint(x: 206.35, y: 540.03), controlPoint2: CGPoint(x: 206.35, y: 540.03))
        bezier2Path.addCurve(to: CGPoint(x: 200.16, y: 540.71), controlPoint1: CGPoint(x: 203.61, y: 541.61), controlPoint2: CGPoint(x: 201.71, y: 541.61))
        bezier2Path.addCurve(to: CGPoint(x: 193.93, y: 537.12), controlPoint1: CGPoint(x: 199.02, y: 540.05), controlPoint2: CGPoint(x: 199.02, y: 540.05))
        bezier2Path.addCurve(to: CGPoint(x: 177.74, y: 527.78), controlPoint1: CGPoint(x: 187.18, y: 533.23), controlPoint2: CGPoint(x: 187.18, y: 533.23))
        bezier2Path.addLine(to: CGPoint(x: 185.24, y: 523.45))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 564.82), controlPoint1: CGPoint(x: 185.24, y: 537.93), controlPoint2: CGPoint(x: 185.24, y: 537.93))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 594.44), controlPoint1: CGPoint(x: 185.24, y: 580.97), controlPoint2: CGPoint(x: 185.24, y: 580.97))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 604.2), controlPoint1: CGPoint(x: 185.24, y: 600.16), controlPoint2: CGPoint(x: 185.24, y: 600.16))
        bezier2Path.addCurve(to: CGPoint(x: 185.24, y: 607.91), controlPoint1: CGPoint(x: 185.24, y: 607.23), controlPoint2: CGPoint(x: 185.24, y: 607.23))
        bezier2Path.addCurve(to: CGPoint(x: 182.74, y: 612.24), controlPoint1: CGPoint(x: 185.24, y: 609.69), controlPoint2: CGPoint(x: 184.29, y: 611.34))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 655.33))
        bezier2Path.addCurve(to: CGPoint(x: 103.22, y: 655.33), controlPoint1: CGPoint(x: 106.68, y: 656.22), controlPoint2: CGPoint(x: 104.77, y: 656.22))
        bezier2Path.addLine(to: CGPoint(x: 28.71, y: 612.24))
        bezier2Path.addCurve(to: CGPoint(x: 26.21, y: 607.91), controlPoint1: CGPoint(x: 27.16, y: 611.34), controlPoint2: CGPoint(x: 26.21, y: 609.69))
        bezier2Path.addLine(to: CGPoint(x: 26.21, y: 521.72))
        bezier2Path.addCurve(to: CGPoint(x: 28.71, y: 517.39), controlPoint1: CGPoint(x: 26.21, y: 519.94), controlPoint2: CGPoint(x: 27.16, y: 518.29))
        bezier2Path.addCurve(to: CGPoint(x: 31.91, y: 515.54), controlPoint1: CGPoint(x: 29.29, y: 517.06), controlPoint2: CGPoint(x: 29.29, y: 517.06))
        bezier2Path.addCurve(to: CGPoint(x: 40.35, y: 510.66), controlPoint1: CGPoint(x: 35.4, y: 513.52), controlPoint2: CGPoint(x: 35.4, y: 513.52))
        bezier2Path.addCurve(to: CGPoint(x: 65.97, y: 495.85), controlPoint1: CGPoint(x: 51.99, y: 503.93), controlPoint2: CGPoint(x: 51.99, y: 503.93))
        bezier2Path.addCurve(to: CGPoint(x: 101.63, y: 475.22), controlPoint1: CGPoint(x: 89.05, y: 482.5), controlPoint2: CGPoint(x: 89.05, y: 482.5))
        bezier2Path.addLine(to: CGPoint(x: 101.64, y: 483.88))
        bezier2Path.addCurve(to: CGPoint(x: 84.93, y: 474.24), controlPoint1: CGPoint(x: 91.9, y: 478.27), controlPoint2: CGPoint(x: 91.9, y: 478.27))
        bezier2Path.addCurve(to: CGPoint(x: 78.48, y: 470.52), controlPoint1: CGPoint(x: 79.66, y: 471.21), controlPoint2: CGPoint(x: 79.66, y: 471.21))
        bezier2Path.addCurve(to: CGPoint(x: 75.97, y: 466.19), controlPoint1: CGPoint(x: 76.93, y: 469.63), controlPoint2: CGPoint(x: 75.97, y: 467.98))
        bezier2Path.addLine(to: CGPoint(x: 75.97, y: 325.81))
        bezier2Path.addCurve(to: CGPoint(x: 78.48, y: 321.48), controlPoint1: CGPoint(x: 75.97, y: 324.02), controlPoint2: CGPoint(x: 76.93, y: 322.37))
        bezier2Path.addCurve(to: CGPoint(x: 84.93, y: 317.76), controlPoint1: CGPoint(x: 79.66, y: 320.79), controlPoint2: CGPoint(x: 79.66, y: 320.79))
        bezier2Path.addCurve(to: CGPoint(x: 101.64, y: 308.12), controlPoint1: CGPoint(x: 91.9, y: 313.73), controlPoint2: CGPoint(x: 91.9, y: 313.73))
        bezier2Path.addLine(to: CGPoint(x: 101.63, y: 316.78))
        bezier2Path.addCurve(to: CGPoint(x: 65.97, y: 296.15), controlPoint1: CGPoint(x: 89.05, y: 309.5), controlPoint2: CGPoint(x: 89.05, y: 309.5))
        bezier2Path.addCurve(to: CGPoint(x: 40.35, y: 281.34), controlPoint1: CGPoint(x: 51.99, y: 288.07), controlPoint2: CGPoint(x: 51.99, y: 288.07))
        bezier2Path.addCurve(to: CGPoint(x: 31.91, y: 276.46), controlPoint1: CGPoint(x: 35.4, y: 278.48), controlPoint2: CGPoint(x: 35.4, y: 278.48))
        bezier2Path.addCurve(to: CGPoint(x: 28.71, y: 274.61), controlPoint1: CGPoint(x: 29.29, y: 274.94), controlPoint2: CGPoint(x: 29.29, y: 274.94))
        bezier2Path.addCurve(to: CGPoint(x: 26.21, y: 270.28), controlPoint1: CGPoint(x: 27.16, y: 273.71), controlPoint2: CGPoint(x: 26.21, y: 272.06))
        bezier2Path.addLine(to: CGPoint(x: 26.21, y: 184.09))
        bezier2Path.addCurve(to: CGPoint(x: 28.71, y: 179.76), controlPoint1: CGPoint(x: 26.21, y: 182.31), controlPoint2: CGPoint(x: 27.16, y: 180.66))
        bezier2Path.addCurve(to: CGPoint(x: 31.91, y: 177.91), controlPoint1: CGPoint(x: 29.29, y: 179.43), controlPoint2: CGPoint(x: 29.29, y: 179.43))
        bezier2Path.addCurve(to: CGPoint(x: 40.35, y: 173.03), controlPoint1: CGPoint(x: 35.4, y: 175.89), controlPoint2: CGPoint(x: 35.4, y: 175.89))
        bezier2Path.addCurve(to: CGPoint(x: 65.97, y: 158.22), controlPoint1: CGPoint(x: 51.99, y: 166.3), controlPoint2: CGPoint(x: 51.99, y: 166.3))
        bezier2Path.addCurve(to: CGPoint(x: 69.8, y: 156), controlPoint1: CGPoint(x: 67.89, y: 157.11), controlPoint2: CGPoint(x: 67.89, y: 157.11))
        bezier2Path.addCurve(to: CGPoint(x: 92.99, y: 142.59), controlPoint1: CGPoint(x: 82.61, y: 148.59), controlPoint2: CGPoint(x: 82.61, y: 148.59))
        bezier2Path.addCurve(to: CGPoint(x: 100.43, y: 138.29), controlPoint1: CGPoint(x: 97.36, y: 140.06), controlPoint2: CGPoint(x: 97.36, y: 140.06))
        bezier2Path.addCurve(to: CGPoint(x: 103.22, y: 136.67), controlPoint1: CGPoint(x: 102.72, y: 136.96), controlPoint2: CGPoint(x: 102.72, y: 136.96))
        bezier2Path.addCurve(to: CGPoint(x: 108.23, y: 136.67), controlPoint1: CGPoint(x: 104.77, y: 135.78), controlPoint2: CGPoint(x: 106.68, y: 135.78))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.addLine(to: CGPoint(x: 105.73, y: 141))
        bezier2Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.addCurve(to: CGPoint(x: 103.23, y: 145.33), controlPoint1: CGPoint(x: 114, y: 140.01), controlPoint2: CGPoint(x: 109, y: 148.67))
        bezier2Path.addLine(to: CGPoint(x: 103.22, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 105.73, y: 141))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 145.33))
        bezier2Path.addCurve(to: CGPoint(x: 105.43, y: 146.94), controlPoint1: CGPoint(x: 107.72, y: 145.62), controlPoint2: CGPoint(x: 107.72, y: 145.62))
        bezier2Path.addCurve(to: CGPoint(x: 97.99, y: 151.25), controlPoint1: CGPoint(x: 102.37, y: 148.72), controlPoint2: CGPoint(x: 102.37, y: 148.72))
        bezier2Path.addCurve(to: CGPoint(x: 74.81, y: 164.66), controlPoint1: CGPoint(x: 87.62, y: 157.25), controlPoint2: CGPoint(x: 87.62, y: 157.25))
        bezier2Path.addCurve(to: CGPoint(x: 70.97, y: 166.87), controlPoint1: CGPoint(x: 72.89, y: 165.76), controlPoint2: CGPoint(x: 72.89, y: 165.76))
        bezier2Path.addCurve(to: CGPoint(x: 45.36, y: 181.69), controlPoint1: CGPoint(x: 57, y: 174.95), controlPoint2: CGPoint(x: 57, y: 174.95))
        bezier2Path.addCurve(to: CGPoint(x: 36.92, y: 186.57), controlPoint1: CGPoint(x: 40.41, y: 184.55), controlPoint2: CGPoint(x: 40.41, y: 184.55))
        bezier2Path.addCurve(to: CGPoint(x: 33.72, y: 188.42), controlPoint1: CGPoint(x: 34.3, y: 188.08), controlPoint2: CGPoint(x: 34.3, y: 188.08))
        bezier2Path.addLine(to: CGPoint(x: 36.21, y: 184.09))
        bezier2Path.addLine(to: CGPoint(x: 36.21, y: 270.28))
        bezier2Path.addLine(to: CGPoint(x: 33.72, y: 265.95))
        bezier2Path.addCurve(to: CGPoint(x: 36.92, y: 267.8), controlPoint1: CGPoint(x: 34.3, y: 266.29), controlPoint2: CGPoint(x: 34.3, y: 266.29))
        bezier2Path.addCurve(to: CGPoint(x: 45.36, y: 272.68), controlPoint1: CGPoint(x: 40.41, y: 269.82), controlPoint2: CGPoint(x: 40.41, y: 269.82))
        bezier2Path.addCurve(to: CGPoint(x: 70.97, y: 287.49), controlPoint1: CGPoint(x: 57, y: 279.42), controlPoint2: CGPoint(x: 57, y: 279.42))
        bezier2Path.addCurve(to: CGPoint(x: 106.64, y: 308.12), controlPoint1: CGPoint(x: 94.06, y: 300.85), controlPoint2: CGPoint(x: 94.06, y: 300.85))
        bezier2Path.addCurve(to: CGPoint(x: 106.63, y: 316.78), controlPoint1: CGPoint(x: 109.97, y: 310.05), controlPoint2: CGPoint(x: 109.97, y: 314.86))
        bezier2Path.addCurve(to: CGPoint(x: 89.92, y: 326.42), controlPoint1: CGPoint(x: 96.9, y: 322.39), controlPoint2: CGPoint(x: 96.9, y: 322.39))
        bezier2Path.addCurve(to: CGPoint(x: 83.47, y: 330.14), controlPoint1: CGPoint(x: 84.66, y: 329.46), controlPoint2: CGPoint(x: 84.66, y: 329.46))
        bezier2Path.addLine(to: CGPoint(x: 85.97, y: 325.81))
        bezier2Path.addLine(to: CGPoint(x: 85.97, y: 466.19))
        bezier2Path.addLine(to: CGPoint(x: 83.47, y: 461.86))
        bezier2Path.addCurve(to: CGPoint(x: 89.92, y: 465.58), controlPoint1: CGPoint(x: 84.66, y: 462.54), controlPoint2: CGPoint(x: 84.66, y: 462.54))
        bezier2Path.addCurve(to: CGPoint(x: 106.63, y: 475.22), controlPoint1: CGPoint(x: 96.9, y: 469.61), controlPoint2: CGPoint(x: 96.9, y: 469.61))
        bezier2Path.addCurve(to: CGPoint(x: 106.64, y: 483.88), controlPoint1: CGPoint(x: 109.97, y: 477.14), controlPoint2: CGPoint(x: 109.97, y: 481.95))
        bezier2Path.addCurve(to: CGPoint(x: 70.97, y: 504.51), controlPoint1: CGPoint(x: 94.06, y: 491.15), controlPoint2: CGPoint(x: 94.06, y: 491.15))
        bezier2Path.addCurve(to: CGPoint(x: 45.36, y: 519.32), controlPoint1: CGPoint(x: 57, y: 512.58), controlPoint2: CGPoint(x: 57, y: 512.58))
        bezier2Path.addCurve(to: CGPoint(x: 36.92, y: 524.2), controlPoint1: CGPoint(x: 40.41, y: 522.18), controlPoint2: CGPoint(x: 40.41, y: 522.18))
        bezier2Path.addCurve(to: CGPoint(x: 33.72, y: 526.05), controlPoint1: CGPoint(x: 34.3, y: 525.71), controlPoint2: CGPoint(x: 34.3, y: 525.71))
        bezier2Path.addLine(to: CGPoint(x: 36.21, y: 521.72))
        bezier2Path.addLine(to: CGPoint(x: 36.21, y: 607.91))
        bezier2Path.addLine(to: CGPoint(x: 33.72, y: 603.58))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 646.67))
        bezier2Path.addLine(to: CGPoint(x: 103.22, y: 646.67))
        bezier2Path.addLine(to: CGPoint(x: 177.74, y: 603.58))
        bezier2Path.addLine(to: CGPoint(x: 175.24, y: 607.91))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 604.2), controlPoint1: CGPoint(x: 175.24, y: 607.23), controlPoint2: CGPoint(x: 175.24, y: 607.23))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 594.44), controlPoint1: CGPoint(x: 175.24, y: 600.16), controlPoint2: CGPoint(x: 175.24, y: 600.16))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 564.82), controlPoint1: CGPoint(x: 175.24, y: 580.97), controlPoint2: CGPoint(x: 175.24, y: 580.97))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 523.45), controlPoint1: CGPoint(x: 175.24, y: 537.93), controlPoint2: CGPoint(x: 175.24, y: 537.93))
        bezier2Path.addCurve(to: CGPoint(x: 182.74, y: 519.12), controlPoint1: CGPoint(x: 175.24, y: 519.6), controlPoint2: CGPoint(x: 179.4, y: 517.2))
        bezier2Path.addCurve(to: CGPoint(x: 198.93, y: 528.46), controlPoint1: CGPoint(x: 192.18, y: 524.56), controlPoint2: CGPoint(x: 192.18, y: 524.56))
        bezier2Path.addCurve(to: CGPoint(x: 205.16, y: 532.05), controlPoint1: CGPoint(x: 204.02, y: 531.39), controlPoint2: CGPoint(x: 204.02, y: 531.39))
        bezier2Path.addLine(to: CGPoint(x: 200.16, y: 532.05))
        bezier2Path.addCurve(to: CGPoint(x: 206.66, y: 528.3), controlPoint1: CGPoint(x: 201.36, y: 531.36), controlPoint2: CGPoint(x: 201.36, y: 531.36))
        bezier2Path.addCurve(to: CGPoint(x: 223.47, y: 518.61), controlPoint1: CGPoint(x: 213.68, y: 524.25), controlPoint2: CGPoint(x: 213.68, y: 524.25))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 522.94), controlPoint1: CGPoint(x: 226.81, y: 516.68), controlPoint2: CGPoint(x: 230.97, y: 519.09))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 538.74), controlPoint1: CGPoint(x: 230.97, y: 528.27), controlPoint2: CGPoint(x: 230.97, y: 528.27))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 564.82), controlPoint1: CGPoint(x: 230.97, y: 550.92), controlPoint2: CGPoint(x: 230.97, y: 550.92))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 569.34), controlPoint1: CGPoint(x: 230.97, y: 567.08), controlPoint2: CGPoint(x: 230.97, y: 567.08))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 596.1), controlPoint1: CGPoint(x: 230.97, y: 584.13), controlPoint2: CGPoint(x: 230.97, y: 584.13))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 604.69), controlPoint1: CGPoint(x: 230.97, y: 601.15), controlPoint2: CGPoint(x: 230.97, y: 601.15))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 607.91), controlPoint1: CGPoint(x: 230.97, y: 607.33), controlPoint2: CGPoint(x: 230.97, y: 607.33))
        bezier2Path.addLine(to: CGPoint(x: 228.48, y: 603.58))
        bezier2Path.addLine(to: CGPoint(x: 302.99, y: 646.67))
        bezier2Path.addLine(to: CGPoint(x: 297.98, y: 646.67))
        bezier2Path.addLine(to: CGPoint(x: 372.5, y: 603.58))
        bezier2Path.addLine(to: CGPoint(x: 370, y: 607.91))
        bezier2Path.addLine(to: CGPoint(x: 370, y: 521.72))
        bezier2Path.addLine(to: CGPoint(x: 372.5, y: 526.05))
        bezier2Path.addCurve(to: CGPoint(x: 369.3, y: 524.2), controlPoint1: CGPoint(x: 371.91, y: 525.71), controlPoint2: CGPoint(x: 371.91, y: 525.71))
        bezier2Path.addCurve(to: CGPoint(x: 360.85, y: 519.32), controlPoint1: CGPoint(x: 365.8, y: 522.18), controlPoint2: CGPoint(x: 365.8, y: 522.18))
        bezier2Path.addCurve(to: CGPoint(x: 335.24, y: 504.51), controlPoint1: CGPoint(x: 349.21, y: 512.58), controlPoint2: CGPoint(x: 349.21, y: 512.58))
        bezier2Path.addCurve(to: CGPoint(x: 299.13, y: 483.62), controlPoint1: CGPoint(x: 315.96, y: 493.35), controlPoint2: CGPoint(x: 302.96, y: 485.84))
        bezier2Path.addCurve(to: CGPoint(x: 299.14, y: 474.96), controlPoint1: CGPoint(x: 295.8, y: 481.7), controlPoint2: CGPoint(x: 295.8, y: 476.89))
        bezier2Path.addCurve(to: CGPoint(x: 315.53, y: 465.51), controlPoint1: CGPoint(x: 308.69, y: 469.45), controlPoint2: CGPoint(x: 308.69, y: 469.45))
        bezier2Path.addCurve(to: CGPoint(x: 321.85, y: 461.86), controlPoint1: CGPoint(x: 320.69, y: 462.53), controlPoint2: CGPoint(x: 320.69, y: 462.53))
        bezier2Path.addLine(to: CGPoint(x: 319.35, y: 466.19))
        bezier2Path.addLine(to: CGPoint(x: 319.35, y: 325.81))
        bezier2Path.addLine(to: CGPoint(x: 321.85, y: 330.14))
        bezier2Path.addCurve(to: CGPoint(x: 315.53, y: 326.49), controlPoint1: CGPoint(x: 320.69, y: 329.47), controlPoint2: CGPoint(x: 320.69, y: 329.47))
        bezier2Path.addCurve(to: CGPoint(x: 299.13, y: 317.04), controlPoint1: CGPoint(x: 308.69, y: 322.55), controlPoint2: CGPoint(x: 308.69, y: 322.55))
        bezier2Path.addCurve(to: CGPoint(x: 299.13, y: 308.38), controlPoint1: CGPoint(x: 295.8, y: 315.11), controlPoint2: CGPoint(x: 295.8, y: 310.3))
        bezier2Path.addCurve(to: CGPoint(x: 312.85, y: 300.44), controlPoint1: CGPoint(x: 303.82, y: 305.66), controlPoint2: CGPoint(x: 303.82, y: 305.66))
        bezier2Path.addCurve(to: CGPoint(x: 335.24, y: 287.49), controlPoint1: CGPoint(x: 323.32, y: 294.39), controlPoint2: CGPoint(x: 323.32, y: 294.39))
        bezier2Path.addCurve(to: CGPoint(x: 360.85, y: 272.68), controlPoint1: CGPoint(x: 349.21, y: 279.42), controlPoint2: CGPoint(x: 349.21, y: 279.42))
        bezier2Path.addCurve(to: CGPoint(x: 369.3, y: 267.8), controlPoint1: CGPoint(x: 365.8, y: 269.82), controlPoint2: CGPoint(x: 365.8, y: 269.82))
        bezier2Path.addCurve(to: CGPoint(x: 372.5, y: 265.95), controlPoint1: CGPoint(x: 371.91, y: 266.29), controlPoint2: CGPoint(x: 371.91, y: 266.29))
        bezier2Path.addLine(to: CGPoint(x: 370, y: 270.28))
        bezier2Path.addLine(to: CGPoint(x: 370, y: 184.09))
        bezier2Path.addLine(to: CGPoint(x: 372.5, y: 188.42))
        bezier2Path.addLine(to: CGPoint(x: 297.98, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 302.99, y: 145.33))
        bezier2Path.addCurve(to: CGPoint(x: 299.79, y: 147.18), controlPoint1: CGPoint(x: 302.41, y: 145.67), controlPoint2: CGPoint(x: 302.41, y: 145.67))
        bezier2Path.addCurve(to: CGPoint(x: 291.35, y: 152.06), controlPoint1: CGPoint(x: 296.3, y: 149.2), controlPoint2: CGPoint(x: 296.3, y: 149.2))
        bezier2Path.addCurve(to: CGPoint(x: 265.73, y: 166.87), controlPoint1: CGPoint(x: 279.7, y: 158.8), controlPoint2: CGPoint(x: 279.7, y: 158.8))
        bezier2Path.addCurve(to: CGPoint(x: 233.07, y: 185.76), controlPoint1: CGPoint(x: 246.24, y: 178.15), controlPoint2: CGPoint(x: 246.24, y: 178.15))
        bezier2Path.addCurve(to: CGPoint(x: 228.48, y: 188.42), controlPoint1: CGPoint(x: 229.33, y: 187.93), controlPoint2: CGPoint(x: 229.33, y: 187.93))
        bezier2Path.addLine(to: CGPoint(x: 225.97, y: 184.09))
        bezier2Path.addLine(to: CGPoint(x: 230.97, y: 184.09))
        bezier2Path.addLine(to: CGPoint(x: 230.97, y: 184.09))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 187.8), controlPoint1: CGPoint(x: 230.97, y: 184.77), controlPoint2: CGPoint(x: 230.97, y: 184.77))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 197.56), controlPoint1: CGPoint(x: 230.97, y: 191.84), controlPoint2: CGPoint(x: 230.97, y: 191.84))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 227.18), controlPoint1: CGPoint(x: 230.97, y: 211.03), controlPoint2: CGPoint(x: 230.97, y: 211.03))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 253.26), controlPoint1: CGPoint(x: 230.97, y: 241.08), controlPoint2: CGPoint(x: 230.97, y: 241.08))
        bezier2Path.addCurve(to: CGPoint(x: 230.97, y: 269.06), controlPoint1: CGPoint(x: 230.97, y: 263.73), controlPoint2: CGPoint(x: 230.97, y: 263.73))
        bezier2Path.addCurve(to: CGPoint(x: 223.47, y: 273.39), controlPoint1: CGPoint(x: 230.97, y: 272.91), controlPoint2: CGPoint(x: 226.81, y: 275.32))
        bezier2Path.addCurve(to: CGPoint(x: 206.66, y: 263.7), controlPoint1: CGPoint(x: 213.68, y: 267.75), controlPoint2: CGPoint(x: 213.68, y: 267.75))
        bezier2Path.addCurve(to: CGPoint(x: 200.16, y: 259.95), controlPoint1: CGPoint(x: 201.36, y: 260.64), controlPoint2: CGPoint(x: 201.36, y: 260.64))
        bezier2Path.addLine(to: CGPoint(x: 202.66, y: 255.62))
        bezier2Path.addLine(to: CGPoint(x: 205.16, y: 259.95))
        bezier2Path.addCurve(to: CGPoint(x: 198.93, y: 263.54), controlPoint1: CGPoint(x: 204.02, y: 260.61), controlPoint2: CGPoint(x: 204.02, y: 260.61))
        bezier2Path.addCurve(to: CGPoint(x: 182.74, y: 272.88), controlPoint1: CGPoint(x: 192.18, y: 267.44), controlPoint2: CGPoint(x: 192.18, y: 267.44))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 268.55), controlPoint1: CGPoint(x: 179.4, y: 274.8), controlPoint2: CGPoint(x: 175.24, y: 272.4))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 227.18), controlPoint1: CGPoint(x: 175.24, y: 254.07), controlPoint2: CGPoint(x: 175.24, y: 254.07))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 197.56), controlPoint1: CGPoint(x: 175.24, y: 211.03), controlPoint2: CGPoint(x: 175.24, y: 211.03))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 187.8), controlPoint1: CGPoint(x: 175.24, y: 191.84), controlPoint2: CGPoint(x: 175.24, y: 191.84))
        bezier2Path.addCurve(to: CGPoint(x: 175.24, y: 184.09), controlPoint1: CGPoint(x: 175.24, y: 184.77), controlPoint2: CGPoint(x: 175.24, y: 184.77))
        bezier2Path.addLine(to: CGPoint(x: 177.74, y: 188.42))
        bezier2Path.addCurve(to: CGPoint(x: 174.54, y: 186.57), controlPoint1: CGPoint(x: 177.15, y: 188.08), controlPoint2: CGPoint(x: 177.15, y: 188.08))
        bezier2Path.addCurve(to: CGPoint(x: 166.09, y: 181.69), controlPoint1: CGPoint(x: 171.04, y: 184.55), controlPoint2: CGPoint(x: 171.04, y: 184.55))
        bezier2Path.addCurve(to: CGPoint(x: 140.48, y: 166.88), controlPoint1: CGPoint(x: 154.45, y: 174.95), controlPoint2: CGPoint(x: 154.45, y: 174.95))
        bezier2Path.addCurve(to: CGPoint(x: 114.87, y: 152.06), controlPoint1: CGPoint(x: 126.51, y: 158.8), controlPoint2: CGPoint(x: 126.51, y: 158.8))
        bezier2Path.addCurve(to: CGPoint(x: 106.43, y: 147.18), controlPoint1: CGPoint(x: 109.92, y: 149.2), controlPoint2: CGPoint(x: 109.92, y: 149.2))
        bezier2Path.addCurve(to: CGPoint(x: 104.06, y: 145.81), controlPoint1: CGPoint(x: 105.01, y: 146.36), controlPoint2: CGPoint(x: 105.01, y: 146.36))
        bezier2Path.addCurve(to: CGPoint(x: 103.44, y: 145.45), controlPoint1: CGPoint(x: 103.69, y: 145.6), controlPoint2: CGPoint(x: 103.69, y: 145.6))
        bezier2Path.addCurve(to: CGPoint(x: 103.28, y: 145.36), controlPoint1: CGPoint(x: 103.34, y: 145.4), controlPoint2: CGPoint(x: 103.34, y: 145.4))
        bezier2Path.addCurve(to: CGPoint(x: 103.24, y: 145.34), controlPoint1: CGPoint(x: 103.26, y: 145.35), controlPoint2: CGPoint(x: 103.26, y: 145.35))
        bezier2Path.addCurve(to: CGPoint(x: 103.23, y: 145.33), controlPoint1: CGPoint(x: 103.23, y: 145.33), controlPoint2: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.addCurve(to: CGPoint(x: 103.23, y: 145.33), controlPoint1: CGPoint(x: 103.23, y: 145.33), controlPoint2: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier2Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 203.11, y: 136), end: CGPoint(x: 203.11, y: 656), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 294, y: 218, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 97, y: 557, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole6(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 198.79, y: 66.06))
        bezier3Path.addCurve(to: CGPoint(x: 230.02, y: 85.88), controlPoint1: CGPoint(x: 215.43, y: 76.62), controlPoint2: CGPoint(x: 230.02, y: 85.88))
        bezier3Path.addLine(to: CGPoint(x: 230.02, y: 186.12))
        bezier3Path.addCurve(to: CGPoint(x: 307.52, y: 235.38), controlPoint1: CGPoint(x: 240.7, y: 192.99), controlPoint2: CGPoint(x: 307.52, y: 235.38))
        bezier3Path.addLine(to: CGPoint(x: 307.52, y: 335.62))
        bezier3Path.addLine(to: CGPoint(x: 159.12, y: 436))
        bezier3Path.addLine(to: CGPoint(x: 307.52, y: 534.38))
        bezier3Path.addLine(to: CGPoint(x: 307.52, y: 634.62))
        bezier3Path.addLine(to: CGPoint(x: 228.5, y: 684.75))
        bezier3Path.addLine(to: CGPoint(x: 149.48, y: 634.62))
        bezier3Path.addCurve(to: CGPoint(x: 149.48, y: 534.92), controlPoint1: CGPoint(x: 149.48, y: 634.62), controlPoint2: CGPoint(x: 149.48, y: 542.83))
        bezier3Path.addCurve(to: CGPoint(x: 70.98, y: 485.12), controlPoint1: CGPoint(x: 142.62, y: 530.57), controlPoint2: CGPoint(x: 70.98, y: 485.12))
        bezier3Path.addLine(to: CGPoint(x: 70.98, y: 384.88))
        bezier3Path.addLine(to: CGPoint(x: 219, y: 285.38))
        bezier3Path.addLine(to: CGPoint(x: 71.98, y: 186.12))
        bezier3Path.addLine(to: CGPoint(x: 71.98, y: 85.88))
        bezier3Path.addCurve(to: CGPoint(x: 92.03, y: 73.15), controlPoint1: CGPoint(x: 71.98, y: 85.88), controlPoint2: CGPoint(x: 80.54, y: 80.44))
        bezier3Path.addCurve(to: CGPoint(x: 151, y: 35.75), controlPoint1: CGPoint(x: 115.3, y: 58.39), controlPoint2: CGPoint(x: 150.57, y: 36.02))
        bezier3Path.addCurve(to: CGPoint(x: 198.79, y: 66.06), controlPoint1: CGPoint(x: 151, y: 35.75), controlPoint2: CGPoint(x: 176.7, y: 52.05))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineCapStyle = .round
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 152, y: 35.75))
        bezierPath.addCurve(to: CGPoint(x: 199.79, y: 66.06), controlPoint1: CGPoint(x: 152, y: 35.75), controlPoint2: CGPoint(x: 177.7, y: 52.05))
        bezierPath.addCurve(to: CGPoint(x: 231.02, y: 85.88), controlPoint1: CGPoint(x: 216.43, y: 76.62), controlPoint2: CGPoint(x: 231.02, y: 85.88))
        bezierPath.addLine(to: CGPoint(x: 231.02, y: 186.12))
        bezierPath.addCurve(to: CGPoint(x: 308.52, y: 235.38), controlPoint1: CGPoint(x: 241.7, y: 192.99), controlPoint2: CGPoint(x: 308.52, y: 235.38))
        bezierPath.addLine(to: CGPoint(x: 308.52, y: 335.62))
        bezierPath.addLine(to: CGPoint(x: 160.12, y: 436))
        bezierPath.addLine(to: CGPoint(x: 308.52, y: 534.38))
        bezierPath.addLine(to: CGPoint(x: 308.52, y: 634.62))
        bezierPath.addLine(to: CGPoint(x: 229.5, y: 684.75))
        bezierPath.addLine(to: CGPoint(x: 150.48, y: 634.62))
        bezierPath.addCurve(to: CGPoint(x: 150.48, y: 534.92), controlPoint1: CGPoint(x: 150.48, y: 634.62), controlPoint2: CGPoint(x: 150.48, y: 542.83))
        bezierPath.addCurve(to: CGPoint(x: 71.98, y: 485.12), controlPoint1: CGPoint(x: 143.62, y: 530.57), controlPoint2: CGPoint(x: 71.98, y: 485.12))
        bezierPath.addLine(to: CGPoint(x: 71.98, y: 384.88))
        bezierPath.addLine(to: CGPoint(x: 220, y: 285.38))
        bezierPath.addLine(to: CGPoint(x: 72.98, y: 186.12))
        bezierPath.addLine(to: CGPoint(x: 72.98, y: 85.88))
        bezierPath.addCurve(to: CGPoint(x: 93.03, y: 73.15), controlPoint1: CGPoint(x: 72.98, y: 85.88), controlPoint2: CGPoint(x: 81.54, y: 80.44))
        bezierPath.addCurve(to: CGPoint(x: 152, y: 35.75), controlPoint1: CGPoint(x: 116.3, y: 58.39), controlPoint2: CGPoint(x: 151.57, y: 36.02))
        bezierPath.addLine(to: CGPoint(x: 152, y: 35.75))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 72, y: -36, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// wall Drawing
        let wallPath = UIBezierPath()
        wallPath.move(to: CGPoint(x: 200.47, y: 61.84))
        wallPath.addCurve(to: CGPoint(x: 222.33, y: 75.71), controlPoint1: CGPoint(x: 212.7, y: 69.6), controlPoint2: CGPoint(x: 212.7, y: 69.6))
        wallPath.addCurve(to: CGPoint(x: 229.16, y: 80.04), controlPoint1: CGPoint(x: 226.36, y: 78.27), controlPoint2: CGPoint(x: 226.36, y: 78.27))
        wallPath.addCurve(to: CGPoint(x: 231.7, y: 81.65), controlPoint1: CGPoint(x: 231.25, y: 81.36), controlPoint2: CGPoint(x: 231.25, y: 81.36))
        wallPath.addCurve(to: CGPoint(x: 234.02, y: 85.88), controlPoint1: CGPoint(x: 233.15, y: 82.57), controlPoint2: CGPoint(x: 234.02, y: 84.16))
        wallPath.addLine(to: CGPoint(x: 234.02, y: 186.12))
        wallPath.addLine(to: CGPoint(x: 231.73, y: 181.92))
        wallPath.addCurve(to: CGPoint(x: 269.67, y: 206.06), controlPoint1: CGPoint(x: 236.03, y: 184.69), controlPoint2: CGPoint(x: 249.66, y: 193.35))
        wallPath.addCurve(to: CGPoint(x: 269.74, y: 206.11), controlPoint1: CGPoint(x: 269.7, y: 206.08), controlPoint2: CGPoint(x: 269.7, y: 206.08))
        wallPath.addCurve(to: CGPoint(x: 296.87, y: 223.33), controlPoint1: CGPoint(x: 278.37, y: 211.59), controlPoint2: CGPoint(x: 287.62, y: 217.46))
        wallPath.addCurve(to: CGPoint(x: 305.81, y: 229), controlPoint1: CGPoint(x: 300.11, y: 225.38), controlPoint2: CGPoint(x: 303.11, y: 227.29))
        wallPath.addCurve(to: CGPoint(x: 308.32, y: 230.59), controlPoint1: CGPoint(x: 307.31, y: 229.95), controlPoint2: CGPoint(x: 307.31, y: 229.95))
        wallPath.addCurve(to: CGPoint(x: 309.2, y: 231.15), controlPoint1: CGPoint(x: 309.05, y: 231.06), controlPoint2: CGPoint(x: 309.05, y: 231.06))
        wallPath.addCurve(to: CGPoint(x: 311.52, y: 235.38), controlPoint1: CGPoint(x: 310.65, y: 232.07), controlPoint2: CGPoint(x: 311.52, y: 233.66))
        wallPath.addLine(to: CGPoint(x: 311.52, y: 335.62))
        wallPath.addCurve(to: CGPoint(x: 309.33, y: 339.77), controlPoint1: CGPoint(x: 311.52, y: 337.28), controlPoint2: CGPoint(x: 310.7, y: 338.84))
        wallPath.addLine(to: CGPoint(x: 160.93, y: 440.14))
        wallPath.addLine(to: CGPoint(x: 160.89, y: 431.83))
        wallPath.addLine(to: CGPoint(x: 309.29, y: 530.21))
        wallPath.addCurve(to: CGPoint(x: 311.52, y: 534.38), controlPoint1: CGPoint(x: 310.68, y: 531.13), controlPoint2: CGPoint(x: 311.52, y: 532.7))
        wallPath.addLine(to: CGPoint(x: 311.52, y: 634.62))
        wallPath.addCurve(to: CGPoint(x: 309.2, y: 638.85), controlPoint1: CGPoint(x: 311.52, y: 636.34), controlPoint2: CGPoint(x: 310.65, y: 637.93))
        wallPath.addLine(to: CGPoint(x: 230.18, y: 688.97))
        wallPath.addCurve(to: CGPoint(x: 224.82, y: 688.97), controlPoint1: CGPoint(x: 228.54, y: 690.01), controlPoint2: CGPoint(x: 226.46, y: 690.01))
        wallPath.addLine(to: CGPoint(x: 145.8, y: 638.85))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 634.62), controlPoint1: CGPoint(x: 144.35, y: 637.93), controlPoint2: CGPoint(x: 143.48, y: 636.34))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 630.67), controlPoint1: CGPoint(x: 143.48, y: 633.91), controlPoint2: CGPoint(x: 143.48, y: 633.91))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 620.16), controlPoint1: CGPoint(x: 143.48, y: 626.33), controlPoint2: CGPoint(x: 143.48, y: 626.33))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 587.74), controlPoint1: CGPoint(x: 143.48, y: 605.57), controlPoint2: CGPoint(x: 143.48, y: 605.57))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 584.5), controlPoint1: CGPoint(x: 143.48, y: 586.12), controlPoint2: CGPoint(x: 143.48, y: 586.12))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 552.54), controlPoint1: CGPoint(x: 143.48, y: 567.32), controlPoint2: CGPoint(x: 143.48, y: 567.32))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 541.04), controlPoint1: CGPoint(x: 143.48, y: 546.04), controlPoint2: CGPoint(x: 143.48, y: 546.04))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 534.92), controlPoint1: CGPoint(x: 143.48, y: 536.93), controlPoint2: CGPoint(x: 143.48, y: 536.93))
        wallPath.addLine(to: CGPoint(x: 145.8, y: 539.14))
        wallPath.addCurve(to: CGPoint(x: 131.78, y: 530.25), controlPoint1: CGPoint(x: 141.53, y: 536.43), controlPoint2: CGPoint(x: 141.53, y: 536.43))
        wallPath.addCurve(to: CGPoint(x: 106.81, y: 514.41), controlPoint1: CGPoint(x: 120.21, y: 522.91), controlPoint2: CGPoint(x: 120.21, y: 522.91))
        wallPath.addCurve(to: CGPoint(x: 79.64, y: 497.18), controlPoint1: CGPoint(x: 91.99, y: 505.01), controlPoint2: CGPoint(x: 91.99, y: 505.01))
        wallPath.addCurve(to: CGPoint(x: 70.69, y: 491.5), controlPoint1: CGPoint(x: 74.4, y: 493.85), controlPoint2: CGPoint(x: 74.4, y: 493.85))
        wallPath.addCurve(to: CGPoint(x: 67.3, y: 489.35), controlPoint1: CGPoint(x: 67.91, y: 489.74), controlPoint2: CGPoint(x: 67.91, y: 489.74))
        wallPath.addCurve(to: CGPoint(x: 64.98, y: 485.12), controlPoint1: CGPoint(x: 65.85, y: 488.43), controlPoint2: CGPoint(x: 64.98, y: 486.84))
        wallPath.addLine(to: CGPoint(x: 64.98, y: 384.88))
        wallPath.addCurve(to: CGPoint(x: 67.19, y: 380.73), controlPoint1: CGPoint(x: 64.98, y: 383.21), controlPoint2: CGPoint(x: 65.8, y: 381.65))
        wallPath.addLine(to: CGPoint(x: 215.21, y: 281.23))
        wallPath.addLine(to: CGPoint(x: 215.2, y: 289.52))
        wallPath.addLine(to: CGPoint(x: 68.18, y: 190.27))
        wallPath.addCurve(to: CGPoint(x: 65.98, y: 186.12), controlPoint1: CGPoint(x: 66.8, y: 189.34), controlPoint2: CGPoint(x: 65.98, y: 187.79))
        wallPath.addLine(to: CGPoint(x: 65.98, y: 85.88))
        wallPath.addCurve(to: CGPoint(x: 68.3, y: 81.65), controlPoint1: CGPoint(x: 65.98, y: 84.16), controlPoint2: CGPoint(x: 66.85, y: 82.57))
        wallPath.addCurve(to: CGPoint(x: 74.02, y: 78.03), controlPoint1: CGPoint(x: 69.37, y: 80.97), controlPoint2: CGPoint(x: 69.37, y: 80.97))
        wallPath.addCurve(to: CGPoint(x: 88.35, y: 68.93), controlPoint1: CGPoint(x: 80.1, y: 74.17), controlPoint2: CGPoint(x: 80.1, y: 74.17))
        wallPath.addCurve(to: CGPoint(x: 107.81, y: 56.59), controlPoint1: CGPoint(x: 97.69, y: 63.01), controlPoint2: CGPoint(x: 97.69, y: 63.01))
        wallPath.addCurve(to: CGPoint(x: 134.79, y: 39.47), controlPoint1: CGPoint(x: 122.51, y: 47.27), controlPoint2: CGPoint(x: 122.51, y: 47.27))
        wallPath.addCurve(to: CGPoint(x: 143.77, y: 33.78), controlPoint1: CGPoint(x: 140.03, y: 36.15), controlPoint2: CGPoint(x: 140.03, y: 36.15))
        wallPath.addCurve(to: CGPoint(x: 147.32, y: 31.53), controlPoint1: CGPoint(x: 146.6, y: 31.99), controlPoint2: CGPoint(x: 146.6, y: 31.99))
        wallPath.addCurve(to: CGPoint(x: 152.67, y: 31.53), controlPoint1: CGPoint(x: 148.95, y: 30.49), controlPoint2: CGPoint(x: 151.04, y: 30.49))
        wallPath.addLine(to: CGPoint(x: 200.47, y: 61.84))
        wallPath.close()
        wallPath.move(to: CGPoint(x: 195.11, y: 70.29))
        wallPath.addLine(to: CGPoint(x: 147.32, y: 39.97))
        wallPath.addLine(to: CGPoint(x: 150, y: 35.75))
        wallPath.addLine(to: CGPoint(x: 152.67, y: 39.97))
        wallPath.addCurve(to: CGPoint(x: 149.12, y: 42.23), controlPoint1: CGPoint(x: 151.95, y: 40.43), controlPoint2: CGPoint(x: 151.95, y: 40.43))
        wallPath.addCurve(to: CGPoint(x: 140.15, y: 47.92), controlPoint1: CGPoint(x: 145.39, y: 44.6), controlPoint2: CGPoint(x: 145.39, y: 44.6))
        wallPath.addCurve(to: CGPoint(x: 113.17, y: 65.03), controlPoint1: CGPoint(x: 127.86, y: 55.71), controlPoint2: CGPoint(x: 127.86, y: 55.71))
        wallPath.addCurve(to: CGPoint(x: 93.71, y: 77.38), controlPoint1: CGPoint(x: 103.04, y: 71.46), controlPoint2: CGPoint(x: 103.04, y: 71.46))
        wallPath.addCurve(to: CGPoint(x: 79.37, y: 86.47), controlPoint1: CGPoint(x: 85.46, y: 82.61), controlPoint2: CGPoint(x: 85.46, y: 82.61))
        wallPath.addCurve(to: CGPoint(x: 73.65, y: 90.1), controlPoint1: CGPoint(x: 74.72, y: 89.42), controlPoint2: CGPoint(x: 74.72, y: 89.42))
        wallPath.addLine(to: CGPoint(x: 75.98, y: 85.88))
        wallPath.addLine(to: CGPoint(x: 75.98, y: 186.12))
        wallPath.addLine(to: CGPoint(x: 73.77, y: 181.98))
        wallPath.addLine(to: CGPoint(x: 220.8, y: 281.23))
        wallPath.addCurve(to: CGPoint(x: 220.79, y: 289.52), controlPoint1: CGPoint(x: 223.74, y: 283.22), controlPoint2: CGPoint(x: 223.73, y: 287.55))
        wallPath.addLine(to: CGPoint(x: 72.76, y: 389.02))
        wallPath.addLine(to: CGPoint(x: 74.98, y: 384.88))
        wallPath.addLine(to: CGPoint(x: 74.98, y: 485.12))
        wallPath.addLine(to: CGPoint(x: 72.65, y: 480.9))
        wallPath.addCurve(to: CGPoint(x: 76.05, y: 483.06), controlPoint1: CGPoint(x: 73.27, y: 481.29), controlPoint2: CGPoint(x: 73.27, y: 481.29))
        wallPath.addCurve(to: CGPoint(x: 85, y: 488.73), controlPoint1: CGPoint(x: 79.75, y: 485.41), controlPoint2: CGPoint(x: 79.75, y: 485.41))
        wallPath.addCurve(to: CGPoint(x: 112.17, y: 505.97), controlPoint1: CGPoint(x: 97.35, y: 496.57), controlPoint2: CGPoint(x: 97.35, y: 496.57))
        wallPath.addCurve(to: CGPoint(x: 137.14, y: 521.81), controlPoint1: CGPoint(x: 125.57, y: 514.46), controlPoint2: CGPoint(x: 125.57, y: 514.46))
        wallPath.addCurve(to: CGPoint(x: 151.15, y: 530.69), controlPoint1: CGPoint(x: 146.89, y: 527.99), controlPoint2: CGPoint(x: 146.89, y: 527.99))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 534.92), controlPoint1: CGPoint(x: 152.6, y: 531.61), controlPoint2: CGPoint(x: 153.48, y: 533.2))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 541.04), controlPoint1: CGPoint(x: 153.48, y: 536.93), controlPoint2: CGPoint(x: 153.48, y: 536.93))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 552.54), controlPoint1: CGPoint(x: 153.48, y: 546.04), controlPoint2: CGPoint(x: 153.48, y: 546.04))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 584.5), controlPoint1: CGPoint(x: 153.48, y: 567.32), controlPoint2: CGPoint(x: 153.48, y: 567.32))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 587.74), controlPoint1: CGPoint(x: 153.48, y: 586.12), controlPoint2: CGPoint(x: 153.48, y: 586.12))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 620.16), controlPoint1: CGPoint(x: 153.48, y: 605.57), controlPoint2: CGPoint(x: 153.48, y: 605.57))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 630.67), controlPoint1: CGPoint(x: 153.48, y: 626.33), controlPoint2: CGPoint(x: 153.48, y: 626.33))
        wallPath.addCurve(to: CGPoint(x: 153.48, y: 634.62), controlPoint1: CGPoint(x: 153.48, y: 633.91), controlPoint2: CGPoint(x: 153.48, y: 633.91))
        wallPath.addLine(to: CGPoint(x: 151.15, y: 630.4))
        wallPath.addLine(to: CGPoint(x: 230.18, y: 680.53))
        wallPath.addLine(to: CGPoint(x: 224.82, y: 680.53))
        wallPath.addLine(to: CGPoint(x: 303.85, y: 630.4))
        wallPath.addLine(to: CGPoint(x: 301.52, y: 634.62))
        wallPath.addLine(to: CGPoint(x: 301.52, y: 534.38))
        wallPath.addLine(to: CGPoint(x: 303.76, y: 538.54))
        wallPath.addLine(to: CGPoint(x: 155.36, y: 440.17))
        wallPath.addCurve(to: CGPoint(x: 155.32, y: 431.86), controlPoint1: CGPoint(x: 152.4, y: 438.2), controlPoint2: CGPoint(x: 152.38, y: 433.85))
        wallPath.addLine(to: CGPoint(x: 303.72, y: 331.48))
        wallPath.addLine(to: CGPoint(x: 301.52, y: 335.62))
        wallPath.addLine(to: CGPoint(x: 301.52, y: 235.38))
        wallPath.addLine(to: CGPoint(x: 303.85, y: 239.6))
        wallPath.addCurve(to: CGPoint(x: 302.96, y: 239.03), controlPoint1: CGPoint(x: 303.69, y: 239.5), controlPoint2: CGPoint(x: 303.69, y: 239.5))
        wallPath.addCurve(to: CGPoint(x: 300.45, y: 237.45), controlPoint1: CGPoint(x: 301.96, y: 238.4), controlPoint2: CGPoint(x: 301.96, y: 238.4))
        wallPath.addCurve(to: CGPoint(x: 291.51, y: 231.77), controlPoint1: CGPoint(x: 297.76, y: 235.73), controlPoint2: CGPoint(x: 294.75, y: 233.83))
        wallPath.addCurve(to: CGPoint(x: 264.38, y: 214.55), controlPoint1: CGPoint(x: 282.26, y: 225.9), controlPoint2: CGPoint(x: 273.01, y: 220.03))
        wallPath.addCurve(to: CGPoint(x: 264.31, y: 214.5), controlPoint1: CGPoint(x: 264.34, y: 214.53), controlPoint2: CGPoint(x: 264.34, y: 214.53))
        wallPath.addCurve(to: CGPoint(x: 226.32, y: 190.33), controlPoint1: CGPoint(x: 244.27, y: 201.78), controlPoint2: CGPoint(x: 230.65, y: 193.11))
        wallPath.addCurve(to: CGPoint(x: 224.02, y: 186.12), controlPoint1: CGPoint(x: 224.89, y: 189.41), controlPoint2: CGPoint(x: 224.02, y: 187.83))
        wallPath.addLine(to: CGPoint(x: 224.02, y: 85.88))
        wallPath.addLine(to: CGPoint(x: 226.35, y: 90.1))
        wallPath.addCurve(to: CGPoint(x: 223.81, y: 88.49), controlPoint1: CGPoint(x: 225.89, y: 89.81), controlPoint2: CGPoint(x: 225.89, y: 89.81))
        wallPath.addCurve(to: CGPoint(x: 216.97, y: 84.15), controlPoint1: CGPoint(x: 221.01, y: 86.71), controlPoint2: CGPoint(x: 221.01, y: 86.71))
        wallPath.addCurve(to: CGPoint(x: 195.11, y: 70.29), controlPoint1: CGPoint(x: 207.34, y: 78.04), controlPoint2: CGPoint(x: 207.34, y: 78.04))
        wallPath.close()
        context.saveGState()
        wallPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 188.25, y: 30.75), end: CGPoint(x: 188.25, y: 689.75), options: [])
        context.restoreGState()

        ////// wall Inner Shadow
        context.saveGState()
        context.clip(to: wallPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wallOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wallOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wallOpaqueShadow.setFill()
        wallPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 149, y: 134, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 217, y: 596, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole7(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 271.57, y: 233.86))
        bezier2Path.addCurve(to: CGPoint(x: 293.5, y: 211), controlPoint1: CGPoint(x: 284.01, y: 220.89), controlPoint2: CGPoint(x: 293.5, y: 211))
        bezier2Path.addLine(to: CGPoint(x: 373.61, y: 294.5))
        bezier2Path.addLine(to: CGPoint(x: 373.61, y: 461.5))
        bezier2Path.addLine(to: CGPoint(x: 293.5, y: 545))
        bezier2Path.addCurve(to: CGPoint(x: 271.57, y: 522.14), controlPoint1: CGPoint(x: 293.5, y: 545), controlPoint2: CGPoint(x: 284.01, y: 535.11))
        bezier2Path.addCurve(to: CGPoint(x: 198.5, y: 643), controlPoint1: CGPoint(x: 252.02, y: 554.47), controlPoint2: CGPoint(x: 198.5, y: 643))
        bezier2Path.addCurve(to: CGPoint(x: 126.2, y: 523.42), controlPoint1: CGPoint(x: 198.5, y: 643), controlPoint2: CGPoint(x: 146.35, y: 556.74))
        bezier2Path.addCurve(to: CGPoint(x: 105.5, y: 545), controlPoint1: CGPoint(x: 114.37, y: 535.76), controlPoint2: CGPoint(x: 105.5, y: 545))
        bezier2Path.addLine(to: CGPoint(x: 25.39, y: 461.5))
        bezier2Path.addLine(to: CGPoint(x: 25.39, y: 294.5))
        bezier2Path.addLine(to: CGPoint(x: 105.5, y: 211))
        bezier2Path.addCurve(to: CGPoint(x: 126.2, y: 232.58), controlPoint1: CGPoint(x: 105.5, y: 211), controlPoint2: CGPoint(x: 114.37, y: 220.24))
        bezier2Path.addCurve(to: CGPoint(x: 198.5, y: 113), controlPoint1: CGPoint(x: 146.29, y: 199.36), controlPoint2: CGPoint(x: 198.18, y: 113.53))
        bezier2Path.addCurve(to: CGPoint(x: 271.57, y: 233.86), controlPoint1: CGPoint(x: 198.5, y: 113), controlPoint2: CGPoint(x: 252.02, y: 201.53))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 199.5, y: 262))
        bezier2Path.addLine(to: CGPoint(x: 158.5, y: 262))
        bezier2Path.addLine(to: CGPoint(x: 123.39, y: 341.28))
        bezier2Path.addLine(to: CGPoint(x: 123.39, y: 414.22))
        bezier2Path.addLine(to: CGPoint(x: 158.39, y: 450.69))
        bezier2Path.addCurve(to: CGPoint(x: 167.43, y: 441.27), controlPoint1: CGPoint(x: 158.39, y: 450.69), controlPoint2: CGPoint(x: 162.26, y: 446.66))
        bezier2Path.addCurve(to: CGPoint(x: 199.01, y: 493.5), controlPoint1: CGPoint(x: 176.23, y: 455.82), controlPoint2: CGPoint(x: 199.01, y: 493.5))
        bezier2Path.addLine(to: CGPoint(x: 240.5, y: 493))
        bezier2Path.addLine(to: CGPoint(x: 275.5, y: 414.22))
        bezier2Path.addLine(to: CGPoint(x: 275.5, y: 341.28))
        bezier2Path.addLine(to: CGPoint(x: 293.5, y: 286))
        bezier2Path.addLine(to: CGPoint(x: 240.51, y: 304.81))
        bezier2Path.addCurve(to: CGPoint(x: 230.93, y: 314.79), controlPoint1: CGPoint(x: 240.51, y: 304.81), controlPoint2: CGPoint(x: 236.36, y: 309.12))
        bezier2Path.addCurve(to: CGPoint(x: 199.5, y: 262), controlPoint1: CGPoint(x: 226.73, y: 307.84), controlPoint2: CGPoint(x: 199.5, y: 262))
        bezier2Path.close()
        purpDark.setStroke()
        bezier2Path.lineWidth = 24
        bezier2Path.lineJoinStyle = .round
        bezier2Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 271.57, y: 233.86))
        bezierPath.addCurve(to: CGPoint(x: 293.5, y: 211), controlPoint1: CGPoint(x: 284.01, y: 220.89), controlPoint2: CGPoint(x: 293.5, y: 211))
        bezierPath.addLine(to: CGPoint(x: 373.61, y: 294.5))
        bezierPath.addLine(to: CGPoint(x: 373.61, y: 461.5))
        bezierPath.addLine(to: CGPoint(x: 293.5, y: 545))
        bezierPath.addCurve(to: CGPoint(x: 271.57, y: 522.14), controlPoint1: CGPoint(x: 293.5, y: 545), controlPoint2: CGPoint(x: 284.01, y: 535.11))
        bezierPath.addCurve(to: CGPoint(x: 198.5, y: 643), controlPoint1: CGPoint(x: 252.02, y: 554.47), controlPoint2: CGPoint(x: 198.5, y: 643))
        bezierPath.addCurve(to: CGPoint(x: 126.2, y: 523.42), controlPoint1: CGPoint(x: 198.5, y: 643), controlPoint2: CGPoint(x: 146.35, y: 556.74))
        bezierPath.addCurve(to: CGPoint(x: 105.5, y: 545), controlPoint1: CGPoint(x: 114.37, y: 535.76), controlPoint2: CGPoint(x: 105.5, y: 545))
        bezierPath.addLine(to: CGPoint(x: 25.39, y: 461.5))
        bezierPath.addLine(to: CGPoint(x: 25.39, y: 294.5))
        bezierPath.addLine(to: CGPoint(x: 105.5, y: 211))
        bezierPath.addCurve(to: CGPoint(x: 126.2, y: 232.58), controlPoint1: CGPoint(x: 105.5, y: 211), controlPoint2: CGPoint(x: 114.37, y: 220.24))
        bezierPath.addCurve(to: CGPoint(x: 198.5, y: 113), controlPoint1: CGPoint(x: 146.29, y: 199.36), controlPoint2: CGPoint(x: 198.18, y: 113.53))
        bezierPath.addCurve(to: CGPoint(x: 271.57, y: 233.86), controlPoint1: CGPoint(x: 198.5, y: 113), controlPoint2: CGPoint(x: 252.02, y: 201.53))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 199.5, y: 262))
        bezierPath.addLine(to: CGPoint(x: 158.5, y: 262))
        bezierPath.addLine(to: CGPoint(x: 123.39, y: 341.28))
        bezierPath.addLine(to: CGPoint(x: 123.39, y: 414.22))
        bezierPath.addLine(to: CGPoint(x: 158.39, y: 450.69))
        bezierPath.addCurve(to: CGPoint(x: 167.43, y: 441.27), controlPoint1: CGPoint(x: 158.39, y: 450.69), controlPoint2: CGPoint(x: 162.26, y: 446.66))
        bezierPath.addCurve(to: CGPoint(x: 199.01, y: 493.5), controlPoint1: CGPoint(x: 176.23, y: 455.82), controlPoint2: CGPoint(x: 199.01, y: 493.5))
        bezierPath.addLine(to: CGPoint(x: 240.5, y: 493))
        bezierPath.addLine(to: CGPoint(x: 275.5, y: 414.22))
        bezierPath.addLine(to: CGPoint(x: 275.5, y: 341.28))
        bezierPath.addLine(to: CGPoint(x: 293.5, y: 286))
        bezierPath.addLine(to: CGPoint(x: 240.51, y: 304.81))
        bezierPath.addCurve(to: CGPoint(x: 230.93, y: 314.79), controlPoint1: CGPoint(x: 240.51, y: 304.81), controlPoint2: CGPoint(x: 236.36, y: 309.12))
        bezierPath.addCurve(to: CGPoint(x: 199.5, y: 262), controlPoint1: CGPoint(x: 226.73, y: 307.84), controlPoint2: CGPoint(x: 199.5, y: 262))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 25, y: -113, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 268.46, y: 230.4))
        bezier3Path.addCurve(to: CGPoint(x: 284.09, y: 214.1), controlPoint1: CGPoint(x: 277.42, y: 221.05), controlPoint2: CGPoint(x: 277.42, y: 221.05))
        bezier3Path.addCurve(to: CGPoint(x: 288.72, y: 209.29), controlPoint1: CGPoint(x: 286.84, y: 211.24), controlPoint2: CGPoint(x: 286.84, y: 211.24))
        bezier3Path.addCurve(to: CGPoint(x: 290.39, y: 207.54), controlPoint1: CGPoint(x: 290.1, y: 207.85), controlPoint2: CGPoint(x: 290.1, y: 207.85))
        bezier3Path.addCurve(to: CGPoint(x: 297.61, y: 207.54), controlPoint1: CGPoint(x: 292.36, y: 205.49), controlPoint2: CGPoint(x: 295.64, y: 205.49))
        bezier3Path.addLine(to: CGPoint(x: 377.72, y: 291.04))
        bezier3Path.addCurve(to: CGPoint(x: 379.11, y: 294.5), controlPoint1: CGPoint(x: 378.61, y: 291.97), controlPoint2: CGPoint(x: 379.11, y: 293.21))
        bezier3Path.addLine(to: CGPoint(x: 379.11, y: 461.5))
        bezier3Path.addCurve(to: CGPoint(x: 377.72, y: 464.96), controlPoint1: CGPoint(x: 379.11, y: 462.79), controlPoint2: CGPoint(x: 378.61, y: 464.03))
        bezier3Path.addLine(to: CGPoint(x: 297.61, y: 548.46))
        bezier3Path.addCurve(to: CGPoint(x: 290.39, y: 548.46), controlPoint1: CGPoint(x: 295.64, y: 550.51), controlPoint2: CGPoint(x: 292.36, y: 550.51))
        bezier3Path.addCurve(to: CGPoint(x: 288.72, y: 546.71), controlPoint1: CGPoint(x: 290.1, y: 548.15), controlPoint2: CGPoint(x: 290.1, y: 548.15))
        bezier3Path.addCurve(to: CGPoint(x: 284.09, y: 541.9), controlPoint1: CGPoint(x: 286.84, y: 544.76), controlPoint2: CGPoint(x: 286.84, y: 544.76))
        bezier3Path.addCurve(to: CGPoint(x: 268.46, y: 525.6), controlPoint1: CGPoint(x: 277.42, y: 534.95), controlPoint2: CGPoint(x: 277.42, y: 534.95))
        bezier3Path.addLine(to: CGPoint(x: 276.35, y: 524.73))
        bezier3Path.addCurve(to: CGPoint(x: 243.33, y: 579.34), controlPoint1: CGPoint(x: 269.5, y: 536.06), controlPoint2: CGPoint(x: 258.06, y: 554.97))
        bezier3Path.addCurve(to: CGPoint(x: 215.8, y: 624.88), controlPoint1: CGPoint(x: 228.31, y: 604.18), controlPoint2: CGPoint(x: 228.31, y: 604.18))
        bezier3Path.addCurve(to: CGPoint(x: 206.72, y: 639.89), controlPoint1: CGPoint(x: 210.48, y: 633.68), controlPoint2: CGPoint(x: 210.48, y: 633.68))
        bezier3Path.addCurve(to: CGPoint(x: 203.28, y: 645.59), controlPoint1: CGPoint(x: 203.9, y: 644.55), controlPoint2: CGPoint(x: 203.9, y: 644.55))
        bezier3Path.addCurve(to: CGPoint(x: 194.72, y: 645.59), controlPoint1: CGPoint(x: 201.33, y: 648.8), controlPoint2: CGPoint(x: 196.67, y: 648.8))
        bezier3Path.addCurve(to: CGPoint(x: 191.28, y: 639.89), controlPoint1: CGPoint(x: 194.1, y: 644.55), controlPoint2: CGPoint(x: 194.1, y: 644.55))
        bezier3Path.addCurve(to: CGPoint(x: 182.2, y: 624.88), controlPoint1: CGPoint(x: 187.52, y: 633.68), controlPoint2: CGPoint(x: 187.52, y: 633.68))
        bezier3Path.addCurve(to: CGPoint(x: 154.67, y: 579.34), controlPoint1: CGPoint(x: 169.69, y: 604.18), controlPoint2: CGPoint(x: 169.69, y: 604.18))
        bezier3Path.addCurve(to: CGPoint(x: 122.42, y: 526.01), controlPoint1: CGPoint(x: 136.23, y: 548.84), controlPoint2: CGPoint(x: 136.23, y: 548.84))
        bezier3Path.addLine(to: CGPoint(x: 130.31, y: 526.88))
        bezier3Path.addCurve(to: CGPoint(x: 115.52, y: 542.3), controlPoint1: CGPoint(x: 121.81, y: 535.75), controlPoint2: CGPoint(x: 121.81, y: 535.75))
        bezier3Path.addCurve(to: CGPoint(x: 109.61, y: 548.46), controlPoint1: CGPoint(x: 110.72, y: 547.31), controlPoint2: CGPoint(x: 110.72, y: 547.31))
        bezier3Path.addCurve(to: CGPoint(x: 102.39, y: 548.46), controlPoint1: CGPoint(x: 107.64, y: 550.51), controlPoint2: CGPoint(x: 104.36, y: 550.51))
        bezier3Path.addLine(to: CGPoint(x: 22.28, y: 464.96))
        bezier3Path.addCurve(to: CGPoint(x: 20.89, y: 461.5), controlPoint1: CGPoint(x: 21.39, y: 464.03), controlPoint2: CGPoint(x: 20.89, y: 462.79))
        bezier3Path.addLine(to: CGPoint(x: 20.89, y: 294.5))
        bezier3Path.addCurve(to: CGPoint(x: 22.28, y: 291.04), controlPoint1: CGPoint(x: 20.89, y: 293.21), controlPoint2: CGPoint(x: 21.39, y: 291.97))
        bezier3Path.addLine(to: CGPoint(x: 102.39, y: 207.54))
        bezier3Path.addCurve(to: CGPoint(x: 109.61, y: 207.54), controlPoint1: CGPoint(x: 104.36, y: 205.49), controlPoint2: CGPoint(x: 107.64, y: 205.49))
        bezier3Path.addCurve(to: CGPoint(x: 115.52, y: 213.7), controlPoint1: CGPoint(x: 110.72, y: 208.69), controlPoint2: CGPoint(x: 110.72, y: 208.69))
        bezier3Path.addCurve(to: CGPoint(x: 130.31, y: 229.12), controlPoint1: CGPoint(x: 121.81, y: 220.25), controlPoint2: CGPoint(x: 121.81, y: 220.25))
        bezier3Path.addLine(to: CGPoint(x: 122.42, y: 229.99))
        bezier3Path.addCurve(to: CGPoint(x: 165.98, y: 157.95), controlPoint1: CGPoint(x: 131.22, y: 215.45), controlPoint2: CGPoint(x: 146.6, y: 190))
        bezier3Path.addCurve(to: CGPoint(x: 186.11, y: 124.65), controlPoint1: CGPoint(x: 177.32, y: 139.2), controlPoint2: CGPoint(x: 177.32, y: 139.2))
        bezier3Path.addCurve(to: CGPoint(x: 192.34, y: 114.34), controlPoint1: CGPoint(x: 189.79, y: 118.57), controlPoint2: CGPoint(x: 189.79, y: 118.57))
        bezier3Path.addCurve(to: CGPoint(x: 194.72, y: 110.42), controlPoint1: CGPoint(x: 194.26, y: 111.18), controlPoint2: CGPoint(x: 194.26, y: 111.18))
        bezier3Path.addCurve(to: CGPoint(x: 203.28, y: 110.42), controlPoint1: CGPoint(x: 196.66, y: 107.2), controlPoint2: CGPoint(x: 201.33, y: 107.2))
        bezier3Path.addCurve(to: CGPoint(x: 206.72, y: 116.11), controlPoint1: CGPoint(x: 203.9, y: 111.45), controlPoint2: CGPoint(x: 203.9, y: 111.45))
        bezier3Path.addCurve(to: CGPoint(x: 215.79, y: 131.12), controlPoint1: CGPoint(x: 210.47, y: 122.32), controlPoint2: CGPoint(x: 210.47, y: 122.32))
        bezier3Path.addCurve(to: CGPoint(x: 243.33, y: 176.66), controlPoint1: CGPoint(x: 225.18, y: 146.64), controlPoint2: CGPoint(x: 234.57, y: 162.17))
        bezier3Path.addLine(to: CGPoint(x: 243.33, y: 176.66))
        bezier3Path.addCurve(to: CGPoint(x: 276.35, y: 231.27), controlPoint1: CGPoint(x: 258.06, y: 201.03), controlPoint2: CGPoint(x: 269.5, y: 219.94))
        bezier3Path.addLine(to: CGPoint(x: 268.46, y: 230.4))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 275.68, y: 237.32))
        bezier3Path.addCurve(to: CGPoint(x: 267.79, y: 236.45), controlPoint1: CGPoint(x: 273.4, y: 239.69), controlPoint2: CGPoint(x: 269.49, y: 239.26))
        bezier3Path.addCurve(to: CGPoint(x: 234.77, y: 181.84), controlPoint1: CGPoint(x: 260.94, y: 225.11), controlPoint2: CGPoint(x: 249.51, y: 206.2))
        bezier3Path.addLine(to: CGPoint(x: 234.77, y: 181.84))
        bezier3Path.addCurve(to: CGPoint(x: 207.24, y: 136.29), controlPoint1: CGPoint(x: 226.01, y: 167.35), controlPoint2: CGPoint(x: 216.62, y: 151.82))
        bezier3Path.addCurve(to: CGPoint(x: 198.16, y: 121.28), controlPoint1: CGPoint(x: 201.92, y: 127.49), controlPoint2: CGPoint(x: 201.92, y: 127.49))
        bezier3Path.addCurve(to: CGPoint(x: 194.72, y: 115.59), controlPoint1: CGPoint(x: 195.35, y: 116.62), controlPoint2: CGPoint(x: 195.35, y: 116.62))
        bezier3Path.addLine(to: CGPoint(x: 199, y: 113))
        bezier3Path.addLine(to: CGPoint(x: 203.28, y: 115.59))
        bezier3Path.addCurve(to: CGPoint(x: 200.9, y: 119.52), controlPoint1: CGPoint(x: 202.81, y: 116.36), controlPoint2: CGPoint(x: 202.81, y: 116.36))
        bezier3Path.addCurve(to: CGPoint(x: 194.67, y: 129.83), controlPoint1: CGPoint(x: 198.35, y: 123.74), controlPoint2: CGPoint(x: 198.35, y: 123.74))
        bezier3Path.addCurve(to: CGPoint(x: 174.54, y: 163.12), controlPoint1: CGPoint(x: 185.87, y: 144.37), controlPoint2: CGPoint(x: 185.87, y: 144.37))
        bezier3Path.addCurve(to: CGPoint(x: 130.98, y: 235.17), controlPoint1: CGPoint(x: 155.16, y: 195.18), controlPoint2: CGPoint(x: 139.77, y: 220.63))
        bezier3Path.addCurve(to: CGPoint(x: 123.1, y: 236.04), controlPoint1: CGPoint(x: 129.28, y: 237.98), controlPoint2: CGPoint(x: 125.37, y: 238.42))
        bezier3Path.addCurve(to: CGPoint(x: 108.31, y: 220.63), controlPoint1: CGPoint(x: 114.59, y: 227.18), controlPoint2: CGPoint(x: 114.59, y: 227.18))
        bezier3Path.addCurve(to: CGPoint(x: 102.39, y: 214.46), controlPoint1: CGPoint(x: 103.5, y: 215.62), controlPoint2: CGPoint(x: 103.5, y: 215.62))
        bezier3Path.addLine(to: CGPoint(x: 109.61, y: 214.46))
        bezier3Path.addLine(to: CGPoint(x: 29.5, y: 297.96))
        bezier3Path.addLine(to: CGPoint(x: 30.89, y: 294.5))
        bezier3Path.addLine(to: CGPoint(x: 30.89, y: 461.5))
        bezier3Path.addLine(to: CGPoint(x: 29.5, y: 458.04))
        bezier3Path.addLine(to: CGPoint(x: 109.61, y: 541.54))
        bezier3Path.addLine(to: CGPoint(x: 102.39, y: 541.54))
        bezier3Path.addCurve(to: CGPoint(x: 108.31, y: 535.37), controlPoint1: CGPoint(x: 103.5, y: 540.38), controlPoint2: CGPoint(x: 103.5, y: 540.38))
        bezier3Path.addCurve(to: CGPoint(x: 123.1, y: 519.96), controlPoint1: CGPoint(x: 114.59, y: 528.82), controlPoint2: CGPoint(x: 114.59, y: 528.82))
        bezier3Path.addCurve(to: CGPoint(x: 130.98, y: 520.83), controlPoint1: CGPoint(x: 125.37, y: 517.58), controlPoint2: CGPoint(x: 129.28, y: 518.02))
        bezier3Path.addCurve(to: CGPoint(x: 163.23, y: 574.16), controlPoint1: CGPoint(x: 144.79, y: 543.67), controlPoint2: CGPoint(x: 144.79, y: 543.67))
        bezier3Path.addCurve(to: CGPoint(x: 190.76, y: 619.71), controlPoint1: CGPoint(x: 178.25, y: 599.01), controlPoint2: CGPoint(x: 178.25, y: 599.01))
        bezier3Path.addCurve(to: CGPoint(x: 199.84, y: 634.72), controlPoint1: CGPoint(x: 196.08, y: 628.51), controlPoint2: CGPoint(x: 196.08, y: 628.51))
        bezier3Path.addCurve(to: CGPoint(x: 203.28, y: 640.41), controlPoint1: CGPoint(x: 202.65, y: 639.38), controlPoint2: CGPoint(x: 202.65, y: 639.38))
        bezier3Path.addLine(to: CGPoint(x: 194.72, y: 640.41))
        bezier3Path.addCurve(to: CGPoint(x: 198.16, y: 634.72), controlPoint1: CGPoint(x: 195.35, y: 639.38), controlPoint2: CGPoint(x: 195.35, y: 639.38))
        bezier3Path.addCurve(to: CGPoint(x: 207.24, y: 619.71), controlPoint1: CGPoint(x: 201.92, y: 628.51), controlPoint2: CGPoint(x: 201.92, y: 628.51))
        bezier3Path.addCurve(to: CGPoint(x: 234.77, y: 574.16), controlPoint1: CGPoint(x: 219.75, y: 599.01), controlPoint2: CGPoint(x: 219.75, y: 599.01))
        bezier3Path.addCurve(to: CGPoint(x: 267.79, y: 519.55), controlPoint1: CGPoint(x: 249.51, y: 549.8), controlPoint2: CGPoint(x: 260.94, y: 530.89))
        bezier3Path.addCurve(to: CGPoint(x: 275.68, y: 518.68), controlPoint1: CGPoint(x: 269.49, y: 516.74), controlPoint2: CGPoint(x: 273.4, y: 516.31))
        bezier3Path.addCurve(to: CGPoint(x: 291.31, y: 534.97), controlPoint1: CGPoint(x: 284.64, y: 528.02), controlPoint2: CGPoint(x: 284.64, y: 528.02))
        bezier3Path.addCurve(to: CGPoint(x: 295.93, y: 539.79), controlPoint1: CGPoint(x: 294.06, y: 537.84), controlPoint2: CGPoint(x: 294.06, y: 537.84))
        bezier3Path.addCurve(to: CGPoint(x: 297.61, y: 541.54), controlPoint1: CGPoint(x: 297.31, y: 541.23), controlPoint2: CGPoint(x: 297.31, y: 541.23))
        bezier3Path.addLine(to: CGPoint(x: 290.39, y: 541.54))
        bezier3Path.addLine(to: CGPoint(x: 370.5, y: 458.04))
        bezier3Path.addLine(to: CGPoint(x: 369.11, y: 461.5))
        bezier3Path.addLine(to: CGPoint(x: 369.11, y: 294.5))
        bezier3Path.addLine(to: CGPoint(x: 370.5, y: 297.96))
        bezier3Path.addLine(to: CGPoint(x: 290.39, y: 214.46))
        bezier3Path.addLine(to: CGPoint(x: 297.61, y: 214.46))
        bezier3Path.addCurve(to: CGPoint(x: 295.93, y: 216.21), controlPoint1: CGPoint(x: 297.31, y: 214.77), controlPoint2: CGPoint(x: 297.31, y: 214.77))
        bezier3Path.addCurve(to: CGPoint(x: 291.31, y: 221.03), controlPoint1: CGPoint(x: 294.06, y: 218.16), controlPoint2: CGPoint(x: 294.06, y: 218.16))
        bezier3Path.addCurve(to: CGPoint(x: 275.68, y: 237.32), controlPoint1: CGPoint(x: 284.64, y: 227.98), controlPoint2: CGPoint(x: 284.64, y: 227.98))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 200, y: 267))
        bezier3Path.addLine(to: CGPoint(x: 159, y: 267))
        bezier3Path.addLine(to: CGPoint(x: 163.57, y: 264.02))
        bezier3Path.addLine(to: CGPoint(x: 128.46, y: 343.3))
        bezier3Path.addLine(to: CGPoint(x: 128.89, y: 341.28))
        bezier3Path.addLine(to: CGPoint(x: 128.89, y: 414.22))
        bezier3Path.addLine(to: CGPoint(x: 127.5, y: 410.76))
        bezier3Path.addLine(to: CGPoint(x: 162.49, y: 447.23))
        bezier3Path.addLine(to: CGPoint(x: 155.28, y: 447.23))
        bezier3Path.addCurve(to: CGPoint(x: 157.86, y: 444.54), controlPoint1: CGPoint(x: 155.76, y: 446.73), controlPoint2: CGPoint(x: 155.76, y: 446.73))
        bezier3Path.addCurve(to: CGPoint(x: 164.32, y: 437.81), controlPoint1: CGPoint(x: 160.61, y: 441.68), controlPoint2: CGPoint(x: 160.61, y: 441.68))
        bezier3Path.addCurve(to: CGPoint(x: 172.21, y: 438.68), controlPoint1: CGPoint(x: 166.6, y: 435.43), controlPoint2: CGPoint(x: 170.51, y: 435.87))
        bezier3Path.addCurve(to: CGPoint(x: 186.29, y: 461.98), controlPoint1: CGPoint(x: 178.24, y: 448.66), controlPoint2: CGPoint(x: 178.24, y: 448.66))
        bezier3Path.addCurve(to: CGPoint(x: 198.32, y: 481.87), controlPoint1: CGPoint(x: 192.85, y: 472.83), controlPoint2: CGPoint(x: 192.85, y: 472.83))
        bezier3Path.addCurve(to: CGPoint(x: 202.28, y: 488.43), controlPoint1: CGPoint(x: 200.64, y: 485.71), controlPoint2: CGPoint(x: 200.64, y: 485.71))
        bezier3Path.addCurve(to: CGPoint(x: 203.79, y: 490.91), controlPoint1: CGPoint(x: 203.51, y: 490.46), controlPoint2: CGPoint(x: 203.51, y: 490.46))
        bezier3Path.addLine(to: CGPoint(x: 199.45, y: 488.5))
        bezier3Path.addLine(to: CGPoint(x: 240.94, y: 488))
        bezier3Path.addLine(to: CGPoint(x: 236.43, y: 490.97))
        bezier3Path.addLine(to: CGPoint(x: 271.43, y: 412.19))
        bezier3Path.addLine(to: CGPoint(x: 271, y: 414.22))
        bezier3Path.addLine(to: CGPoint(x: 271, y: 341.28))
        bezier3Path.addCurve(to: CGPoint(x: 271.25, y: 339.73), controlPoint1: CGPoint(x: 271, y: 340.75), controlPoint2: CGPoint(x: 271.08, y: 340.23))
        bezier3Path.addLine(to: CGPoint(x: 289.25, y: 284.45))
        bezier3Path.addLine(to: CGPoint(x: 295.67, y: 290.71))
        bezier3Path.addLine(to: CGPoint(x: 242.68, y: 309.52))
        bezier3Path.addLine(to: CGPoint(x: 244.62, y: 308.27))
        bezier3Path.addCurve(to: CGPoint(x: 241.86, y: 311.14), controlPoint1: CGPoint(x: 244.1, y: 308.81), controlPoint2: CGPoint(x: 244.1, y: 308.81))
        bezier3Path.addCurve(to: CGPoint(x: 235.04, y: 318.25), controlPoint1: CGPoint(x: 238.95, y: 314.17), controlPoint2: CGPoint(x: 238.95, y: 314.17))
        bezier3Path.addCurve(to: CGPoint(x: 227.15, y: 317.38), controlPoint1: CGPoint(x: 232.76, y: 320.63), controlPoint2: CGPoint(x: 228.85, y: 320.19))
        bezier3Path.addCurve(to: CGPoint(x: 211.69, y: 291.45), controlPoint1: CGPoint(x: 225.44, y: 314.54), controlPoint2: CGPoint(x: 219.89, y: 305.23))
        bezier3Path.addCurve(to: CGPoint(x: 211.65, y: 291.39), controlPoint1: CGPoint(x: 211.67, y: 291.42), controlPoint2: CGPoint(x: 211.67, y: 291.42))
        bezier3Path.addCurve(to: CGPoint(x: 200.68, y: 272.94), controlPoint1: CGPoint(x: 208.16, y: 285.52), controlPoint2: CGPoint(x: 204.42, y: 279.23))
        bezier3Path.addCurve(to: CGPoint(x: 197.07, y: 266.86), controlPoint1: CGPoint(x: 199.38, y: 270.74), controlPoint2: CGPoint(x: 198.16, y: 268.69))
        bezier3Path.addCurve(to: CGPoint(x: 196.06, y: 265.16), controlPoint1: CGPoint(x: 196.46, y: 265.84), controlPoint2: CGPoint(x: 196.46, y: 265.84))
        bezier3Path.addCurve(to: CGPoint(x: 195.7, y: 264.55), controlPoint1: CGPoint(x: 195.76, y: 264.66), controlPoint2: CGPoint(x: 195.76, y: 264.66))
        bezier3Path.addLine(to: CGPoint(x: 200, y: 267))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 200, y: 257))
        bezier3Path.addCurve(to: CGPoint(x: 204.3, y: 259.45), controlPoint1: CGPoint(x: 201.76, y: 257), controlPoint2: CGPoint(x: 203.4, y: 257.93))
        bezier3Path.addCurve(to: CGPoint(x: 204.66, y: 260.05), controlPoint1: CGPoint(x: 204.36, y: 259.55), controlPoint2: CGPoint(x: 204.36, y: 259.55))
        bezier3Path.addCurve(to: CGPoint(x: 205.67, y: 261.75), controlPoint1: CGPoint(x: 205.06, y: 260.73), controlPoint2: CGPoint(x: 205.06, y: 260.73))
        bezier3Path.addCurve(to: CGPoint(x: 209.28, y: 267.83), controlPoint1: CGPoint(x: 206.76, y: 263.59), controlPoint2: CGPoint(x: 207.97, y: 265.63))
        bezier3Path.addCurve(to: CGPoint(x: 220.25, y: 286.28), controlPoint1: CGPoint(x: 213.02, y: 274.12), controlPoint2: CGPoint(x: 216.76, y: 280.41))
        bezier3Path.addCurve(to: CGPoint(x: 220.28, y: 286.34), controlPoint1: CGPoint(x: 220.26, y: 286.31), controlPoint2: CGPoint(x: 220.26, y: 286.31))
        bezier3Path.addCurve(to: CGPoint(x: 235.71, y: 312.2), controlPoint1: CGPoint(x: 228.46, y: 300.09), controlPoint2: CGPoint(x: 234.01, y: 309.4))
        bezier3Path.addLine(to: CGPoint(x: 227.82, y: 311.33))
        bezier3Path.addCurve(to: CGPoint(x: 234.65, y: 304.21), controlPoint1: CGPoint(x: 231.74, y: 307.25), controlPoint2: CGPoint(x: 231.74, y: 307.25))
        bezier3Path.addCurve(to: CGPoint(x: 237.4, y: 301.34), controlPoint1: CGPoint(x: 236.88, y: 301.88), controlPoint2: CGPoint(x: 236.88, y: 301.88))
        bezier3Path.addCurve(to: CGPoint(x: 239.34, y: 300.09), controlPoint1: CGPoint(x: 237.94, y: 300.78), controlPoint2: CGPoint(x: 238.6, y: 300.35))
        bezier3Path.addLine(to: CGPoint(x: 292.33, y: 281.29))
        bezier3Path.addCurve(to: CGPoint(x: 298.75, y: 287.55), controlPoint1: CGPoint(x: 296.24, y: 279.9), controlPoint2: CGPoint(x: 300.04, y: 283.6))
        bezier3Path.addLine(to: CGPoint(x: 280.75, y: 342.83))
        bezier3Path.addLine(to: CGPoint(x: 281, y: 341.28))
        bezier3Path.addLine(to: CGPoint(x: 281, y: 414.22))
        bezier3Path.addCurve(to: CGPoint(x: 280.57, y: 416.25), controlPoint1: CGPoint(x: 281, y: 414.92), controlPoint2: CGPoint(x: 280.85, y: 415.61))
        bezier3Path.addLine(to: CGPoint(x: 245.57, y: 495.03))
        bezier3Path.addCurve(to: CGPoint(x: 241.06, y: 498), controlPoint1: CGPoint(x: 244.78, y: 496.82), controlPoint2: CGPoint(x: 243.01, y: 497.98))
        bezier3Path.addLine(to: CGPoint(x: 199.57, y: 498.5))
        bezier3Path.addCurve(to: CGPoint(x: 195.23, y: 496.09), controlPoint1: CGPoint(x: 197.8, y: 498.52), controlPoint2: CGPoint(x: 196.15, y: 497.6))
        bezier3Path.addCurve(to: CGPoint(x: 193.73, y: 493.6), controlPoint1: CGPoint(x: 194.96, y: 495.63), controlPoint2: CGPoint(x: 194.96, y: 495.63))
        bezier3Path.addCurve(to: CGPoint(x: 189.76, y: 487.04), controlPoint1: CGPoint(x: 192.09, y: 490.89), controlPoint2: CGPoint(x: 192.09, y: 490.89))
        bezier3Path.addCurve(to: CGPoint(x: 177.73, y: 467.15), controlPoint1: CGPoint(x: 184.3, y: 478), controlPoint2: CGPoint(x: 184.3, y: 478))
        bezier3Path.addCurve(to: CGPoint(x: 163.65, y: 443.86), controlPoint1: CGPoint(x: 169.68, y: 453.83), controlPoint2: CGPoint(x: 169.68, y: 453.83))
        bezier3Path.addLine(to: CGPoint(x: 171.54, y: 444.73))
        bezier3Path.addCurve(to: CGPoint(x: 165.08, y: 451.46), controlPoint1: CGPoint(x: 167.82, y: 448.6), controlPoint2: CGPoint(x: 167.82, y: 448.6))
        bezier3Path.addCurve(to: CGPoint(x: 162.49, y: 454.16), controlPoint1: CGPoint(x: 162.98, y: 453.65), controlPoint2: CGPoint(x: 162.98, y: 453.65))
        bezier3Path.addCurve(to: CGPoint(x: 155.28, y: 454.16), controlPoint1: CGPoint(x: 160.53, y: 456.21), controlPoint2: CGPoint(x: 157.25, y: 456.21))
        bezier3Path.addLine(to: CGPoint(x: 120.28, y: 417.68))
        bezier3Path.addCurve(to: CGPoint(x: 118.89, y: 414.22), controlPoint1: CGPoint(x: 119.39, y: 416.75), controlPoint2: CGPoint(x: 118.89, y: 415.51))
        bezier3Path.addLine(to: CGPoint(x: 118.89, y: 341.28))
        bezier3Path.addCurve(to: CGPoint(x: 119.32, y: 339.25), controlPoint1: CGPoint(x: 118.89, y: 340.58), controlPoint2: CGPoint(x: 119.04, y: 339.89))
        bezier3Path.addLine(to: CGPoint(x: 154.43, y: 259.98))
        bezier3Path.addCurve(to: CGPoint(x: 159, y: 257), controlPoint1: CGPoint(x: 155.23, y: 258.17), controlPoint2: CGPoint(x: 157.02, y: 257))
        bezier3Path.addLine(to: CGPoint(x: 200, y: 257))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 200, y: 108), end: CGPoint(x: 200, y: 648), options: [])
        context.restoreGState()

        ////// Bezier 3 Inner Shadow
        context.saveGState()
        context.clip(to: bezier3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier3OpaqueShadow.setFill()
        bezier3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 196, y: 575, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 198, y: 195, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole8(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 323.63, y: 260.63))
        bezier3Path.addCurve(to: CGPoint(x: 317.5, y: 311), controlPoint1: CGPoint(x: 319.91, y: 278.92), controlPoint2: CGPoint(x: 317.5, y: 296.08))
        bezier3Path.addCurve(to: CGPoint(x: 318.5, y: 364), controlPoint1: CGPoint(x: 317.5, y: 317.64), controlPoint2: CGPoint(x: 318.5, y: 352.18))
        bezier3Path.addCurve(to: CGPoint(x: 202, y: 532), controlPoint1: CGPoint(x: 318.5, y: 456.78), controlPoint2: CGPoint(x: 266.34, y: 532))
        bezier3Path.addCurve(to: CGPoint(x: 144.14, y: 509.85), controlPoint1: CGPoint(x: 180.94, y: 532), controlPoint2: CGPoint(x: 161.19, y: 523.94))
        bezier3Path.addCurve(to: CGPoint(x: 63.5, y: 676), controlPoint1: CGPoint(x: 70.77, y: 555.64), controlPoint2: CGPoint(x: 137.5, y: 673.5))
        bezier3Path.addCurve(to: CGPoint(x: 80.02, y: 434.04), controlPoint1: CGPoint(x: -16.8, y: 678.71), controlPoint2: CGPoint(x: 64.43, y: 530.74))
        bezier3Path.addCurve(to: CGPoint(x: 155.21, y: 452.87), controlPoint1: CGPoint(x: 90.1, y: 436.56), controlPoint2: CGPoint(x: 155.21, y: 452.87))
        bezier3Path.addCurve(to: CGPoint(x: 183.74, y: 398.96), controlPoint1: CGPoint(x: 155.21, y: 452.87), controlPoint2: CGPoint(x: 191.33, y: 425.56))
        bezier3Path.addCurve(to: CGPoint(x: 124.87, y: 346.49), controlPoint1: CGPoint(x: 176.15, y: 372.37), controlPoint2: CGPoint(x: 149.29, y: 356.4))
        bezier3Path.addCurve(to: CGPoint(x: 86.08, y: 359.32), controlPoint1: CGPoint(x: 100.46, y: 336.58), controlPoint2: CGPoint(x: 104.12, y: 353.36))
        bezier3Path.addCurve(to: CGPoint(x: 106.98, y: 274.26), controlPoint1: CGPoint(x: 90.2, y: 327.22), controlPoint2: CGPoint(x: 97.08, y: 298.42))
        bezier3Path.addCurve(to: CGPoint(x: 166.05, y: 321.52), controlPoint1: CGPoint(x: 118.52, y: 283.5), controlPoint2: CGPoint(x: 139.19, y: 318.99))
        bezier3Path.addCurve(to: CGPoint(x: 214.43, y: 284.39), controlPoint1: CGPoint(x: 192.91, y: 324.06), controlPoint2: CGPoint(x: 205.32, y: 307.77))
        bezier3Path.addCurve(to: CGPoint(x: 202.5, y: 228), controlPoint1: CGPoint(x: 223.54, y: 261.01), controlPoint2: CGPoint(x: 216.95, y: 246.78))
        bezier3Path.addCurve(to: CGPoint(x: 156.64, y: 209.29), controlPoint1: CGPoint(x: 188.05, y: 209.22), controlPoint2: CGPoint(x: 170.64, y: 210.83))
        bezier3Path.addCurve(to: CGPoint(x: 175.4, y: 200.4), controlPoint1: CGPoint(x: 162.51, y: 205.61), controlPoint2: CGPoint(x: 168.76, y: 202.63))
        bezier3Path.addCurve(to: CGPoint(x: 202, y: 196), controlPoint1: CGPoint(x: 183.94, y: 197.52), controlPoint2: CGPoint(x: 192.85, y: 196))
        bezier3Path.addCurve(to: CGPoint(x: 250.17, y: 210.99), controlPoint1: CGPoint(x: 219.18, y: 196), controlPoint2: CGPoint(x: 235.49, y: 201.36))
        bezier3Path.addCurve(to: CGPoint(x: 251.51, y: 210.23), controlPoint1: CGPoint(x: 250.62, y: 210.74), controlPoint2: CGPoint(x: 251.07, y: 210.49))
        bezier3Path.addCurve(to: CGPoint(x: 334.5, y: 39), controlPoint1: CGPoint(x: 329.87, y: 165.53), controlPoint2: CGPoint(x: 269.67, y: 39))
        bezier3Path.addCurve(to: CGPoint(x: 323.63, y: 260.63), controlPoint1: CGPoint(x: 398.28, y: 39), controlPoint2: CGPoint(x: 343.04, y: 165.21))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 323.63, y: 261.13))
        bezierPath.addCurve(to: CGPoint(x: 317.5, y: 311.5), controlPoint1: CGPoint(x: 319.91, y: 279.42), controlPoint2: CGPoint(x: 317.5, y: 296.58))
        bezierPath.addCurve(to: CGPoint(x: 318.5, y: 364.5), controlPoint1: CGPoint(x: 317.5, y: 318.14), controlPoint2: CGPoint(x: 318.5, y: 352.68))
        bezierPath.addCurve(to: CGPoint(x: 202, y: 532.5), controlPoint1: CGPoint(x: 318.5, y: 457.28), controlPoint2: CGPoint(x: 266.34, y: 532.5))
        bezierPath.addCurve(to: CGPoint(x: 144.14, y: 510.35), controlPoint1: CGPoint(x: 180.94, y: 532.5), controlPoint2: CGPoint(x: 161.19, y: 524.44))
        bezierPath.addCurve(to: CGPoint(x: 63.5, y: 676.5), controlPoint1: CGPoint(x: 70.77, y: 556.14), controlPoint2: CGPoint(x: 137.5, y: 674))
        bezierPath.addCurve(to: CGPoint(x: 80.02, y: 434.54), controlPoint1: CGPoint(x: -16.8, y: 679.21), controlPoint2: CGPoint(x: 64.43, y: 531.24))
        bezierPath.addCurve(to: CGPoint(x: 155.21, y: 453.37), controlPoint1: CGPoint(x: 90.1, y: 437.06), controlPoint2: CGPoint(x: 155.21, y: 453.37))
        bezierPath.addCurve(to: CGPoint(x: 183.74, y: 399.46), controlPoint1: CGPoint(x: 155.21, y: 453.37), controlPoint2: CGPoint(x: 191.33, y: 426.06))
        bezierPath.addCurve(to: CGPoint(x: 124.87, y: 346.99), controlPoint1: CGPoint(x: 176.15, y: 372.87), controlPoint2: CGPoint(x: 149.29, y: 356.9))
        bezierPath.addCurve(to: CGPoint(x: 86.08, y: 359.82), controlPoint1: CGPoint(x: 100.46, y: 337.08), controlPoint2: CGPoint(x: 104.12, y: 353.86))
        bezierPath.addCurve(to: CGPoint(x: 106.98, y: 274.76), controlPoint1: CGPoint(x: 90.2, y: 327.72), controlPoint2: CGPoint(x: 97.08, y: 298.92))
        bezierPath.addCurve(to: CGPoint(x: 166.05, y: 322.02), controlPoint1: CGPoint(x: 118.52, y: 284), controlPoint2: CGPoint(x: 139.19, y: 319.49))
        bezierPath.addCurve(to: CGPoint(x: 214.43, y: 284.89), controlPoint1: CGPoint(x: 192.91, y: 324.56), controlPoint2: CGPoint(x: 205.32, y: 308.27))
        bezierPath.addCurve(to: CGPoint(x: 202.5, y: 228.5), controlPoint1: CGPoint(x: 223.54, y: 261.51), controlPoint2: CGPoint(x: 216.95, y: 247.28))
        bezierPath.addCurve(to: CGPoint(x: 156.64, y: 209.79), controlPoint1: CGPoint(x: 188.05, y: 209.72), controlPoint2: CGPoint(x: 170.64, y: 211.33))
        bezierPath.addCurve(to: CGPoint(x: 175.4, y: 200.9), controlPoint1: CGPoint(x: 162.51, y: 206.11), controlPoint2: CGPoint(x: 168.76, y: 203.13))
        bezierPath.addCurve(to: CGPoint(x: 202, y: 196.5), controlPoint1: CGPoint(x: 183.94, y: 198.02), controlPoint2: CGPoint(x: 192.85, y: 196.5))
        bezierPath.addCurve(to: CGPoint(x: 250.17, y: 211.49), controlPoint1: CGPoint(x: 219.18, y: 196.5), controlPoint2: CGPoint(x: 235.49, y: 201.86))
        bezierPath.addCurve(to: CGPoint(x: 251.51, y: 210.73), controlPoint1: CGPoint(x: 250.62, y: 211.24), controlPoint2: CGPoint(x: 251.07, y: 210.99))
        bezierPath.addCurve(to: CGPoint(x: 334.5, y: 39.5), controlPoint1: CGPoint(x: 329.87, y: 166.03), controlPoint2: CGPoint(x: 269.67, y: 39.5))
        bezierPath.addCurve(to: CGPoint(x: 323.63, y: 261.13), controlPoint1: CGPoint(x: 398.28, y: 39.5), controlPoint2: CGPoint(x: 343.04, y: 165.71))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 29, y: -40, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 329.03, y: 261.63))
        bezier2Path.addCurve(to: CGPoint(x: 323, y: 311), controlPoint1: CGPoint(x: 325.05, y: 281.16), controlPoint2: CGPoint(x: 323, y: 297.4))
        bezier2Path.addCurve(to: CGPoint(x: 323.5, y: 335.44), controlPoint1: CGPoint(x: 323, y: 313.6), controlPoint2: CGPoint(x: 323.01, y: 313.92))
        bezier2Path.addCurve(to: CGPoint(x: 323.58, y: 338.82), controlPoint1: CGPoint(x: 323.53, y: 336.65), controlPoint2: CGPoint(x: 323.55, y: 337.76))
        bezier2Path.addCurve(to: CGPoint(x: 324, y: 364), controlPoint1: CGPoint(x: 323.86, y: 351.44), controlPoint2: CGPoint(x: 324, y: 359.33))
        bezier2Path.addCurve(to: CGPoint(x: 202.5, y: 537), controlPoint1: CGPoint(x: 324, y: 459.24), controlPoint2: CGPoint(x: 270.08, y: 537))
        bezier2Path.addCurve(to: CGPoint(x: 141.45, y: 513.7), controlPoint1: CGPoint(x: 180.7, y: 537), controlPoint2: CGPoint(x: 159.79, y: 528.86))
        bezier2Path.addLine(to: CGPoint(x: 147.29, y: 514.09))
        bezier2Path.addCurve(to: CGPoint(x: 111.16, y: 584.46), controlPoint1: CGPoint(x: 124.25, y: 528.47), controlPoint2: CGPoint(x: 114.49, y: 550.22))
        bezier2Path.addCurve(to: CGPoint(x: 109.56, y: 609.16), controlPoint1: CGPoint(x: 110.5, y: 591.28), controlPoint2: CGPoint(x: 110.19, y: 596.31))
        bezier2Path.addCurve(to: CGPoint(x: 102.12, y: 657.34), controlPoint1: CGPoint(x: 108.28, y: 635.43), controlPoint2: CGPoint(x: 106.91, y: 646.33))
        bezier2Path.addCurve(to: CGPoint(x: 64.17, y: 681), controlPoint1: CGPoint(x: 95.61, y: 672.32), controlPoint2: CGPoint(x: 83.44, y: 680.35))
        bezier2Path.addCurve(to: CGPoint(x: 24.41, y: 630.46), controlPoint1: CGPoint(x: 34.18, y: 682.01), controlPoint2: CGPoint(x: 21.93, y: 663.88))
        bezier2Path.addCurve(to: CGPoint(x: 34.07, y: 581.09), controlPoint1: CGPoint(x: 25.4, y: 617.08), controlPoint2: CGPoint(x: 28.62, y: 601.1))
        bezier2Path.addCurve(to: CGPoint(x: 51.28, y: 524.33), controlPoint1: CGPoint(x: 38.06, y: 566.43), controlPoint2: CGPoint(x: 40.74, y: 557.69))
        bezier2Path.addCurve(to: CGPoint(x: 54.89, y: 512.81), controlPoint1: CGPoint(x: 52.72, y: 519.74), controlPoint2: CGPoint(x: 53.83, y: 516.23))
        bezier2Path.addCurve(to: CGPoint(x: 75.58, y: 433.24), controlPoint1: CGPoint(x: 66.05, y: 477.1), controlPoint2: CGPoint(x: 72.2, y: 454.2))
        bezier2Path.addCurve(to: CGPoint(x: 81.73, y: 429.19), controlPoint1: CGPoint(x: 76.05, y: 430.35), controlPoint2: CGPoint(x: 78.89, y: 428.48))
        bezier2Path.addCurve(to: CGPoint(x: 95.88, y: 432.73), controlPoint1: CGPoint(x: 86.64, y: 430.42), controlPoint2: CGPoint(x: 86.64, y: 430.42))
        bezier2Path.addCurve(to: CGPoint(x: 118.68, y: 438.44), controlPoint1: CGPoint(x: 106.56, y: 435.41), controlPoint2: CGPoint(x: 106.56, y: 435.41))
        bezier2Path.addCurve(to: CGPoint(x: 144.98, y: 445.03), controlPoint1: CGPoint(x: 133.02, y: 442.03), controlPoint2: CGPoint(x: 133.02, y: 442.03))
        bezier2Path.addCurve(to: CGPoint(x: 153.64, y: 447.2), controlPoint1: CGPoint(x: 150.06, y: 446.3), controlPoint2: CGPoint(x: 150.06, y: 446.3))
        bezier2Path.addCurve(to: CGPoint(x: 156.93, y: 448.02), controlPoint1: CGPoint(x: 156.33, y: 447.87), controlPoint2: CGPoint(x: 156.33, y: 447.87))
        bezier2Path.addLine(to: CGPoint(x: 152.7, y: 448.88))
        bezier2Path.addCurve(to: CGPoint(x: 152.96, y: 448.68), controlPoint1: CGPoint(x: 152.73, y: 448.86), controlPoint2: CGPoint(x: 152.82, y: 448.79))
        bezier2Path.addCurve(to: CGPoint(x: 153.83, y: 447.99), controlPoint1: CGPoint(x: 153.21, y: 448.48), controlPoint2: CGPoint(x: 153.5, y: 448.25))
        bezier2Path.addCurve(to: CGPoint(x: 157.01, y: 445.27), controlPoint1: CGPoint(x: 154.78, y: 447.21), controlPoint2: CGPoint(x: 155.85, y: 446.3))
        bezier2Path.addCurve(to: CGPoint(x: 166.71, y: 435.43), controlPoint1: CGPoint(x: 160.32, y: 442.32), controlPoint2: CGPoint(x: 163.63, y: 439.01))
        bezier2Path.addCurve(to: CGPoint(x: 179.84, y: 402), controlPoint1: CGPoint(x: 176.79, y: 423.72), controlPoint2: CGPoint(x: 181.9, y: 412.15))
        bezier2Path.addCurve(to: CGPoint(x: 179.43, y: 400.34), controlPoint1: CGPoint(x: 179.72, y: 401.44), controlPoint2: CGPoint(x: 179.59, y: 400.89))
        bezier2Path.addCurve(to: CGPoint(x: 123.49, y: 351.12), controlPoint1: CGPoint(x: 173.39, y: 379.14), controlPoint2: CGPoint(x: 153.6, y: 363.34))
        bezier2Path.addCurve(to: CGPoint(x: 111.15, y: 348.56), controlPoint1: CGPoint(x: 117.75, y: 348.79), controlPoint2: CGPoint(x: 113.85, y: 348.09))
        bezier2Path.addCurve(to: CGPoint(x: 105.39, y: 352.06), controlPoint1: CGPoint(x: 109.21, y: 348.89), controlPoint2: CGPoint(x: 107.72, y: 349.82))
        bezier2Path.addCurve(to: CGPoint(x: 101.39, y: 356.01), controlPoint1: CGPoint(x: 105.07, y: 352.37), controlPoint2: CGPoint(x: 102.33, y: 355.12))
        bezier2Path.addCurve(to: CGPoint(x: 88.15, y: 364.07), controlPoint1: CGPoint(x: 97.39, y: 359.76), controlPoint2: CGPoint(x: 93.45, y: 362.32))
        bezier2Path.addCurve(to: CGPoint(x: 81.62, y: 358.69), controlPoint1: CGPoint(x: 84.65, y: 365.23), controlPoint2: CGPoint(x: 81.15, y: 362.34))
        bezier2Path.addCurve(to: CGPoint(x: 102.85, y: 272.36), controlPoint1: CGPoint(x: 85.88, y: 325.53), controlPoint2: CGPoint(x: 92.96, y: 296.51))
        bezier2Path.addCurve(to: CGPoint(x: 110.6, y: 270.35), controlPoint1: CGPoint(x: 104.12, y: 269.27), controlPoint2: CGPoint(x: 107.99, y: 268.27))
        bezier2Path.addCurve(to: CGPoint(x: 120.26, y: 280.37), controlPoint1: CGPoint(x: 113.19, y: 272.42), controlPoint2: CGPoint(x: 115.9, y: 275.3))
        bezier2Path.addCurve(to: CGPoint(x: 125.71, y: 286.75), controlPoint1: CGPoint(x: 121.17, y: 281.43), controlPoint2: CGPoint(x: 124.81, y: 285.71))
        bezier2Path.addCurve(to: CGPoint(x: 131.65, y: 293.5), controlPoint1: CGPoint(x: 127.94, y: 289.36), controlPoint2: CGPoint(x: 129.8, y: 291.47))
        bezier2Path.addCurve(to: CGPoint(x: 167.02, y: 316.55), controlPoint1: CGPoint(x: 144.62, y: 307.71), controlPoint2: CGPoint(x: 155.67, y: 315.48))
        bezier2Path.addCurve(to: CGPoint(x: 210.27, y: 282.57), controlPoint1: CGPoint(x: 188.48, y: 318.57), controlPoint2: CGPoint(x: 200.28, y: 308.19))
        bezier2Path.addCurve(to: CGPoint(x: 199.04, y: 231.05), controlPoint1: CGPoint(x: 217.8, y: 263.26), controlPoint2: CGPoint(x: 214.69, y: 251.39))
        bezier2Path.addCurve(to: CGPoint(x: 180.09, y: 217.44), controlPoint1: CGPoint(x: 193.53, y: 223.89), controlPoint2: CGPoint(x: 187.41, y: 219.71))
        bezier2Path.addCurve(to: CGPoint(x: 162.55, y: 214.78), controlPoint1: CGPoint(x: 175.33, y: 215.96), controlPoint2: CGPoint(x: 171.57, y: 215.46))
        bezier2Path.addCurve(to: CGPoint(x: 156.59, y: 214.26), controlPoint1: CGPoint(x: 159.74, y: 214.56), controlPoint2: CGPoint(x: 158.25, y: 214.44))
        bezier2Path.addCurve(to: CGPoint(x: 154.49, y: 205.05), controlPoint1: CGPoint(x: 151.88, y: 213.74), controlPoint2: CGPoint(x: 150.47, y: 207.56))
        bezier2Path.addCurve(to: CGPoint(x: 174.3, y: 195.66), controlPoint1: CGPoint(x: 160.74, y: 201.14), controlPoint2: CGPoint(x: 167.34, y: 198.01))
        bezier2Path.addCurve(to: CGPoint(x: 202.5, y: 191), controlPoint1: CGPoint(x: 183.46, y: 192.58), controlPoint2: CGPoint(x: 192.91, y: 191))
        bezier2Path.addCurve(to: CGPoint(x: 253.41, y: 206.8), controlPoint1: CGPoint(x: 220.34, y: 191), controlPoint2: CGPoint(x: 237.62, y: 196.45))
        bezier2Path.addLine(to: CGPoint(x: 250.67, y: 210.99))
        bezier2Path.addLine(to: CGPoint(x: 248.26, y: 206.6))
        bezier2Path.addCurve(to: CGPoint(x: 249.53, y: 205.89), controlPoint1: CGPoint(x: 248.69, y: 206.37), controlPoint2: CGPoint(x: 249.11, y: 206.13))
        bezier2Path.addCurve(to: CGPoint(x: 291.23, y: 131.67), controlPoint1: CGPoint(x: 274.82, y: 191.47), controlPoint2: CGPoint(x: 286.4, y: 168.1))
        bezier2Path.addCurve(to: CGPoint(x: 294.02, y: 101.79), controlPoint1: CGPoint(x: 292.32, y: 123.44), controlPoint2: CGPoint(x: 292.8, y: 117.99))
        bezier2Path.addCurve(to: CGPoint(x: 301.85, y: 55.63), controlPoint1: CGPoint(x: 295.91, y: 76.8), controlPoint2: CGPoint(x: 297.48, y: 66.01))
        bezier2Path.addCurve(to: CGPoint(x: 335, y: 34), controlPoint1: CGPoint(x: 307.83, y: 41.44), controlPoint2: CGPoint(x: 318.51, y: 34))
        bezier2Path.addCurve(to: CGPoint(x: 364.05, y: 49.44), controlPoint1: CGPoint(x: 348.61, y: 34), controlPoint2: CGPoint(x: 358.4, y: 39.27))
        bezier2Path.addCurve(to: CGPoint(x: 369.58, y: 86.34), controlPoint1: CGPoint(x: 368.97, y: 58.28), controlPoint2: CGPoint(x: 370.61, y: 70.5))
        bezier2Path.addCurve(to: CGPoint(x: 361.17, y: 135.9), controlPoint1: CGPoint(x: 368.69, y: 99.82), controlPoint2: CGPoint(x: 365.89, y: 115.87))
        bezier2Path.addCurve(to: CGPoint(x: 346.26, y: 192.73), controlPoint1: CGPoint(x: 357.7, y: 150.63), controlPoint2: CGPoint(x: 355.25, y: 159.85))
        bezier2Path.addCurve(to: CGPoint(x: 343.34, y: 203.44), controlPoint1: CGPoint(x: 345.09, y: 197), controlPoint2: CGPoint(x: 344.2, y: 200.26))
        bezier2Path.addCurve(to: CGPoint(x: 329.03, y: 261.63), controlPoint1: CGPoint(x: 336.6, y: 228.31), controlPoint2: CGPoint(x: 332.33, y: 245.41))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 319.23, y: 259.64))
        bezier2Path.addCurve(to: CGPoint(x: 333.69, y: 200.83), controlPoint1: CGPoint(x: 322.58, y: 243.16), controlPoint2: CGPoint(x: 326.89, y: 225.88))
        bezier2Path.addCurve(to: CGPoint(x: 336.61, y: 190.09), controlPoint1: CGPoint(x: 334.55, y: 197.64), controlPoint2: CGPoint(x: 335.44, y: 194.37))
        bezier2Path.addCurve(to: CGPoint(x: 351.44, y: 133.61), controlPoint1: CGPoint(x: 345.57, y: 157.34), controlPoint2: CGPoint(x: 348.01, y: 148.18))
        bezier2Path.addCurve(to: CGPoint(x: 359.6, y: 85.69), controlPoint1: CGPoint(x: 356.04, y: 114.07), controlPoint2: CGPoint(x: 358.76, y: 98.51))
        bezier2Path.addCurve(to: CGPoint(x: 335, y: 44), controlPoint1: CGPoint(x: 361.47, y: 57.05), controlPoint2: CGPoint(x: 354.21, y: 44))
        bezier2Path.addCurve(to: CGPoint(x: 311.06, y: 59.51), controlPoint1: CGPoint(x: 322.62, y: 44), controlPoint2: CGPoint(x: 315.52, y: 48.95))
        bezier2Path.addCurve(to: CGPoint(x: 304, y: 102.54), controlPoint1: CGPoint(x: 307.28, y: 68.5), controlPoint2: CGPoint(x: 305.79, y: 78.74))
        bezier2Path.addCurve(to: CGPoint(x: 301.14, y: 132.98), controlPoint1: CGPoint(x: 302.76, y: 118.95), controlPoint2: CGPoint(x: 302.27, y: 124.5))
        bezier2Path.addCurve(to: CGPoint(x: 288.62, y: 178.23), controlPoint1: CGPoint(x: 298.77, y: 150.89), controlPoint2: CGPoint(x: 294.96, y: 165.45))
        bezier2Path.addCurve(to: CGPoint(x: 254.49, y: 214.58), controlPoint1: CGPoint(x: 280.98, y: 193.64), controlPoint2: CGPoint(x: 269.87, y: 205.8))
        bezier2Path.addCurve(to: CGPoint(x: 253.07, y: 215.37), controlPoint1: CGPoint(x: 254.02, y: 214.84), controlPoint2: CGPoint(x: 253.54, y: 215.11))
        bezier2Path.addCurve(to: CGPoint(x: 247.92, y: 215.17), controlPoint1: CGPoint(x: 251.45, y: 216.26), controlPoint2: CGPoint(x: 249.47, y: 216.18))
        bezier2Path.addCurve(to: CGPoint(x: 202.5, y: 201), controlPoint1: CGPoint(x: 233.72, y: 205.86), controlPoint2: CGPoint(x: 218.34, y: 201))
        bezier2Path.addCurve(to: CGPoint(x: 177.49, y: 205.14), controlPoint1: CGPoint(x: 194, y: 201), controlPoint2: CGPoint(x: 185.63, y: 202.4))
        bezier2Path.addCurve(to: CGPoint(x: 159.79, y: 213.52), controlPoint1: CGPoint(x: 171.28, y: 207.23), controlPoint2: CGPoint(x: 165.38, y: 210.03))
        bezier2Path.addLine(to: CGPoint(x: 157.69, y: 204.32))
        bezier2Path.addCurve(to: CGPoint(x: 163.31, y: 204.81), controlPoint1: CGPoint(x: 159.2, y: 204.48), controlPoint2: CGPoint(x: 160.6, y: 204.6))
        bezier2Path.addCurve(to: CGPoint(x: 183.05, y: 207.89), controlPoint1: CGPoint(x: 173.07, y: 205.55), controlPoint2: CGPoint(x: 177.33, y: 206.11))
        bezier2Path.addCurve(to: CGPoint(x: 206.96, y: 224.95), controlPoint1: CGPoint(x: 192.32, y: 210.77), controlPoint2: CGPoint(x: 200.18, y: 216.13))
        bezier2Path.addCurve(to: CGPoint(x: 222.64, y: 253.2), controlPoint1: CGPoint(x: 215.55, y: 236.11), controlPoint2: CGPoint(x: 220.32, y: 244.37))
        bezier2Path.addCurve(to: CGPoint(x: 219.59, y: 286.2), controlPoint1: CGPoint(x: 225.31, y: 263.4), controlPoint2: CGPoint(x: 224.38, y: 273.92))
        bezier2Path.addCurve(to: CGPoint(x: 200.7, y: 316.43), controlPoint1: CGPoint(x: 214.24, y: 299.93), controlPoint2: CGPoint(x: 208.41, y: 309.65))
        bezier2Path.addCurve(to: CGPoint(x: 166.08, y: 326.5), controlPoint1: CGPoint(x: 191.63, y: 324.4), controlPoint2: CGPoint(x: 180.25, y: 327.84))
        bezier2Path.addCurve(to: CGPoint(x: 124.26, y: 300.24), controlPoint1: CGPoint(x: 151.57, y: 325.13), controlPoint2: CGPoint(x: 138.78, y: 316.14))
        bezier2Path.addCurve(to: CGPoint(x: 118.12, y: 293.26), controlPoint1: CGPoint(x: 122.33, y: 298.13), controlPoint2: CGPoint(x: 120.41, y: 295.94))
        bezier2Path.addCurve(to: CGPoint(x: 112.68, y: 286.89), controlPoint1: CGPoint(x: 117.21, y: 292.2), controlPoint2: CGPoint(x: 113.57, y: 287.92))
        bezier2Path.addCurve(to: CGPoint(x: 104.35, y: 278.16), controlPoint1: CGPoint(x: 108.72, y: 282.29), controlPoint2: CGPoint(x: 106.3, y: 279.72))
        bezier2Path.addLine(to: CGPoint(x: 112.1, y: 276.15))
        bezier2Path.addCurve(to: CGPoint(x: 91.54, y: 359.96), controlPoint1: CGPoint(x: 102.57, y: 299.43), controlPoint2: CGPoint(x: 95.69, y: 327.61))
        bezier2Path.addLine(to: CGPoint(x: 85.01, y: 354.58))
        bezier2Path.addCurve(to: CGPoint(x: 94.54, y: 348.72), controlPoint1: CGPoint(x: 88.79, y: 353.33), controlPoint2: CGPoint(x: 91.53, y: 351.55))
        bezier2Path.addCurve(to: CGPoint(x: 98.45, y: 344.86), controlPoint1: CGPoint(x: 95.33, y: 347.97), controlPoint2: CGPoint(x: 98.01, y: 345.29))
        bezier2Path.addCurve(to: CGPoint(x: 127.25, y: 341.86), controlPoint1: CGPoint(x: 106.05, y: 337.54), controlPoint2: CGPoint(x: 113.47, y: 336.26))
        bezier2Path.addCurve(to: CGPoint(x: 189.05, y: 397.59), controlPoint1: CGPoint(x: 159.94, y: 355.12), controlPoint2: CGPoint(x: 181.95, y: 372.69))
        bezier2Path.addCurve(to: CGPoint(x: 189.64, y: 400.01), controlPoint1: CGPoint(x: 189.28, y: 398.39), controlPoint2: CGPoint(x: 189.47, y: 399.2))
        bezier2Path.addCurve(to: CGPoint(x: 174.29, y: 441.95), controlPoint1: CGPoint(x: 192.46, y: 413.92), controlPoint2: CGPoint(x: 186.19, y: 428.14))
        bezier2Path.addCurve(to: CGPoint(x: 163.66, y: 452.73), controlPoint1: CGPoint(x: 170.9, y: 445.89), controlPoint2: CGPoint(x: 167.28, y: 449.51))
        bezier2Path.addCurve(to: CGPoint(x: 160.14, y: 455.74), controlPoint1: CGPoint(x: 162.39, y: 453.87), controlPoint2: CGPoint(x: 161.21, y: 454.87))
        bezier2Path.addCurve(to: CGPoint(x: 158.73, y: 456.86), controlPoint1: CGPoint(x: 159.49, y: 456.27), controlPoint2: CGPoint(x: 159.01, y: 456.65))
        bezier2Path.addCurve(to: CGPoint(x: 154.5, y: 457.72), controlPoint1: CGPoint(x: 157.52, y: 457.77), controlPoint2: CGPoint(x: 155.97, y: 458.09))
        bezier2Path.addCurve(to: CGPoint(x: 151.21, y: 456.9), controlPoint1: CGPoint(x: 153.9, y: 457.57), controlPoint2: CGPoint(x: 153.9, y: 457.57))
        bezier2Path.addCurve(to: CGPoint(x: 142.55, y: 454.73), controlPoint1: CGPoint(x: 147.63, y: 456), controlPoint2: CGPoint(x: 147.63, y: 456))
        bezier2Path.addCurve(to: CGPoint(x: 116.25, y: 448.14), controlPoint1: CGPoint(x: 130.59, y: 451.73), controlPoint2: CGPoint(x: 130.59, y: 451.73))
        bezier2Path.addCurve(to: CGPoint(x: 93.45, y: 442.43), controlPoint1: CGPoint(x: 104.13, y: 445.11), controlPoint2: CGPoint(x: 104.13, y: 445.11))
        bezier2Path.addCurve(to: CGPoint(x: 79.3, y: 438.89), controlPoint1: CGPoint(x: 84.21, y: 440.12), controlPoint2: CGPoint(x: 84.21, y: 440.12))
        bezier2Path.addLine(to: CGPoint(x: 85.46, y: 434.83))
        bezier2Path.addCurve(to: CGPoint(x: 64.44, y: 515.8), controlPoint1: CGPoint(x: 81.98, y: 456.39), controlPoint2: CGPoint(x: 75.73, y: 479.65))
        bezier2Path.addCurve(to: CGPoint(x: 60.81, y: 527.34), controlPoint1: CGPoint(x: 63.37, y: 519.22), controlPoint2: CGPoint(x: 62.26, y: 522.75))
        bezier2Path.addCurve(to: CGPoint(x: 43.72, y: 583.72), controlPoint1: CGPoint(x: 50.33, y: 560.55), controlPoint2: CGPoint(x: 47.66, y: 569.24))
        bezier2Path.addCurve(to: CGPoint(x: 34.38, y: 631.2), controlPoint1: CGPoint(x: 38.42, y: 603.17), controlPoint2: CGPoint(x: 35.32, y: 618.58))
        bezier2Path.addCurve(to: CGPoint(x: 63.83, y: 671), controlPoint1: CGPoint(x: 32.3, y: 659.33), controlPoint2: CGPoint(x: 40.71, y: 671.78))
        bezier2Path.addCurve(to: CGPoint(x: 92.95, y: 653.35), controlPoint1: CGPoint(x: 79.3, y: 670.48), controlPoint2: CGPoint(x: 88, y: 664.74))
        bezier2Path.addCurve(to: CGPoint(x: 99.58, y: 608.67), controlPoint1: CGPoint(x: 97.06, y: 643.9), controlPoint2: CGPoint(x: 98.35, y: 633.61))
        bezier2Path.addCurve(to: CGPoint(x: 101.21, y: 583.49), controlPoint1: CGPoint(x: 100.21, y: 595.66), controlPoint2: CGPoint(x: 100.52, y: 590.53))
        bezier2Path.addCurve(to: CGPoint(x: 111.3, y: 540.87), controlPoint1: CGPoint(x: 102.85, y: 566.57), controlPoint2: CGPoint(x: 105.87, y: 552.98))
        bezier2Path.addCurve(to: CGPoint(x: 141.99, y: 505.61), controlPoint1: CGPoint(x: 117.88, y: 526.21), controlPoint2: CGPoint(x: 127.85, y: 514.43))
        bezier2Path.addCurve(to: CGPoint(x: 147.82, y: 505.99), controlPoint1: CGPoint(x: 143.82, y: 504.47), controlPoint2: CGPoint(x: 146.17, y: 504.62))
        bezier2Path.addCurve(to: CGPoint(x: 202.5, y: 527), controlPoint1: CGPoint(x: 164.43, y: 519.72), controlPoint2: CGPoint(x: 183.13, y: 527))
        bezier2Path.addCurve(to: CGPoint(x: 314, y: 364), controlPoint1: CGPoint(x: 263.61, y: 527), controlPoint2: CGPoint(x: 314, y: 454.33))
        bezier2Path.addCurve(to: CGPoint(x: 313.58, y: 339.04), controlPoint1: CGPoint(x: 314, y: 359.44), controlPoint2: CGPoint(x: 313.86, y: 351.58))
        bezier2Path.addCurve(to: CGPoint(x: 313.5, y: 335.67), controlPoint1: CGPoint(x: 313.55, y: 337.98), controlPoint2: CGPoint(x: 313.53, y: 336.88))
        bezier2Path.addCurve(to: CGPoint(x: 313, y: 311), controlPoint1: CGPoint(x: 313, y: 313.85), controlPoint2: CGPoint(x: 313, y: 313.72))
        bezier2Path.addCurve(to: CGPoint(x: 319.23, y: 259.64), controlPoint1: CGPoint(x: 313, y: 296.63), controlPoint2: CGPoint(x: 315.13, y: 279.76))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.99, y: 34), end: CGPoint(x: 196.99, y: 681.04), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 63, y: 631, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 330, y: 76, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole9(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let purpDark = UIColor(red: 0.255, green: 0.192, blue: 0.463, alpha: 1.000)
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Image Declarations
        let woven = UIImage(named: "woven.png")!

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 196.1, y: 223.26))
        bezier3Path.addCurve(to: CGPoint(x: 170.74, y: 225.57), controlPoint1: CGPoint(x: 187.44, y: 223.26), controlPoint2: CGPoint(x: 178.96, y: 224.05))
        bezier3Path.addCurve(to: CGPoint(x: 196.5, y: 238.93), controlPoint1: CGPoint(x: 179.84, y: 228.45), controlPoint2: CGPoint(x: 188.47, y: 233.03))
        bezier3Path.addCurve(to: CGPoint(x: 221.97, y: 225.67), controlPoint1: CGPoint(x: 204.44, y: 233.1), controlPoint2: CGPoint(x: 212.97, y: 228.55))
        bezier3Path.addCurve(to: CGPoint(x: 212.08, y: 224.17), controlPoint1: CGPoint(x: 218.71, y: 225.05), controlPoint2: CGPoint(x: 215.41, y: 224.55))
        bezier3Path.addCurve(to: CGPoint(x: 196.1, y: 223.26), controlPoint1: CGPoint(x: 206.84, y: 223.57), controlPoint2: CGPoint(x: 201.51, y: 223.26))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 219.48, y: 250.36))
        bezier3Path.addCurve(to: CGPoint(x: 298.38, y: 361.5), controlPoint1: CGPoint(x: 264.74, y: 262.4), controlPoint2: CGPoint(x: 298.38, y: 307.59))
        bezier3Path.addCurve(to: CGPoint(x: 212.39, y: 474.23), controlPoint1: CGPoint(x: 298.38, y: 418.19), controlPoint2: CGPoint(x: 261.18, y: 465.24))
        bezier3Path.addCurve(to: CGPoint(x: 211.93, y: 476.72), controlPoint1: CGPoint(x: 212.29, y: 475.09), controlPoint2: CGPoint(x: 212.13, y: 475.91))
        bezier3Path.addCurve(to: CGPoint(x: 312.31, y: 361.66), controlPoint1: CGPoint(x: 267.6, y: 475.17), controlPoint2: CGPoint(x: 312.31, y: 424.25))
        bezier3Path.addCurve(to: CGPoint(x: 232.26, y: 249.42), controlPoint1: CGPoint(x: 312.31, y: 306.9), controlPoint2: CGPoint(x: 278.1, y: 261.07))
        bezier3Path.addCurve(to: CGPoint(x: 219.48, y: 250.36), controlPoint1: CGPoint(x: 227.5, y: 249.29), controlPoint2: CGPoint(x: 223.26, y: 249.65))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 160.74, y: 249.42))
        bezier3Path.addCurve(to: CGPoint(x: 157.06, y: 250.44), controlPoint1: CGPoint(x: 159.51, y: 249.74), controlPoint2: CGPoint(x: 158.28, y: 250.08))
        bezier3Path.addCurve(to: CGPoint(x: 80.69, y: 361.66), controlPoint1: CGPoint(x: 113.08, y: 263.55), controlPoint2: CGPoint(x: 80.69, y: 308.37))
        bezier3Path.addCurve(to: CGPoint(x: 181.07, y: 476.72), controlPoint1: CGPoint(x: 80.69, y: 424.25), controlPoint2: CGPoint(x: 125.4, y: 475.17))
        bezier3Path.addCurve(to: CGPoint(x: 180.66, y: 474.61), controlPoint1: CGPoint(x: 180.9, y: 476.04), controlPoint2: CGPoint(x: 180.76, y: 475.34))
        bezier3Path.addCurve(to: CGPoint(x: 92.42, y: 361.5), controlPoint1: CGPoint(x: 130.77, y: 466.68), controlPoint2: CGPoint(x: 92.42, y: 419.06))
        bezier3Path.addCurve(to: CGPoint(x: 142.77, y: 263.25), controlPoint1: CGPoint(x: 92.42, y: 319.73), controlPoint2: CGPoint(x: 112.62, y: 283.19))
        bezier3Path.addCurve(to: CGPoint(x: 172.21, y: 250.13), controlPoint1: CGPoint(x: 151.78, y: 257.29), controlPoint2: CGPoint(x: 161.69, y: 252.82))
        bezier3Path.addCurve(to: CGPoint(x: 160.74, y: 249.42), controlPoint1: CGPoint(x: 168.76, y: 249.57), controlPoint2: CGPoint(x: 164.96, y: 249.31))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 196.5, y: 492.78))
        bezier3Path.addCurve(to: CGPoint(x: 176.06, y: 498.7), controlPoint1: CGPoint(x: 190.45, y: 495.61), controlPoint2: CGPoint(x: 183.28, y: 497.48))
        bezier3Path.addCurve(to: CGPoint(x: 196.1, y: 500.14), controlPoint1: CGPoint(x: 182.6, y: 499.65), controlPoint2: CGPoint(x: 189.3, y: 500.14))
        bezier3Path.addCurve(to: CGPoint(x: 216.57, y: 498.64), controlPoint1: CGPoint(x: 203.06, y: 500.14), controlPoint2: CGPoint(x: 209.89, y: 499.63))
        bezier3Path.addCurve(to: CGPoint(x: 196.5, y: 492.78), controlPoint1: CGPoint(x: 209.48, y: 497.42), controlPoint2: CGPoint(x: 202.45, y: 495.56))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 198.9, y: 189.02))
        bezier3Path.addCurve(to: CGPoint(x: 369, y: 361.5), controlPoint1: CGPoint(x: 293.06, y: 190.3), controlPoint2: CGPoint(x: 369, y: 267.03))
        bezier3Path.addCurve(to: CGPoint(x: 196.5, y: 534), controlPoint1: CGPoint(x: 369, y: 456.77), controlPoint2: CGPoint(x: 291.77, y: 534))
        bezier3Path.addCurve(to: CGPoint(x: 24, y: 361.5), controlPoint1: CGPoint(x: 101.23, y: 534), controlPoint2: CGPoint(x: 24, y: 456.77))
        bezier3Path.addCurve(to: CGPoint(x: 163.77, y: 192.1), controlPoint1: CGPoint(x: 24, y: 277.42), controlPoint2: CGPoint(x: 84.15, y: 207.39))
        bezier3Path.addCurve(to: CGPoint(x: 196.5, y: 189), controlPoint1: CGPoint(x: 174.37, y: 190.07), controlPoint2: CGPoint(x: 185.31, y: 189))
        bezier3Path.addCurve(to: CGPoint(x: 198.9, y: 189.02), controlPoint1: CGPoint(x: 197.3, y: 189), controlPoint2: CGPoint(x: 198.1, y: 189.01))
        bezier3Path.close()
        purpDark.setStroke()
        bezier3Path.lineWidth = 24
        bezier3Path.lineJoinStyle = .round
        bezier3Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 196.1, y: 223.76))
        bezierPath.addCurve(to: CGPoint(x: 170.74, y: 226.07), controlPoint1: CGPoint(x: 187.44, y: 223.76), controlPoint2: CGPoint(x: 178.96, y: 224.55))
        bezierPath.addCurve(to: CGPoint(x: 196.5, y: 239.43), controlPoint1: CGPoint(x: 179.84, y: 228.95), controlPoint2: CGPoint(x: 188.47, y: 233.53))
        bezierPath.addCurve(to: CGPoint(x: 221.97, y: 226.17), controlPoint1: CGPoint(x: 204.44, y: 233.6), controlPoint2: CGPoint(x: 212.97, y: 229.05))
        bezierPath.addCurve(to: CGPoint(x: 212.08, y: 224.67), controlPoint1: CGPoint(x: 218.71, y: 225.55), controlPoint2: CGPoint(x: 215.41, y: 225.05))
        bezierPath.addCurve(to: CGPoint(x: 196.1, y: 223.76), controlPoint1: CGPoint(x: 206.84, y: 224.07), controlPoint2: CGPoint(x: 201.51, y: 223.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 219.48, y: 250.86))
        bezierPath.addCurve(to: CGPoint(x: 298.38, y: 362), controlPoint1: CGPoint(x: 264.74, y: 262.9), controlPoint2: CGPoint(x: 298.38, y: 308.09))
        bezierPath.addCurve(to: CGPoint(x: 212.39, y: 474.73), controlPoint1: CGPoint(x: 298.38, y: 418.69), controlPoint2: CGPoint(x: 261.18, y: 465.74))
        bezierPath.addCurve(to: CGPoint(x: 211.93, y: 477.22), controlPoint1: CGPoint(x: 212.29, y: 475.59), controlPoint2: CGPoint(x: 212.13, y: 476.41))
        bezierPath.addCurve(to: CGPoint(x: 312.31, y: 362.16), controlPoint1: CGPoint(x: 267.6, y: 475.67), controlPoint2: CGPoint(x: 312.31, y: 424.75))
        bezierPath.addCurve(to: CGPoint(x: 232.26, y: 249.92), controlPoint1: CGPoint(x: 312.31, y: 307.4), controlPoint2: CGPoint(x: 278.1, y: 261.57))
        bezierPath.addCurve(to: CGPoint(x: 219.48, y: 250.86), controlPoint1: CGPoint(x: 227.5, y: 249.79), controlPoint2: CGPoint(x: 223.26, y: 250.15))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 160.74, y: 249.92))
        bezierPath.addCurve(to: CGPoint(x: 157.06, y: 250.94), controlPoint1: CGPoint(x: 159.51, y: 250.24), controlPoint2: CGPoint(x: 158.28, y: 250.58))
        bezierPath.addCurve(to: CGPoint(x: 80.69, y: 362.16), controlPoint1: CGPoint(x: 113.08, y: 264.05), controlPoint2: CGPoint(x: 80.69, y: 308.87))
        bezierPath.addCurve(to: CGPoint(x: 181.07, y: 477.22), controlPoint1: CGPoint(x: 80.69, y: 424.75), controlPoint2: CGPoint(x: 125.4, y: 475.67))
        bezierPath.addCurve(to: CGPoint(x: 180.66, y: 475.11), controlPoint1: CGPoint(x: 180.9, y: 476.54), controlPoint2: CGPoint(x: 180.76, y: 475.84))
        bezierPath.addCurve(to: CGPoint(x: 92.42, y: 362), controlPoint1: CGPoint(x: 130.77, y: 467.18), controlPoint2: CGPoint(x: 92.42, y: 419.56))
        bezierPath.addCurve(to: CGPoint(x: 142.77, y: 263.75), controlPoint1: CGPoint(x: 92.42, y: 320.23), controlPoint2: CGPoint(x: 112.62, y: 283.69))
        bezierPath.addCurve(to: CGPoint(x: 172.21, y: 250.63), controlPoint1: CGPoint(x: 151.78, y: 257.79), controlPoint2: CGPoint(x: 161.69, y: 253.32))
        bezierPath.addCurve(to: CGPoint(x: 160.74, y: 249.92), controlPoint1: CGPoint(x: 168.76, y: 250.07), controlPoint2: CGPoint(x: 164.96, y: 249.81))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 196.5, y: 493.28))
        bezierPath.addCurve(to: CGPoint(x: 176.06, y: 499.2), controlPoint1: CGPoint(x: 190.45, y: 496.11), controlPoint2: CGPoint(x: 183.28, y: 497.98))
        bezierPath.addCurve(to: CGPoint(x: 196.1, y: 500.64), controlPoint1: CGPoint(x: 182.6, y: 500.15), controlPoint2: CGPoint(x: 189.3, y: 500.64))
        bezierPath.addCurve(to: CGPoint(x: 216.57, y: 499.14), controlPoint1: CGPoint(x: 203.06, y: 500.64), controlPoint2: CGPoint(x: 209.89, y: 500.13))
        bezierPath.addCurve(to: CGPoint(x: 196.5, y: 493.28), controlPoint1: CGPoint(x: 209.48, y: 497.92), controlPoint2: CGPoint(x: 202.45, y: 496.06))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 198.9, y: 189.52))
        bezierPath.addCurve(to: CGPoint(x: 369, y: 362), controlPoint1: CGPoint(x: 293.06, y: 190.8), controlPoint2: CGPoint(x: 369, y: 267.53))
        bezierPath.addCurve(to: CGPoint(x: 196.5, y: 534.5), controlPoint1: CGPoint(x: 369, y: 457.27), controlPoint2: CGPoint(x: 291.77, y: 534.5))
        bezierPath.addCurve(to: CGPoint(x: 24, y: 362), controlPoint1: CGPoint(x: 101.23, y: 534.5), controlPoint2: CGPoint(x: 24, y: 457.27))
        bezierPath.addCurve(to: CGPoint(x: 163.77, y: 192.6), controlPoint1: CGPoint(x: 24, y: 277.92), controlPoint2: CGPoint(x: 84.15, y: 207.89))
        bezierPath.addCurve(to: CGPoint(x: 196.5, y: 189.5), controlPoint1: CGPoint(x: 174.37, y: 190.57), controlPoint2: CGPoint(x: 185.31, y: 189.5))
        bezierPath.addCurve(to: CGPoint(x: 198.9, y: 189.52), controlPoint1: CGPoint(x: 197.3, y: 189.5), controlPoint2: CGPoint(x: 198.1, y: 189.51))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(woven.cgImage!, in: CGRect(x: 24, y: -190, width: woven.size.width, height: woven.size.height), byTiling: true)
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 196.1, y: 228.26))
        bezier2Path.addCurve(to: CGPoint(x: 171.64, y: 230.49), controlPoint1: CGPoint(x: 187.83, y: 228.26), controlPoint2: CGPoint(x: 179.65, y: 229.01))
        bezier2Path.addLine(to: CGPoint(x: 172.24, y: 220.8))
        bezier2Path.addCurve(to: CGPoint(x: 199.46, y: 234.91), controlPoint1: CGPoint(x: 181.69, y: 223.79), controlPoint2: CGPoint(x: 190.81, y: 228.55))
        bezier2Path.addLine(to: CGPoint(x: 193.54, y: 234.91))
        bezier2Path.addCurve(to: CGPoint(x: 220.44, y: 220.9), controlPoint1: CGPoint(x: 202.09, y: 228.62), controlPoint2: CGPoint(x: 211.11, y: 223.89))
        bezier2Path.addLine(to: CGPoint(x: 221.97, y: 225.67))
        bezier2Path.addLine(to: CGPoint(x: 221.04, y: 230.58))
        bezier2Path.addCurve(to: CGPoint(x: 211.51, y: 229.14), controlPoint1: CGPoint(x: 217.89, y: 229.99), controlPoint2: CGPoint(x: 214.71, y: 229.51))
        bezier2Path.addCurve(to: CGPoint(x: 196.1, y: 228.26), controlPoint1: CGPoint(x: 206.42, y: 228.55), controlPoint2: CGPoint(x: 201.28, y: 228.26))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 196.1, y: 218.26))
        bezier2Path.addCurve(to: CGPoint(x: 212.65, y: 219.2), controlPoint1: CGPoint(x: 201.66, y: 218.26), controlPoint2: CGPoint(x: 207.18, y: 218.58))
        bezier2Path.addCurve(to: CGPoint(x: 222.9, y: 220.75), controlPoint1: CGPoint(x: 216.09, y: 219.6), controlPoint2: CGPoint(x: 219.51, y: 220.11))
        bezier2Path.addCurve(to: CGPoint(x: 223.49, y: 230.43), controlPoint1: CGPoint(x: 227.99, y: 221.71), controlPoint2: CGPoint(x: 228.43, y: 228.85))
        bezier2Path.addCurve(to: CGPoint(x: 199.46, y: 242.96), controlPoint1: CGPoint(x: 215.22, y: 233.08), controlPoint2: CGPoint(x: 207.17, y: 237.3))
        bezier2Path.addCurve(to: CGPoint(x: 193.54, y: 242.96), controlPoint1: CGPoint(x: 197.7, y: 244.26), controlPoint2: CGPoint(x: 195.3, y: 244.26))
        bezier2Path.addCurve(to: CGPoint(x: 169.23, y: 230.34), controlPoint1: CGPoint(x: 185.74, y: 237.23), controlPoint2: CGPoint(x: 177.6, y: 232.98))
        bezier2Path.addCurve(to: CGPoint(x: 169.83, y: 220.66), controlPoint1: CGPoint(x: 164.26, y: 228.77), controlPoint2: CGPoint(x: 164.7, y: 221.6))
        bezier2Path.addCurve(to: CGPoint(x: 196.1, y: 218.26), controlPoint1: CGPoint(x: 178.43, y: 219.07), controlPoint2: CGPoint(x: 187.22, y: 218.26))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 220.77, y: 245.53))
        bezier2Path.addCurve(to: CGPoint(x: 303.38, y: 361.5), controlPoint1: CGPoint(x: 268.97, y: 258.35), controlPoint2: CGPoint(x: 303.38, y: 306.15))
        bezier2Path.addCurve(to: CGPoint(x: 213.3, y: 479.15), controlPoint1: CGPoint(x: 303.38, y: 419.93), controlPoint2: CGPoint(x: 265.08, y: 469.61))
        bezier2Path.addLine(to: CGPoint(x: 212.39, y: 474.23))
        bezier2Path.addLine(to: CGPoint(x: 217.36, y: 474.83))
        bezier2Path.addCurve(to: CGPoint(x: 216.78, y: 477.94), controlPoint1: CGPoint(x: 217.23, y: 475.89), controlPoint2: CGPoint(x: 217.04, y: 476.93))
        bezier2Path.addLine(to: CGPoint(x: 211.93, y: 476.72))
        bezier2Path.addLine(to: CGPoint(x: 211.79, y: 471.72))
        bezier2Path.addCurve(to: CGPoint(x: 307.31, y: 361.66), controlPoint1: CGPoint(x: 264.73, y: 470.25), controlPoint2: CGPoint(x: 307.31, y: 421.54))
        bezier2Path.addCurve(to: CGPoint(x: 231.03, y: 254.27), controlPoint1: CGPoint(x: 307.31, y: 309.87), controlPoint2: CGPoint(x: 275.24, y: 265.51))
        bezier2Path.addLine(to: CGPoint(x: 232.26, y: 249.42))
        bezier2Path.addLine(to: CGPoint(x: 232.12, y: 254.42))
        bezier2Path.addCurve(to: CGPoint(x: 220.42, y: 255.28), controlPoint1: CGPoint(x: 227.87, y: 254.3), controlPoint2: CGPoint(x: 223.98, y: 254.6))
        bezier2Path.addLine(to: CGPoint(x: 219.48, y: 250.36))
        bezier2Path.addLine(to: CGPoint(x: 220.77, y: 245.53))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 218.2, y: 255.2))
        bezier2Path.addCurve(to: CGPoint(x: 218.55, y: 245.45), controlPoint1: CGPoint(x: 213.06, y: 253.83), controlPoint2: CGPoint(x: 213.32, y: 246.44))
        bezier2Path.addCurve(to: CGPoint(x: 232.4, y: 244.43), controlPoint1: CGPoint(x: 222.83, y: 244.64), controlPoint2: CGPoint(x: 227.44, y: 244.29))
        bezier2Path.addCurve(to: CGPoint(x: 233.49, y: 244.58), controlPoint1: CGPoint(x: 232.77, y: 244.44), controlPoint2: CGPoint(x: 233.13, y: 244.49))
        bezier2Path.addCurve(to: CGPoint(x: 317.31, y: 361.66), controlPoint1: CGPoint(x: 282.28, y: 256.98), controlPoint2: CGPoint(x: 317.31, y: 305.43))
        bezier2Path.addCurve(to: CGPoint(x: 212.07, y: 481.72), controlPoint1: CGPoint(x: 317.31, y: 426.74), controlPoint2: CGPoint(x: 270.67, y: 480.09))
        bezier2Path.addCurve(to: CGPoint(x: 207.08, y: 475.49), controlPoint1: CGPoint(x: 208.75, y: 481.81), controlPoint2: CGPoint(x: 206.27, y: 478.71))
        bezier2Path.addCurve(to: CGPoint(x: 207.43, y: 473.63), controlPoint1: CGPoint(x: 207.24, y: 474.89), controlPoint2: CGPoint(x: 207.35, y: 474.27))
        bezier2Path.addCurve(to: CGPoint(x: 211.49, y: 469.31), controlPoint1: CGPoint(x: 207.69, y: 471.46), controlPoint2: CGPoint(x: 209.33, y: 469.71))
        bezier2Path.addCurve(to: CGPoint(x: 293.38, y: 361.5), controlPoint1: CGPoint(x: 258.36, y: 460.68), controlPoint2: CGPoint(x: 293.38, y: 415.25))
        bezier2Path.addCurve(to: CGPoint(x: 218.2, y: 255.2), controlPoint1: CGPoint(x: 293.38, y: 310.56), controlPoint2: CGPoint(x: 261.89, y: 266.81))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 161.97, y: 254.27))
        bezier2Path.addCurve(to: CGPoint(x: 158.49, y: 255.23), controlPoint1: CGPoint(x: 160.81, y: 254.57), controlPoint2: CGPoint(x: 159.64, y: 254.89))
        bezier2Path.addCurve(to: CGPoint(x: 85.69, y: 361.66), controlPoint1: CGPoint(x: 115.97, y: 267.91), controlPoint2: CGPoint(x: 85.69, y: 311.35))
        bezier2Path.addCurve(to: CGPoint(x: 181.21, y: 471.72), controlPoint1: CGPoint(x: 85.69, y: 421.54), controlPoint2: CGPoint(x: 128.27, y: 470.25))
        bezier2Path.addLine(to: CGPoint(x: 181.07, y: 476.72))
        bezier2Path.addLine(to: CGPoint(x: 176.22, y: 477.94))
        bezier2Path.addCurve(to: CGPoint(x: 175.71, y: 475.31), controlPoint1: CGPoint(x: 176, y: 477.08), controlPoint2: CGPoint(x: 175.83, y: 476.2))
        bezier2Path.addLine(to: CGPoint(x: 180.66, y: 474.61))
        bezier2Path.addLine(to: CGPoint(x: 179.87, y: 479.55))
        bezier2Path.addCurve(to: CGPoint(x: 87.42, y: 361.5), controlPoint1: CGPoint(x: 126.98, y: 471.14), controlPoint2: CGPoint(x: 87.42, y: 420.9))
        bezier2Path.addCurve(to: CGPoint(x: 140.01, y: 259.08), controlPoint1: CGPoint(x: 87.42, y: 319.09), controlPoint2: CGPoint(x: 107.62, y: 280.5))
        bezier2Path.addCurve(to: CGPoint(x: 170.97, y: 245.29), controlPoint1: CGPoint(x: 149.59, y: 252.75), controlPoint2: CGPoint(x: 160.02, y: 248.08))
        bezier2Path.addLine(to: CGPoint(x: 172.21, y: 250.13))
        bezier2Path.addLine(to: CGPoint(x: 171.4, y: 255.07))
        bezier2Path.addCurve(to: CGPoint(x: 160.88, y: 254.42), controlPoint1: CGPoint(x: 168.16, y: 254.54), controlPoint2: CGPoint(x: 164.67, y: 254.32))
        bezier2Path.addLine(to: CGPoint(x: 160.74, y: 249.42))
        bezier2Path.addLine(to: CGPoint(x: 161.97, y: 254.27))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 159.51, y: 244.58))
        bezier2Path.addCurve(to: CGPoint(x: 160.6, y: 244.43), controlPoint1: CGPoint(x: 159.87, y: 244.49), controlPoint2: CGPoint(x: 160.23, y: 244.44))
        bezier2Path.addCurve(to: CGPoint(x: 173.01, y: 245.2), controlPoint1: CGPoint(x: 165.01, y: 244.3), controlPoint2: CGPoint(x: 169.14, y: 244.57))
        bezier2Path.addCurve(to: CGPoint(x: 173.44, y: 254.98), controlPoint1: CGPoint(x: 178.36, y: 246.07), controlPoint2: CGPoint(x: 178.69, y: 253.64))
        bezier2Path.addCurve(to: CGPoint(x: 145.53, y: 267.42), controlPoint1: CGPoint(x: 163.59, y: 257.49), controlPoint2: CGPoint(x: 154.19, y: 261.7))
        bezier2Path.addCurve(to: CGPoint(x: 97.42, y: 361.5), controlPoint1: CGPoint(x: 115.97, y: 286.96), controlPoint2: CGPoint(x: 97.42, y: 322.41))
        bezier2Path.addCurve(to: CGPoint(x: 181.44, y: 469.68), controlPoint1: CGPoint(x: 97.42, y: 416.14), controlPoint2: CGPoint(x: 133.58, y: 462.06))
        bezier2Path.addCurve(to: CGPoint(x: 185.61, y: 473.92), controlPoint1: CGPoint(x: 183.61, y: 470.02), controlPoint2: CGPoint(x: 185.3, y: 471.74))
        bezier2Path.addCurve(to: CGPoint(x: 185.92, y: 475.49), controlPoint1: CGPoint(x: 185.68, y: 474.46), controlPoint2: CGPoint(x: 185.79, y: 474.98))
        bezier2Path.addCurve(to: CGPoint(x: 180.93, y: 481.72), controlPoint1: CGPoint(x: 186.73, y: 478.71), controlPoint2: CGPoint(x: 184.25, y: 481.81))
        bezier2Path.addCurve(to: CGPoint(x: 75.69, y: 361.66), controlPoint1: CGPoint(x: 122.33, y: 480.09), controlPoint2: CGPoint(x: 75.69, y: 426.74))
        bezier2Path.addCurve(to: CGPoint(x: 155.63, y: 245.65), controlPoint1: CGPoint(x: 75.69, y: 307.05), controlPoint2: CGPoint(x: 108.75, y: 259.62))
        bezier2Path.addCurve(to: CGPoint(x: 159.51, y: 244.58), controlPoint1: CGPoint(x: 156.92, y: 245.26), controlPoint2: CGPoint(x: 158.21, y: 244.91))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 198.62, y: 497.31))
        bezier2Path.addCurve(to: CGPoint(x: 176.9, y: 503.63), controlPoint1: CGPoint(x: 192.52, y: 500.16), controlPoint2: CGPoint(x: 185.2, y: 502.23))
        bezier2Path.addLine(to: CGPoint(x: 176.78, y: 493.75))
        bezier2Path.addCurve(to: CGPoint(x: 196.1, y: 495.14), controlPoint1: CGPoint(x: 183.14, y: 494.67), controlPoint2: CGPoint(x: 189.59, y: 495.14))
        bezier2Path.addCurve(to: CGPoint(x: 215.84, y: 493.69), controlPoint1: CGPoint(x: 202.76, y: 495.14), controlPoint2: CGPoint(x: 209.35, y: 494.65))
        bezier2Path.addLine(to: CGPoint(x: 215.72, y: 503.57))
        bezier2Path.addCurve(to: CGPoint(x: 194.38, y: 497.31), controlPoint1: CGPoint(x: 207.58, y: 502.16), controlPoint2: CGPoint(x: 200.38, y: 500.11))
        bezier2Path.addLine(to: CGPoint(x: 198.62, y: 497.31))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 194.38, y: 488.25))
        bezier2Path.addCurve(to: CGPoint(x: 198.62, y: 488.25), controlPoint1: CGPoint(x: 195.72, y: 487.62), controlPoint2: CGPoint(x: 197.28, y: 487.62))
        bezier2Path.addCurve(to: CGPoint(x: 217.42, y: 493.71), controlPoint1: CGPoint(x: 203.72, y: 490.63), controlPoint2: CGPoint(x: 210.09, y: 492.45))
        bezier2Path.addCurve(to: CGPoint(x: 217.3, y: 503.59), controlPoint1: CGPoint(x: 223.02, y: 494.68), controlPoint2: CGPoint(x: 222.93, y: 502.75))
        bezier2Path.addCurve(to: CGPoint(x: 196.1, y: 505.14), controlPoint1: CGPoint(x: 210.32, y: 504.62), controlPoint2: CGPoint(x: 203.24, y: 505.14))
        bezier2Path.addCurve(to: CGPoint(x: 175.35, y: 503.65), controlPoint1: CGPoint(x: 189.11, y: 505.14), controlPoint2: CGPoint(x: 182.18, y: 504.64))
        bezier2Path.addCurve(to: CGPoint(x: 175.23, y: 493.77), controlPoint1: CGPoint(x: 169.7, y: 502.83), controlPoint2: CGPoint(x: 169.61, y: 494.72))
        bezier2Path.addCurve(to: CGPoint(x: 194.38, y: 488.25), controlPoint1: CGPoint(x: 182.71, y: 492.51), controlPoint2: CGPoint(x: 189.2, y: 490.67))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 198.96, y: 184.02))
        bezier2Path.addCurve(to: CGPoint(x: 374, y: 361.5), controlPoint1: CGPoint(x: 295.96, y: 185.34), controlPoint2: CGPoint(x: 374, y: 264.39))
        bezier2Path.addCurve(to: CGPoint(x: 196.5, y: 539), controlPoint1: CGPoint(x: 374, y: 459.53), controlPoint2: CGPoint(x: 294.53, y: 539))
        bezier2Path.addCurve(to: CGPoint(x: 19, y: 361.5), controlPoint1: CGPoint(x: 98.47, y: 539), controlPoint2: CGPoint(x: 19, y: 459.53))
        bezier2Path.addCurve(to: CGPoint(x: 162.83, y: 187.19), controlPoint1: CGPoint(x: 19, y: 276.02), controlPoint2: CGPoint(x: 79.87, y: 203.12))
        bezier2Path.addCurve(to: CGPoint(x: 196.5, y: 184), controlPoint1: CGPoint(x: 173.85, y: 185.07), controlPoint2: CGPoint(x: 185.11, y: 184))
        bezier2Path.addCurve(to: CGPoint(x: 198.96, y: 184.02), controlPoint1: CGPoint(x: 197.32, y: 184), controlPoint2: CGPoint(x: 198.14, y: 184.01))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 198.83, y: 194.02))
        bezier2Path.addCurve(to: CGPoint(x: 196.5, y: 194), controlPoint1: CGPoint(x: 198.05, y: 194.01), controlPoint2: CGPoint(x: 197.28, y: 194))
        bezier2Path.addCurve(to: CGPoint(x: 164.72, y: 197.01), controlPoint1: CGPoint(x: 185.74, y: 194), controlPoint2: CGPoint(x: 175.11, y: 195.01))
        bezier2Path.addCurve(to: CGPoint(x: 29, y: 361.5), controlPoint1: CGPoint(x: 86.44, y: 212.04), controlPoint2: CGPoint(x: 29, y: 280.83))
        bezier2Path.addCurve(to: CGPoint(x: 196.5, y: 529), controlPoint1: CGPoint(x: 29, y: 454.01), controlPoint2: CGPoint(x: 103.99, y: 529))
        bezier2Path.addCurve(to: CGPoint(x: 364, y: 361.5), controlPoint1: CGPoint(x: 289.01, y: 529), controlPoint2: CGPoint(x: 364, y: 454.01))
        bezier2Path.addCurve(to: CGPoint(x: 198.83, y: 194.02), controlPoint1: CGPoint(x: 364, y: 269.86), controlPoint2: CGPoint(x: 290.35, y: 195.26))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.5, y: 184), end: CGPoint(x: 196.5, y: 539), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Symbol Drawing
        let symbolRect = CGRect(x: 105, y: 270, width: 183, height: 183)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        NebulaStyleKit.drawSacred(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()


        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 259, y: 230, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 122, y: 488, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole11(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// wall Drawing
        let wallPath = UIBezierPath()
        wallPath.move(to: CGPoint(x: 206.57, y: 264.65))
        wallPath.addLine(to: CGPoint(x: 115.11, y: 356.11))
        wallPath.addLine(to: CGPoint(x: 115.11, y: 349.04))
        wallPath.addLine(to: CGPoint(x: 199.54, y: 433.46))
        wallPath.addLine(to: CGPoint(x: 192.46, y: 433.46))
        wallPath.addLine(to: CGPoint(x: 283.92, y: 342.01))
        wallPath.addLine(to: CGPoint(x: 283.92, y: 349.08))
        wallPath.addLine(to: CGPoint(x: 199.5, y: 264.65))
        wallPath.addLine(to: CGPoint(x: 206.57, y: 264.65))
        wallPath.close()
        context.saveGState()
        wallPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 199.52, y: 264.65), end: CGPoint(x: 199.52, y: 433.46), options: [])
        context.restoreGState()

        ////// wall Inner Shadow
        context.saveGState()
        context.clip(to: wallPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wallOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wallOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wallOpaqueShadow.setFill()
        wallPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 199, y: 583, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 198, y: 113, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// wall 2 Drawing
        let wall2Path = UIBezierPath()
        wall2Path.move(to: CGPoint(x: 199.5, y: 257.58))
        wall2Path.addCurve(to: CGPoint(x: 206.57, y: 257.58), controlPoint1: CGPoint(x: 201.45, y: 255.63), controlPoint2: CGPoint(x: 204.62, y: 255.63))
        wall2Path.addLine(to: CGPoint(x: 290.99, y: 342.01))
        wall2Path.addCurve(to: CGPoint(x: 290.99, y: 349.08), controlPoint1: CGPoint(x: 292.95, y: 343.96), controlPoint2: CGPoint(x: 292.95, y: 347.12))
        wall2Path.addLine(to: CGPoint(x: 199.54, y: 440.54))
        wall2Path.addCurve(to: CGPoint(x: 192.46, y: 440.54), controlPoint1: CGPoint(x: 197.58, y: 442.49), controlPoint2: CGPoint(x: 194.42, y: 442.49))
        wall2Path.addLine(to: CGPoint(x: 108.04, y: 356.11))
        wall2Path.addCurve(to: CGPoint(x: 108.04, y: 349.04), controlPoint1: CGPoint(x: 106.09, y: 354.16), controlPoint2: CGPoint(x: 106.09, y: 350.99))
        wall2Path.addLine(to: CGPoint(x: 199.5, y: 257.58))
        wall2Path.close()
        context.saveGState()
        wall2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 199.52, y: 256.12), end: CGPoint(x: 199.52, y: 442), options: [])
        context.restoreGState()

        ////// wall 2 Inner Shadow
        context.saveGState()
        context.clip(to: wall2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wall2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wall2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wall2OpaqueShadow.setFill()
        wall2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// wall 3 Drawing
        let wall3Path = UIBezierPath()
        wall3Path.move(to: CGPoint(x: 294.69, y: 111.39))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 118.39), controlPoint1: CGPoint(x: 294.69, y: 112.66), controlPoint2: CGPoint(x: 294.69, y: 112.66))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 136.83), controlPoint1: CGPoint(x: 294.69, y: 126.02), controlPoint2: CGPoint(x: 294.69, y: 126.02))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 192.78), controlPoint1: CGPoint(x: 294.69, y: 162.26), controlPoint2: CGPoint(x: 294.69, y: 162.26))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 269.12), controlPoint1: CGPoint(x: 294.69, y: 240.94), controlPoint2: CGPoint(x: 294.69, y: 240.94))
        wall3Path.addLine(to: CGPoint(x: 293.39, y: 265.75))
        wall3Path.addCurve(to: CGPoint(x: 325.92, y: 301.49), controlPoint1: CGPoint(x: 307.39, y: 281.13), controlPoint2: CGPoint(x: 307.39, y: 281.13))
        wall3Path.addCurve(to: CGPoint(x: 353.95, y: 332.3), controlPoint1: CGPoint(x: 341.21, y: 318.3), controlPoint2: CGPoint(x: 341.21, y: 318.3))
        wall3Path.addCurve(to: CGPoint(x: 363.19, y: 342.46), controlPoint1: CGPoint(x: 359.37, y: 338.26), controlPoint2: CGPoint(x: 359.37, y: 338.26))
        wall3Path.addCurve(to: CGPoint(x: 366.7, y: 346.31), controlPoint1: CGPoint(x: 366.06, y: 345.61), controlPoint2: CGPoint(x: 366.06, y: 345.61))
        wall3Path.addCurve(to: CGPoint(x: 366.7, y: 353.04), controlPoint1: CGPoint(x: 368.43, y: 348.22), controlPoint2: CGPoint(x: 368.43, y: 351.13))
        wall3Path.addCurve(to: CGPoint(x: 366.4, y: 353.37), controlPoint1: CGPoint(x: 366.65, y: 353.09), controlPoint2: CGPoint(x: 366.65, y: 353.09))
        wall3Path.addLine(to: CGPoint(x: 362.7, y: 350))
        wall3Path.addLine(to: CGPoint(x: 366.4, y: 346.63))
        wall3Path.addCurve(to: CGPoint(x: 366.7, y: 346.96), controlPoint1: CGPoint(x: 366.65, y: 346.91), controlPoint2: CGPoint(x: 366.65, y: 346.91))
        wall3Path.addCurve(to: CGPoint(x: 366.7, y: 353.69), controlPoint1: CGPoint(x: 368.43, y: 348.87), controlPoint2: CGPoint(x: 368.43, y: 351.78))
        wall3Path.addCurve(to: CGPoint(x: 363.19, y: 357.54), controlPoint1: CGPoint(x: 366.06, y: 354.39), controlPoint2: CGPoint(x: 366.06, y: 354.39))
        wall3Path.addCurve(to: CGPoint(x: 353.95, y: 367.7), controlPoint1: CGPoint(x: 359.37, y: 361.74), controlPoint2: CGPoint(x: 359.37, y: 361.74))
        wall3Path.addCurve(to: CGPoint(x: 325.92, y: 398.51), controlPoint1: CGPoint(x: 341.21, y: 381.7), controlPoint2: CGPoint(x: 341.21, y: 381.7))
        wall3Path.addCurve(to: CGPoint(x: 293.39, y: 434.25), controlPoint1: CGPoint(x: 307.39, y: 418.87), controlPoint2: CGPoint(x: 307.39, y: 418.87))
        wall3Path.addLine(to: CGPoint(x: 294.69, y: 430.88))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 507.22), controlPoint1: CGPoint(x: 294.69, y: 441.67), controlPoint2: CGPoint(x: 294.69, y: 459.06))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 563.17), controlPoint1: CGPoint(x: 294.69, y: 537.74), controlPoint2: CGPoint(x: 294.69, y: 537.74))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 581.61), controlPoint1: CGPoint(x: 294.69, y: 573.98), controlPoint2: CGPoint(x: 294.69, y: 573.98))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 588.61), controlPoint1: CGPoint(x: 294.69, y: 587.34), controlPoint2: CGPoint(x: 294.69, y: 587.34))
        wall3Path.addCurve(to: CGPoint(x: 293.05, y: 592.31), controlPoint1: CGPoint(x: 294.69, y: 590.02), controlPoint2: CGPoint(x: 294.1, y: 591.37))
        wall3Path.addCurve(to: CGPoint(x: 289.19, y: 595.81), controlPoint1: CGPoint(x: 292.35, y: 592.95), controlPoint2: CGPoint(x: 292.35, y: 592.95))
        wall3Path.addCurve(to: CGPoint(x: 279.02, y: 605.03), controlPoint1: CGPoint(x: 284.98, y: 599.63), controlPoint2: CGPoint(x: 284.98, y: 599.63))
        wall3Path.addCurve(to: CGPoint(x: 248.14, y: 633.01), controlPoint1: CGPoint(x: 264.98, y: 617.75), controlPoint2: CGPoint(x: 264.98, y: 617.75))
        wall3Path.addCurve(to: CGPoint(x: 217.27, y: 660.99), controlPoint1: CGPoint(x: 231.3, y: 648.27), controlPoint2: CGPoint(x: 231.3, y: 648.27))
        wall3Path.addCurve(to: CGPoint(x: 207.09, y: 670.21), controlPoint1: CGPoint(x: 211.3, y: 666.39), controlPoint2: CGPoint(x: 211.3, y: 666.39))
        wall3Path.addCurve(to: CGPoint(x: 204.24, y: 672.79), controlPoint1: CGPoint(x: 205.38, y: 671.76), controlPoint2: CGPoint(x: 205.38, y: 671.76))
        wall3Path.addCurve(to: CGPoint(x: 203.49, y: 673.47), controlPoint1: CGPoint(x: 203.79, y: 673.2), controlPoint2: CGPoint(x: 203.79, y: 673.2))
        wall3Path.addCurve(to: CGPoint(x: 203.3, y: 673.65), controlPoint1: CGPoint(x: 203.37, y: 673.58), controlPoint2: CGPoint(x: 203.37, y: 673.58))
        wall3Path.addCurve(to: CGPoint(x: 203.25, y: 673.69), controlPoint1: CGPoint(x: 203.27, y: 673.67), controlPoint2: CGPoint(x: 203.27, y: 673.67))
        wall3Path.addCurve(to: CGPoint(x: 203.24, y: 673.7), controlPoint1: CGPoint(x: 203.24, y: 673.7), controlPoint2: CGPoint(x: 203.24, y: 673.7))
        wall3Path.addCurve(to: CGPoint(x: 203.23, y: 673.7), controlPoint1: CGPoint(x: 203.24, y: 673.7), controlPoint2: CGPoint(x: 203.24, y: 673.7))
        wall3Path.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wall3Path.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wall3Path.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wall3Path.addLine(to: CGPoint(x: 199.88, y: 670))
        wall3Path.addLine(to: CGPoint(x: 203.23, y: 673.7))
        wall3Path.addCurve(to: CGPoint(x: 196.26, y: 673.47), controlPoint1: CGPoint(x: 196.48, y: 673.67), controlPoint2: CGPoint(x: 196.48, y: 673.67))
        wall3Path.addCurve(to: CGPoint(x: 195.51, y: 672.79), controlPoint1: CGPoint(x: 195.97, y: 673.2), controlPoint2: CGPoint(x: 195.97, y: 673.2))
        wall3Path.addCurve(to: CGPoint(x: 192.66, y: 670.21), controlPoint1: CGPoint(x: 194.86, y: 672.21), controlPoint2: CGPoint(x: 193.91, y: 671.34))
        wall3Path.addCurve(to: CGPoint(x: 182.48, y: 660.99), controlPoint1: CGPoint(x: 190.3, y: 668.07), controlPoint2: CGPoint(x: 186.9, y: 664.99))
        wall3Path.addCurve(to: CGPoint(x: 151.61, y: 633.01), controlPoint1: CGPoint(x: 175.15, y: 654.34), controlPoint2: CGPoint(x: 165.82, y: 645.89))
        wall3Path.addLine(to: CGPoint(x: 151.61, y: 633.01))
        wall3Path.addCurve(to: CGPoint(x: 143.1, y: 625.3), controlPoint1: CGPoint(x: 147.33, y: 629.13), controlPoint2: CGPoint(x: 147.33, y: 629.13))
        wall3Path.addCurve(to: CGPoint(x: 117.67, y: 602.25), controlPoint1: CGPoint(x: 128.91, y: 612.44), controlPoint2: CGPoint(x: 128.91, y: 612.44))
        wall3Path.addCurve(to: CGPoint(x: 109.68, y: 595.01), controlPoint1: CGPoint(x: 112.95, y: 597.98), controlPoint2: CGPoint(x: 112.95, y: 597.98))
        wall3Path.addCurve(to: CGPoint(x: 106.7, y: 592.31), controlPoint1: CGPoint(x: 107.24, y: 592.8), controlPoint2: CGPoint(x: 107.24, y: 592.8))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 588.61), controlPoint1: CGPoint(x: 105.65, y: 591.37), controlPoint2: CGPoint(x: 105.06, y: 590.02))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 581.61), controlPoint1: CGPoint(x: 105.06, y: 587.34), controlPoint2: CGPoint(x: 105.06, y: 587.34))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 563.17), controlPoint1: CGPoint(x: 105.06, y: 573.98), controlPoint2: CGPoint(x: 105.06, y: 573.98))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 507.22), controlPoint1: CGPoint(x: 105.06, y: 537.74), controlPoint2: CGPoint(x: 105.06, y: 537.74))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 430.88), controlPoint1: CGPoint(x: 105.06, y: 459.06), controlPoint2: CGPoint(x: 105.06, y: 459.06))
        wall3Path.addLine(to: CGPoint(x: 106.36, y: 434.25))
        wall3Path.addCurve(to: CGPoint(x: 73.83, y: 398.51), controlPoint1: CGPoint(x: 92.36, y: 418.87), controlPoint2: CGPoint(x: 92.36, y: 418.87))
        wall3Path.addCurve(to: CGPoint(x: 45.8, y: 367.7), controlPoint1: CGPoint(x: 58.54, y: 381.7), controlPoint2: CGPoint(x: 58.54, y: 381.7))
        wall3Path.addCurve(to: CGPoint(x: 36.56, y: 357.54), controlPoint1: CGPoint(x: 40.38, y: 361.74), controlPoint2: CGPoint(x: 40.38, y: 361.74))
        wall3Path.addCurve(to: CGPoint(x: 33.05, y: 353.69), controlPoint1: CGPoint(x: 33.69, y: 354.39), controlPoint2: CGPoint(x: 33.69, y: 354.39))
        wall3Path.addCurve(to: CGPoint(x: 33.05, y: 346.96), controlPoint1: CGPoint(x: 31.32, y: 351.78), controlPoint2: CGPoint(x: 31.32, y: 348.87))
        wall3Path.addCurve(to: CGPoint(x: 33.35, y: 346.63), controlPoint1: CGPoint(x: 33.1, y: 346.91), controlPoint2: CGPoint(x: 33.1, y: 346.91))
        wall3Path.addLine(to: CGPoint(x: 37.05, y: 350))
        wall3Path.addLine(to: CGPoint(x: 33.35, y: 353.37))
        wall3Path.addCurve(to: CGPoint(x: 33.05, y: 353.04), controlPoint1: CGPoint(x: 33.1, y: 353.09), controlPoint2: CGPoint(x: 33.1, y: 353.09))
        wall3Path.addCurve(to: CGPoint(x: 33.05, y: 346.31), controlPoint1: CGPoint(x: 31.32, y: 351.13), controlPoint2: CGPoint(x: 31.32, y: 348.22))
        wall3Path.addCurve(to: CGPoint(x: 35.57, y: 343.54), controlPoint1: CGPoint(x: 33.5, y: 345.81), controlPoint2: CGPoint(x: 33.5, y: 345.81))
        wall3Path.addCurve(to: CGPoint(x: 42.38, y: 336.06), controlPoint1: CGPoint(x: 38.36, y: 340.48), controlPoint2: CGPoint(x: 38.36, y: 340.48))
        wall3Path.addCurve(to: CGPoint(x: 64.27, y: 312), controlPoint1: CGPoint(x: 51.99, y: 325.49), controlPoint2: CGPoint(x: 51.99, y: 325.49))
        wall3Path.addCurve(to: CGPoint(x: 73.83, y: 301.49), controlPoint1: CGPoint(x: 69.01, y: 306.79), controlPoint2: CGPoint(x: 69.01, y: 306.79))
        wall3Path.addCurve(to: CGPoint(x: 106.36, y: 265.75), controlPoint1: CGPoint(x: 92.36, y: 281.13), controlPoint2: CGPoint(x: 92.36, y: 281.13))
        wall3Path.addLine(to: CGPoint(x: 105.06, y: 269.12))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 192.78), controlPoint1: CGPoint(x: 105.06, y: 240.94), controlPoint2: CGPoint(x: 105.06, y: 240.94))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 136.83), controlPoint1: CGPoint(x: 105.06, y: 162.26), controlPoint2: CGPoint(x: 105.06, y: 162.26))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 118.39), controlPoint1: CGPoint(x: 105.06, y: 126.02), controlPoint2: CGPoint(x: 105.06, y: 126.02))
        wall3Path.addCurve(to: CGPoint(x: 105.06, y: 111.39), controlPoint1: CGPoint(x: 105.06, y: 112.66), controlPoint2: CGPoint(x: 105.06, y: 112.66))
        wall3Path.addCurve(to: CGPoint(x: 106.7, y: 107.69), controlPoint1: CGPoint(x: 105.06, y: 109.98), controlPoint2: CGPoint(x: 105.65, y: 108.63))
        wall3Path.addCurve(to: CGPoint(x: 109.33, y: 105.3), controlPoint1: CGPoint(x: 107.17, y: 107.26), controlPoint2: CGPoint(x: 107.17, y: 107.26))
        wall3Path.addCurve(to: CGPoint(x: 116.44, y: 98.86), controlPoint1: CGPoint(x: 112.23, y: 102.67), controlPoint2: CGPoint(x: 112.23, y: 102.67))
        wall3Path.addCurve(to: CGPoint(x: 143.1, y: 74.7), controlPoint1: CGPoint(x: 128.04, y: 88.35), controlPoint2: CGPoint(x: 128.04, y: 88.35))
        wall3Path.addCurve(to: CGPoint(x: 151.61, y: 66.99), controlPoint1: CGPoint(x: 147.33, y: 70.87), controlPoint2: CGPoint(x: 147.33, y: 70.87))
        wall3Path.addCurve(to: CGPoint(x: 160.55, y: 58.89), controlPoint1: CGPoint(x: 156.11, y: 62.91), controlPoint2: CGPoint(x: 156.11, y: 62.91))
        wall3Path.addCurve(to: CGPoint(x: 185.42, y: 36.36), controlPoint1: CGPoint(x: 174.4, y: 46.33), controlPoint2: CGPoint(x: 174.4, y: 46.33))
        wall3Path.addCurve(to: CGPoint(x: 193.34, y: 29.18), controlPoint1: CGPoint(x: 190.06, y: 32.15), controlPoint2: CGPoint(x: 190.06, y: 32.15))
        wall3Path.addCurve(to: CGPoint(x: 196.51, y: 26.3), controlPoint1: CGPoint(x: 195.82, y: 26.92), controlPoint2: CGPoint(x: 195.82, y: 26.92))
        wall3Path.addCurve(to: CGPoint(x: 203.22, y: 26.3), controlPoint1: CGPoint(x: 198.41, y: 24.58), controlPoint2: CGPoint(x: 201.32, y: 24.58))
        wall3Path.addLine(to: CGPoint(x: 293.05, y: 107.69))
        wall3Path.addCurve(to: CGPoint(x: 294.69, y: 111.39), controlPoint1: CGPoint(x: 294.09, y: 108.63), controlPoint2: CGPoint(x: 294.69, y: 109.98))
        wall3Path.close()
        context.saveGState()
        wall3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 199.87, y: 25.01), end: CGPoint(x: 199.88, y: 673.7), options: [])
        context.restoreGState()

        ////// wall 3 Inner Shadow
        context.saveGState()
        context.clip(to: wall3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wall3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wall3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wall3OpaqueShadow.setFill()
        wall3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// wall 4 Drawing
        let wall4Path = UIBezierPath()
        wall4Path.move(to: CGPoint(x: 284.69, y: 111.39))
        wall4Path.addLine(to: CGPoint(x: 286.33, y: 115.1))
        wall4Path.addLine(to: CGPoint(x: 196.51, y: 33.71))
        wall4Path.addLine(to: CGPoint(x: 199.86, y: 30.01))
        wall4Path.addLine(to: CGPoint(x: 203.22, y: 33.71))
        wall4Path.addCurve(to: CGPoint(x: 200.05, y: 36.59), controlPoint1: CGPoint(x: 202.54, y: 34.33), controlPoint2: CGPoint(x: 202.54, y: 34.33))
        wall4Path.addCurve(to: CGPoint(x: 192.13, y: 43.77), controlPoint1: CGPoint(x: 196.78, y: 39.56), controlPoint2: CGPoint(x: 196.78, y: 39.56))
        wall4Path.addCurve(to: CGPoint(x: 167.27, y: 66.3), controlPoint1: CGPoint(x: 181.12, y: 53.74), controlPoint2: CGPoint(x: 181.12, y: 53.74))
        wall4Path.addCurve(to: CGPoint(x: 158.32, y: 74.4), controlPoint1: CGPoint(x: 162.82, y: 70.32), controlPoint2: CGPoint(x: 162.82, y: 70.32))
        wall4Path.addCurve(to: CGPoint(x: 149.82, y: 82.11), controlPoint1: CGPoint(x: 154.05, y: 78.28), controlPoint2: CGPoint(x: 154.05, y: 78.28))
        wall4Path.addCurve(to: CGPoint(x: 123.16, y: 106.27), controlPoint1: CGPoint(x: 134.76, y: 95.76), controlPoint2: CGPoint(x: 134.76, y: 95.76))
        wall4Path.addCurve(to: CGPoint(x: 116.04, y: 112.71), controlPoint1: CGPoint(x: 118.95, y: 110.08), controlPoint2: CGPoint(x: 118.95, y: 110.08))
        wall4Path.addCurve(to: CGPoint(x: 113.42, y: 115.1), controlPoint1: CGPoint(x: 113.89, y: 114.67), controlPoint2: CGPoint(x: 113.89, y: 114.67))
        wall4Path.addLine(to: CGPoint(x: 115.06, y: 111.39))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 118.39), controlPoint1: CGPoint(x: 115.06, y: 112.66), controlPoint2: CGPoint(x: 115.06, y: 112.66))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 136.83), controlPoint1: CGPoint(x: 115.06, y: 126.02), controlPoint2: CGPoint(x: 115.06, y: 126.02))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 192.78), controlPoint1: CGPoint(x: 115.06, y: 162.26), controlPoint2: CGPoint(x: 115.06, y: 162.26))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 269.12), controlPoint1: CGPoint(x: 115.06, y: 240.94), controlPoint2: CGPoint(x: 115.06, y: 240.94))
        wall4Path.addCurve(to: CGPoint(x: 113.76, y: 272.48), controlPoint1: CGPoint(x: 115.06, y: 270.36), controlPoint2: CGPoint(x: 114.59, y: 271.56))
        wall4Path.addCurve(to: CGPoint(x: 81.23, y: 308.22), controlPoint1: CGPoint(x: 99.76, y: 287.86), controlPoint2: CGPoint(x: 99.76, y: 287.86))
        wall4Path.addCurve(to: CGPoint(x: 71.67, y: 318.73), controlPoint1: CGPoint(x: 76.41, y: 313.52), controlPoint2: CGPoint(x: 76.41, y: 313.52))
        wall4Path.addCurve(to: CGPoint(x: 49.78, y: 342.79), controlPoint1: CGPoint(x: 59.39, y: 332.22), controlPoint2: CGPoint(x: 59.39, y: 332.22))
        wall4Path.addCurve(to: CGPoint(x: 42.97, y: 350.27), controlPoint1: CGPoint(x: 45.75, y: 347.21), controlPoint2: CGPoint(x: 45.75, y: 347.21))
        wall4Path.addCurve(to: CGPoint(x: 40.45, y: 353.04), controlPoint1: CGPoint(x: 40.9, y: 352.54), controlPoint2: CGPoint(x: 40.9, y: 352.54))
        wall4Path.addLine(to: CGPoint(x: 36.75, y: 349.67))
        wall4Path.addLine(to: CGPoint(x: 40.45, y: 346.31))
        wall4Path.addCurve(to: CGPoint(x: 40.74, y: 346.63), controlPoint1: CGPoint(x: 40.5, y: 346.36), controlPoint2: CGPoint(x: 40.5, y: 346.36))
        wall4Path.addCurve(to: CGPoint(x: 40.74, y: 353.37), controlPoint1: CGPoint(x: 42.48, y: 348.54), controlPoint2: CGPoint(x: 42.48, y: 351.46))
        wall4Path.addCurve(to: CGPoint(x: 40.45, y: 353.69), controlPoint1: CGPoint(x: 40.5, y: 353.64), controlPoint2: CGPoint(x: 40.5, y: 353.64))
        wall4Path.addLine(to: CGPoint(x: 36.75, y: 350.33))
        wall4Path.addLine(to: CGPoint(x: 40.45, y: 346.96))
        wall4Path.addCurve(to: CGPoint(x: 43.95, y: 350.81), controlPoint1: CGPoint(x: 41.09, y: 347.66), controlPoint2: CGPoint(x: 41.09, y: 347.66))
        wall4Path.addCurve(to: CGPoint(x: 53.19, y: 360.97), controlPoint1: CGPoint(x: 47.78, y: 355.01), controlPoint2: CGPoint(x: 47.78, y: 355.01))
        wall4Path.addCurve(to: CGPoint(x: 81.23, y: 391.78), controlPoint1: CGPoint(x: 65.94, y: 374.97), controlPoint2: CGPoint(x: 65.94, y: 374.97))
        wall4Path.addCurve(to: CGPoint(x: 113.76, y: 427.52), controlPoint1: CGPoint(x: 99.76, y: 412.14), controlPoint2: CGPoint(x: 99.76, y: 412.14))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 430.88), controlPoint1: CGPoint(x: 114.59, y: 428.44), controlPoint2: CGPoint(x: 115.06, y: 429.64))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 507.22), controlPoint1: CGPoint(x: 115.06, y: 459.06), controlPoint2: CGPoint(x: 115.06, y: 459.06))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 563.17), controlPoint1: CGPoint(x: 115.06, y: 537.74), controlPoint2: CGPoint(x: 115.06, y: 537.74))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 581.61), controlPoint1: CGPoint(x: 115.06, y: 573.98), controlPoint2: CGPoint(x: 115.06, y: 573.98))
        wall4Path.addCurve(to: CGPoint(x: 115.06, y: 588.61), controlPoint1: CGPoint(x: 115.06, y: 587.34), controlPoint2: CGPoint(x: 115.06, y: 587.34))
        wall4Path.addLine(to: CGPoint(x: 113.42, y: 584.9))
        wall4Path.addCurve(to: CGPoint(x: 116.39, y: 587.6), controlPoint1: CGPoint(x: 113.95, y: 585.39), controlPoint2: CGPoint(x: 113.95, y: 585.39))
        wall4Path.addCurve(to: CGPoint(x: 124.38, y: 594.84), controlPoint1: CGPoint(x: 119.67, y: 590.57), controlPoint2: CGPoint(x: 119.67, y: 590.57))
        wall4Path.addCurve(to: CGPoint(x: 149.82, y: 617.89), controlPoint1: CGPoint(x: 135.62, y: 605.03), controlPoint2: CGPoint(x: 135.62, y: 605.03))
        wall4Path.addCurve(to: CGPoint(x: 158.32, y: 625.6), controlPoint1: CGPoint(x: 154.05, y: 621.72), controlPoint2: CGPoint(x: 154.05, y: 621.72))
        wall4Path.addLine(to: CGPoint(x: 158.32, y: 625.6))
        wall4Path.addCurve(to: CGPoint(x: 189.2, y: 653.58), controlPoint1: CGPoint(x: 172.53, y: 638.48), controlPoint2: CGPoint(x: 181.86, y: 646.93))
        wall4Path.addCurve(to: CGPoint(x: 199.37, y: 662.8), controlPoint1: CGPoint(x: 193.62, y: 657.58), controlPoint2: CGPoint(x: 197.02, y: 660.66))
        wall4Path.addCurve(to: CGPoint(x: 202.22, y: 665.38), controlPoint1: CGPoint(x: 200.62, y: 663.93), controlPoint2: CGPoint(x: 201.58, y: 664.79))
        wall4Path.addCurve(to: CGPoint(x: 202.97, y: 666.06), controlPoint1: CGPoint(x: 202.68, y: 665.79), controlPoint2: CGPoint(x: 202.68, y: 665.79))
        wall4Path.addCurve(to: CGPoint(x: 203.23, y: 666.29), controlPoint1: CGPoint(x: 203.19, y: 666.25), controlPoint2: CGPoint(x: 203.19, y: 666.25))
        wall4Path.addCurve(to: CGPoint(x: 203.23, y: 673.7), controlPoint1: CGPoint(x: 201.46, y: 661.82), controlPoint2: CGPoint(x: 208.17, y: 669.23))
        wall4Path.addLine(to: CGPoint(x: 196.52, y: 666.29))
        wall4Path.addLine(to: CGPoint(x: 196.52, y: 666.29))
        wall4Path.addLine(to: CGPoint(x: 196.52, y: 666.29))
        wall4Path.addCurve(to: CGPoint(x: 196.52, y: 666.29), controlPoint1: CGPoint(x: 196.52, y: 666.29), controlPoint2: CGPoint(x: 196.52, y: 666.29))
        wall4Path.addCurve(to: CGPoint(x: 196.53, y: 666.28), controlPoint1: CGPoint(x: 196.53, y: 666.29), controlPoint2: CGPoint(x: 196.53, y: 666.29))
        wall4Path.addCurve(to: CGPoint(x: 196.58, y: 666.24), controlPoint1: CGPoint(x: 196.55, y: 666.26), controlPoint2: CGPoint(x: 196.55, y: 666.26))
        wall4Path.addCurve(to: CGPoint(x: 196.78, y: 666.06), controlPoint1: CGPoint(x: 196.66, y: 666.17), controlPoint2: CGPoint(x: 196.66, y: 666.17))
        wall4Path.addCurve(to: CGPoint(x: 197.53, y: 665.38), controlPoint1: CGPoint(x: 197.07, y: 665.79), controlPoint2: CGPoint(x: 197.07, y: 665.79))
        wall4Path.addCurve(to: CGPoint(x: 200.38, y: 662.8), controlPoint1: CGPoint(x: 198.67, y: 664.35), controlPoint2: CGPoint(x: 198.67, y: 664.35))
        wall4Path.addCurve(to: CGPoint(x: 210.55, y: 653.58), controlPoint1: CGPoint(x: 204.59, y: 658.98), controlPoint2: CGPoint(x: 204.59, y: 658.98))
        wall4Path.addCurve(to: CGPoint(x: 241.43, y: 625.6), controlPoint1: CGPoint(x: 224.59, y: 640.86), controlPoint2: CGPoint(x: 224.59, y: 640.86))
        wall4Path.addCurve(to: CGPoint(x: 272.3, y: 597.62), controlPoint1: CGPoint(x: 258.27, y: 610.34), controlPoint2: CGPoint(x: 258.27, y: 610.34))
        wall4Path.addCurve(to: CGPoint(x: 282.47, y: 588.4), controlPoint1: CGPoint(x: 278.26, y: 592.22), controlPoint2: CGPoint(x: 278.26, y: 592.22))
        wall4Path.addCurve(to: CGPoint(x: 286.33, y: 584.9), controlPoint1: CGPoint(x: 285.63, y: 585.54), controlPoint2: CGPoint(x: 285.63, y: 585.54))
        wall4Path.addLine(to: CGPoint(x: 284.69, y: 588.61))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 581.61), controlPoint1: CGPoint(x: 284.69, y: 587.34), controlPoint2: CGPoint(x: 284.69, y: 587.34))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 563.17), controlPoint1: CGPoint(x: 284.69, y: 573.98), controlPoint2: CGPoint(x: 284.69, y: 573.98))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 507.22), controlPoint1: CGPoint(x: 284.69, y: 537.74), controlPoint2: CGPoint(x: 284.69, y: 537.74))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 430.88), controlPoint1: CGPoint(x: 284.69, y: 459.06), controlPoint2: CGPoint(x: 284.69, y: 441.67))
        wall4Path.addCurve(to: CGPoint(x: 285.99, y: 427.52), controlPoint1: CGPoint(x: 284.69, y: 429.64), controlPoint2: CGPoint(x: 285.16, y: 428.44))
        wall4Path.addCurve(to: CGPoint(x: 318.52, y: 391.78), controlPoint1: CGPoint(x: 299.99, y: 412.14), controlPoint2: CGPoint(x: 299.99, y: 412.14))
        wall4Path.addCurve(to: CGPoint(x: 346.56, y: 360.97), controlPoint1: CGPoint(x: 333.81, y: 374.97), controlPoint2: CGPoint(x: 333.81, y: 374.97))
        wall4Path.addCurve(to: CGPoint(x: 355.8, y: 350.81), controlPoint1: CGPoint(x: 351.97, y: 355.01), controlPoint2: CGPoint(x: 351.97, y: 355.01))
        wall4Path.addCurve(to: CGPoint(x: 359.3, y: 346.96), controlPoint1: CGPoint(x: 358.66, y: 347.66), controlPoint2: CGPoint(x: 358.66, y: 347.66))
        wall4Path.addLine(to: CGPoint(x: 363, y: 350.33))
        wall4Path.addLine(to: CGPoint(x: 359.3, y: 353.69))
        wall4Path.addCurve(to: CGPoint(x: 359.01, y: 353.37), controlPoint1: CGPoint(x: 359.25, y: 353.64), controlPoint2: CGPoint(x: 359.25, y: 353.64))
        wall4Path.addCurve(to: CGPoint(x: 359.01, y: 346.63), controlPoint1: CGPoint(x: 357.27, y: 351.46), controlPoint2: CGPoint(x: 357.27, y: 348.54))
        wall4Path.addCurve(to: CGPoint(x: 359.3, y: 346.31), controlPoint1: CGPoint(x: 359.25, y: 346.36), controlPoint2: CGPoint(x: 359.25, y: 346.36))
        wall4Path.addLine(to: CGPoint(x: 363, y: 349.67))
        wall4Path.addLine(to: CGPoint(x: 359.3, y: 353.04))
        wall4Path.addCurve(to: CGPoint(x: 355.8, y: 349.19), controlPoint1: CGPoint(x: 358.66, y: 352.34), controlPoint2: CGPoint(x: 358.66, y: 352.34))
        wall4Path.addCurve(to: CGPoint(x: 346.56, y: 339.03), controlPoint1: CGPoint(x: 351.97, y: 344.99), controlPoint2: CGPoint(x: 351.97, y: 344.99))
        wall4Path.addCurve(to: CGPoint(x: 318.52, y: 308.22), controlPoint1: CGPoint(x: 333.81, y: 325.03), controlPoint2: CGPoint(x: 333.81, y: 325.03))
        wall4Path.addCurve(to: CGPoint(x: 285.99, y: 272.48), controlPoint1: CGPoint(x: 299.99, y: 287.86), controlPoint2: CGPoint(x: 299.99, y: 287.86))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 269.12), controlPoint1: CGPoint(x: 285.16, y: 271.56), controlPoint2: CGPoint(x: 284.69, y: 270.36))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 192.78), controlPoint1: CGPoint(x: 284.69, y: 240.94), controlPoint2: CGPoint(x: 284.69, y: 240.94))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 136.83), controlPoint1: CGPoint(x: 284.69, y: 162.26), controlPoint2: CGPoint(x: 284.69, y: 162.26))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 118.39), controlPoint1: CGPoint(x: 284.69, y: 126.02), controlPoint2: CGPoint(x: 284.69, y: 126.02))
        wall4Path.addCurve(to: CGPoint(x: 284.69, y: 111.39), controlPoint1: CGPoint(x: 284.69, y: 112.66), controlPoint2: CGPoint(x: 284.69, y: 112.66))
        wall4Path.close()
        context.saveGState()
        wall4Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 199.87, y: 30.01), end: CGPoint(x: 199.88, y: 673.7), options: [])
        context.restoreGState()

        ////// wall 4 Inner Shadow
        context.saveGState()
        context.clip(to: wall4Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wall4OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wall4OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wall4OpaqueShadow.setFill()
        wall4Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole22(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 259, y: 489, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 122, y: 477, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 195, y: 191))
        bezier2Path.addCurve(to: CGPoint(x: 187.4, y: 191.64), controlPoint1: CGPoint(x: 192.43, y: 191), controlPoint2: CGPoint(x: 189.89, y: 191.21))
        bezier2Path.addCurve(to: CGPoint(x: 150, y: 236), controlPoint1: CGPoint(x: 165.93, y: 195.29), controlPoint2: CGPoint(x: 150, y: 213.98))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 281), controlPoint1: CGPoint(x: 150, y: 260.85), controlPoint2: CGPoint(x: 170.15, y: 281))
        bezier2Path.addCurve(to: CGPoint(x: 240, y: 236), controlPoint1: CGPoint(x: 219.85, y: 281), controlPoint2: CGPoint(x: 240, y: 260.85))
        bezier2Path.addCurve(to: CGPoint(x: 195, y: 191), controlPoint1: CGPoint(x: 240, y: 211.15), controlPoint2: CGPoint(x: 219.85, y: 191))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 195, y: 191), end: CGPoint(x: 195, y: 281), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 195, y: 181))
        bezierPath.addCurve(to: CGPoint(x: 250, y: 236), controlPoint1: CGPoint(x: 225.38, y: 181), controlPoint2: CGPoint(x: 250, y: 205.62))
        bezierPath.addCurve(to: CGPoint(x: 195, y: 291), controlPoint1: CGPoint(x: 250, y: 266.38), controlPoint2: CGPoint(x: 225.38, y: 291))
        bezierPath.addCurve(to: CGPoint(x: 140, y: 236), controlPoint1: CGPoint(x: 164.62, y: 291), controlPoint2: CGPoint(x: 140, y: 266.38))
        bezierPath.addCurve(to: CGPoint(x: 185.72, y: 181.78), controlPoint1: CGPoint(x: 140, y: 209.08), controlPoint2: CGPoint(x: 159.47, y: 186.24))
        bezierPath.addCurve(to: CGPoint(x: 195, y: 181), controlPoint1: CGPoint(x: 188.77, y: 181.26), controlPoint2: CGPoint(x: 191.87, y: 181))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 195, y: 181), end: CGPoint(x: 195, y: 291), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 193.59, y: 88.38))
        bezier3Path.addLine(to: CGPoint(x: 198.42, y: 79.62))
        bezier3Path.addCurve(to: CGPoint(x: 198.42, y: 79.62), controlPoint1: CGPoint(x: 198.42, y: 79.62), controlPoint2: CGPoint(x: 198.42, y: 79.62))
        bezier3Path.addCurve(to: CGPoint(x: 198.42, y: 79.63), controlPoint1: CGPoint(x: 198.42, y: 79.63), controlPoint2: CGPoint(x: 198.42, y: 79.63))
        bezier3Path.addCurve(to: CGPoint(x: 198.43, y: 79.63), controlPoint1: CGPoint(x: 198.43, y: 79.63), controlPoint2: CGPoint(x: 198.43, y: 79.63))
        bezier3Path.addCurve(to: CGPoint(x: 198.47, y: 79.65), controlPoint1: CGPoint(x: 198.45, y: 79.64), controlPoint2: CGPoint(x: 198.45, y: 79.64))
        bezier3Path.addCurve(to: CGPoint(x: 198.58, y: 79.72), controlPoint1: CGPoint(x: 198.51, y: 79.68), controlPoint2: CGPoint(x: 198.51, y: 79.68))
        bezier3Path.addCurve(to: CGPoint(x: 198.99, y: 79.95), controlPoint1: CGPoint(x: 198.7, y: 79.78), controlPoint2: CGPoint(x: 198.83, y: 79.86))
        bezier3Path.addCurve(to: CGPoint(x: 200.5, y: 80.84), controlPoint1: CGPoint(x: 199.42, y: 80.2), controlPoint2: CGPoint(x: 199.92, y: 80.49))
        bezier3Path.addCurve(to: CGPoint(x: 206.02, y: 84.36), controlPoint1: CGPoint(x: 202.11, y: 81.81), controlPoint2: CGPoint(x: 203.96, y: 82.99))
        bezier3Path.addCurve(to: CGPoint(x: 225.09, y: 98.66), controlPoint1: CGPoint(x: 211.88, y: 88.27), controlPoint2: CGPoint(x: 218.3, y: 93.03))
        bezier3Path.addCurve(to: CGPoint(x: 279.08, y: 158.6), controlPoint1: CGPoint(x: 244.45, y: 114.73), controlPoint2: CGPoint(x: 262.97, y: 134.63))
        bezier3Path.addCurve(to: CGPoint(x: 323.01, y: 264.68), controlPoint1: CGPoint(x: 299.79, y: 189.41), controlPoint2: CGPoint(x: 314.95, y: 224.7))
        bezier3Path.addCurve(to: CGPoint(x: 319.32, y: 421.42), controlPoint1: CGPoint(x: 332.5, y: 311.82), controlPoint2: CGPoint(x: 331.78, y: 364.01))
        bezier3Path.addCurve(to: CGPoint(x: 316.86, y: 432.17), controlPoint1: CGPoint(x: 318.54, y: 424.99), controlPoint2: CGPoint(x: 317.73, y: 428.57))
        bezier3Path.addLine(to: CGPoint(x: 312, y: 431))
        bezier3Path.addLine(to: CGPoint(x: 315.54, y: 427.46))
        bezier3Path.addLine(to: CGPoint(x: 371.54, y: 483.46))
        bezier3Path.addCurve(to: CGPoint(x: 373, y: 487), controlPoint1: CGPoint(x: 372.47, y: 484.4), controlPoint2: CGPoint(x: 373, y: 485.67))
        bezier3Path.addCurve(to: CGPoint(x: 373, y: 490.69), controlPoint1: CGPoint(x: 373, y: 487.67), controlPoint2: CGPoint(x: 373, y: 487.67))
        bezier3Path.addCurve(to: CGPoint(x: 373, y: 500.42), controlPoint1: CGPoint(x: 373, y: 494.72), controlPoint2: CGPoint(x: 373, y: 494.72))
        bezier3Path.addCurve(to: CGPoint(x: 373, y: 529.95), controlPoint1: CGPoint(x: 373, y: 513.85), controlPoint2: CGPoint(x: 373, y: 513.85))
        bezier3Path.addCurve(to: CGPoint(x: 373, y: 570), controlPoint1: CGPoint(x: 373, y: 555.06), controlPoint2: CGPoint(x: 373, y: 555.06))
        bezier3Path.addCurve(to: CGPoint(x: 364.46, y: 573.54), controlPoint1: CGPoint(x: 373, y: 574.45), controlPoint2: CGPoint(x: 367.61, y: 576.69))
        bezier3Path.addCurve(to: CGPoint(x: 322.04, y: 547.05), controlPoint1: CGPoint(x: 355, y: 564.07), controlPoint2: CGPoint(x: 340.38, y: 555.18))
        bezier3Path.addCurve(to: CGPoint(x: 283.36, y: 532.78), controlPoint1: CGPoint(x: 309.76, y: 541.6), controlPoint2: CGPoint(x: 296.56, y: 536.83))
        bezier3Path.addCurve(to: CGPoint(x: 270.61, y: 529.09), controlPoint1: CGPoint(x: 278.74, y: 531.36), controlPoint2: CGPoint(x: 274.45, y: 530.13))
        bezier3Path.addCurve(to: CGPoint(x: 267.06, y: 528.17), controlPoint1: CGPoint(x: 269.27, y: 528.73), controlPoint2: CGPoint(x: 268.08, y: 528.42))
        bezier3Path.addCurve(to: CGPoint(x: 266.13, y: 527.94), controlPoint1: CGPoint(x: 266.7, y: 528.08), controlPoint2: CGPoint(x: 266.39, y: 528))
        bezier3Path.addCurve(to: CGPoint(x: 265.84, y: 527.86), controlPoint1: CGPoint(x: 265.98, y: 527.9), controlPoint2: CGPoint(x: 265.88, y: 527.87))
        bezier3Path.addLine(to: CGPoint(x: 271.27, y: 525.61))
        bezier3Path.addCurve(to: CGPoint(x: 270.7, y: 526.53), controlPoint1: CGPoint(x: 271.17, y: 525.77), controlPoint2: CGPoint(x: 270.98, y: 526.08))
        bezier3Path.addCurve(to: CGPoint(x: 269.12, y: 529.13), controlPoint1: CGPoint(x: 270.25, y: 527.28), controlPoint2: CGPoint(x: 269.72, y: 528.15))
        bezier3Path.addCurve(to: CGPoint(x: 263.45, y: 538.42), controlPoint1: CGPoint(x: 267.41, y: 531.93), controlPoint2: CGPoint(x: 265.5, y: 535.05))
        bezier3Path.addCurve(to: CGPoint(x: 246.26, y: 566.79), controlPoint1: CGPoint(x: 257.59, y: 548.05), controlPoint2: CGPoint(x: 251.73, y: 557.72))
        bezier3Path.addCurve(to: CGPoint(x: 245.69, y: 567.72), controlPoint1: CGPoint(x: 245.97, y: 567.25), controlPoint2: CGPoint(x: 245.97, y: 567.25))
        bezier3Path.addCurve(to: CGPoint(x: 221.72, y: 608.64), controlPoint1: CGPoint(x: 231.8, y: 590.78), controlPoint2: CGPoint(x: 222.31, y: 606.95))
        bezier3Path.addCurve(to: CGPoint(x: 212, y: 607), controlPoint1: CGPoint(x: 219.87, y: 613.96), controlPoint2: CGPoint(x: 212, y: 612.64))
        bezier3Path.addCurve(to: CGPoint(x: 212, y: 480.93), controlPoint1: CGPoint(x: 212, y: 568.56), controlPoint2: CGPoint(x: 212, y: 535.91))
        bezier3Path.addCurve(to: CGPoint(x: 212, y: 431.41), controlPoint1: CGPoint(x: 212, y: 454.27), controlPoint2: CGPoint(x: 212, y: 443.24))
        bezier3Path.addCurve(to: CGPoint(x: 214.8, y: 426.92), controlPoint1: CGPoint(x: 212, y: 429.51), controlPoint2: CGPoint(x: 213.09, y: 427.76))
        bezier3Path.addCurve(to: CGPoint(x: 240, y: 386.5), controlPoint1: CGPoint(x: 230.1, y: 419.41), controlPoint2: CGPoint(x: 240, y: 403.85))
        bezier3Path.addCurve(to: CGPoint(x: 210.61, y: 344.28), controlPoint1: CGPoint(x: 240, y: 367.51), controlPoint2: CGPoint(x: 228.13, y: 350.76))
        bezier3Path.addCurve(to: CGPoint(x: 195, y: 341.5), controlPoint1: CGPoint(x: 205.66, y: 342.45), controlPoint2: CGPoint(x: 200.4, y: 341.5))
        bezier3Path.addCurve(to: CGPoint(x: 150, y: 386.5), controlPoint1: CGPoint(x: 170.15, y: 341.5), controlPoint2: CGPoint(x: 150, y: 361.65))
        bezier3Path.addCurve(to: CGPoint(x: 181.5, y: 429.44), controlPoint1: CGPoint(x: 150, y: 406.3), controlPoint2: CGPoint(x: 162.9, y: 423.6))
        bezier3Path.addCurve(to: CGPoint(x: 185, y: 434.21), controlPoint1: CGPoint(x: 183.58, y: 430.1), controlPoint2: CGPoint(x: 185, y: 432.03))
        bezier3Path.addCurve(to: CGPoint(x: 185, y: 577.5), controlPoint1: CGPoint(x: 185, y: 463.86), controlPoint2: CGPoint(x: 185, y: 506.16))
        bezier3Path.addCurve(to: CGPoint(x: 185, y: 607), controlPoint1: CGPoint(x: 185, y: 592.31), controlPoint2: CGPoint(x: 185, y: 592.31))
        bezier3Path.addCurve(to: CGPoint(x: 175.39, y: 608.94), controlPoint1: CGPoint(x: 185, y: 612.45), controlPoint2: CGPoint(x: 177.51, y: 613.97))
        bezier3Path.addCurve(to: CGPoint(x: 157.75, y: 574.25), controlPoint1: CGPoint(x: 169.9, y: 595.92), controlPoint2: CGPoint(x: 164.21, y: 584.87))
        bezier3Path.addCurve(to: CGPoint(x: 140.55, y: 548.53), controlPoint1: CGPoint(x: 153.11, y: 566.63), controlPoint2: CGPoint(x: 152.03, y: 565.04))
        bezier3Path.addCurve(to: CGPoint(x: 125.66, y: 525.49), controlPoint1: CGPoint(x: 133.91, y: 538.99), controlPoint2: CGPoint(x: 129.85, y: 532.77))
        bezier3Path.addLine(to: CGPoint(x: 130.37, y: 527.99))
        bezier3Path.addCurve(to: CGPoint(x: 128.85, y: 528.17), controlPoint1: CGPoint(x: 130.17, y: 528), controlPoint2: CGPoint(x: 129.65, y: 528.06))
        bezier3Path.addCurve(to: CGPoint(x: 123.81, y: 529.05), controlPoint1: CGPoint(x: 127.44, y: 528.36), controlPoint2: CGPoint(x: 125.76, y: 528.65))
        bezier3Path.addCurve(to: CGPoint(x: 104.05, y: 534.71), controlPoint1: CGPoint(x: 118.15, y: 530.22), controlPoint2: CGPoint(x: 111.54, y: 532.06))
        bezier3Path.addCurve(to: CGPoint(x: 31.93, y: 574.06), controlPoint1: CGPoint(x: 82.46, y: 542.37), controlPoint2: CGPoint(x: 58.23, y: 555.08))
        bezier3Path.addCurve(to: CGPoint(x: 24, y: 570), controlPoint1: CGPoint(x: 28.62, y: 576.44), controlPoint2: CGPoint(x: 24, y: 574.08))
        bezier3Path.addCurve(to: CGPoint(x: 24, y: 530.79), controlPoint1: CGPoint(x: 24, y: 554.53), controlPoint2: CGPoint(x: 24, y: 554.53))
        bezier3Path.addCurve(to: CGPoint(x: 24, y: 500.68), controlPoint1: CGPoint(x: 24, y: 514.37), controlPoint2: CGPoint(x: 24, y: 514.37))
        bezier3Path.addCurve(to: CGPoint(x: 24, y: 490.76), controlPoint1: CGPoint(x: 24, y: 494.87), controlPoint2: CGPoint(x: 24, y: 494.87))
        bezier3Path.addCurve(to: CGPoint(x: 24, y: 487), controlPoint1: CGPoint(x: 24, y: 487.68), controlPoint2: CGPoint(x: 24, y: 487.68))
        bezier3Path.addCurve(to: CGPoint(x: 25.2, y: 483.75), controlPoint1: CGPoint(x: 24, y: 485.81), controlPoint2: CGPoint(x: 24.43, y: 484.65))
        bezier3Path.addLine(to: CGPoint(x: 73.2, y: 427.75))
        bezier3Path.addLine(to: CGPoint(x: 72.1, y: 432))
        bezier3Path.addCurve(to: CGPoint(x: 67.63, y: 273.82), controlPoint1: CGPoint(x: 60.29, y: 373.85), controlPoint2: CGPoint(x: 59.24, y: 321.2))
        bezier3Path.addCurve(to: CGPoint(x: 108.02, y: 166.26), controlPoint1: CGPoint(x: 74.81, y: 233.24), controlPoint2: CGPoint(x: 88.73, y: 197.46))
        bezier3Path.addCurve(to: CGPoint(x: 130.93, y: 134.35), controlPoint1: CGPoint(x: 115.07, y: 154.86), controlPoint2: CGPoint(x: 122.74, y: 144.23))
        bezier3Path.addCurve(to: CGPoint(x: 174.03, y: 92.72), controlPoint1: CGPoint(x: 144.79, y: 117.63), controlPoint2: CGPoint(x: 159.46, y: 103.82))
        bezier3Path.addCurve(to: CGPoint(x: 188.14, y: 82.86), controlPoint1: CGPoint(x: 179.14, y: 88.83), controlPoint2: CGPoint(x: 183.88, y: 85.55))
        bezier3Path.addCurve(to: CGPoint(x: 193.65, y: 79.59), controlPoint1: CGPoint(x: 190.73, y: 81.23), controlPoint2: CGPoint(x: 192.6, y: 80.14))
        bezier3Path.addCurve(to: CGPoint(x: 198.42, y: 79.62), controlPoint1: CGPoint(x: 195.14, y: 78.79), controlPoint2: CGPoint(x: 196.94, y: 78.81))
        bezier3Path.addLine(to: CGPoint(x: 198.42, y: 79.62))
        bezier3Path.addLine(to: CGPoint(x: 196, y: 84))
        bezier3Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 198.5, y: 79), end: CGPoint(x: 198.5, y: 612.01), options: [])
        context.restoreGState()

        ////// Bezier 3 Inner Shadow
        context.saveGState()
        context.clip(to: bezier3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier3OpaqueShadow.setFill()
        bezier3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 198.42, y: 79.62))
        bezier4Path.addCurve(to: CGPoint(x: 193.59, y: 88.38), controlPoint1: CGPoint(x: 204.26, y: 82.85), controlPoint2: CGPoint(x: 199.42, y: 91.6))
        bezier4Path.addLine(to: CGPoint(x: 193.58, y: 88.38))
        bezier4Path.addLine(to: CGPoint(x: 196, y: 84))
        bezier4Path.addLine(to: CGPoint(x: 198.35, y: 88.41))
        bezier4Path.addCurve(to: CGPoint(x: 197.15, y: 89.09), controlPoint1: CGPoint(x: 198.17, y: 88.51), controlPoint2: CGPoint(x: 197.76, y: 88.74))
        bezier4Path.addCurve(to: CGPoint(x: 193.48, y: 91.32), controlPoint1: CGPoint(x: 196.1, y: 89.7), controlPoint2: CGPoint(x: 194.87, y: 90.44))
        bezier4Path.addCurve(to: CGPoint(x: 180.09, y: 100.68), controlPoint1: CGPoint(x: 189.46, y: 93.85), controlPoint2: CGPoint(x: 184.96, y: 96.97))
        bezier4Path.addCurve(to: CGPoint(x: 138.63, y: 140.73), controlPoint1: CGPoint(x: 166.1, y: 111.33), controlPoint2: CGPoint(x: 151.98, y: 124.63))
        bezier4Path.addCurve(to: CGPoint(x: 116.53, y: 171.51), controlPoint1: CGPoint(x: 130.73, y: 150.26), controlPoint2: CGPoint(x: 123.33, y: 160.51))
        bezier4Path.addCurve(to: CGPoint(x: 77.48, y: 275.56), controlPoint1: CGPoint(x: 97.89, y: 201.66), controlPoint2: CGPoint(x: 84.44, y: 236.25))
        bezier4Path.addCurve(to: CGPoint(x: 81.9, y: 430), controlPoint1: CGPoint(x: 69.31, y: 321.68), controlPoint2: CGPoint(x: 70.34, y: 373.07))
        bezier4Path.addCurve(to: CGPoint(x: 80.8, y: 434.25), controlPoint1: CGPoint(x: 82.21, y: 431.52), controlPoint2: CGPoint(x: 81.8, y: 433.08))
        bezier4Path.addLine(to: CGPoint(x: 32.8, y: 490.25))
        bezier4Path.addLine(to: CGPoint(x: 34, y: 487))
        bezier4Path.addCurve(to: CGPoint(x: 34, y: 490.76), controlPoint1: CGPoint(x: 34, y: 487.68), controlPoint2: CGPoint(x: 34, y: 487.68))
        bezier4Path.addCurve(to: CGPoint(x: 34, y: 500.68), controlPoint1: CGPoint(x: 34, y: 494.87), controlPoint2: CGPoint(x: 34, y: 494.87))
        bezier4Path.addCurve(to: CGPoint(x: 34, y: 530.79), controlPoint1: CGPoint(x: 34, y: 514.37), controlPoint2: CGPoint(x: 34, y: 514.37))
        bezier4Path.addCurve(to: CGPoint(x: 34, y: 570), controlPoint1: CGPoint(x: 34, y: 554.53), controlPoint2: CGPoint(x: 34, y: 554.53))
        bezier4Path.addLine(to: CGPoint(x: 26.07, y: 565.94))
        bezier4Path.addCurve(to: CGPoint(x: 100.7, y: 525.29), controlPoint1: CGPoint(x: 53.15, y: 546.42), controlPoint2: CGPoint(x: 78.22, y: 533.26))
        bezier4Path.addCurve(to: CGPoint(x: 121.79, y: 519.26), controlPoint1: CGPoint(x: 108.63, y: 522.48), controlPoint2: CGPoint(x: 115.69, y: 520.52))
        bezier4Path.addCurve(to: CGPoint(x: 127.48, y: 518.26), controlPoint1: CGPoint(x: 123.95, y: 518.81), controlPoint2: CGPoint(x: 125.85, y: 518.49))
        bezier4Path.addCurve(to: CGPoint(x: 129.63, y: 518.01), controlPoint1: CGPoint(x: 128.49, y: 518.12), controlPoint2: CGPoint(x: 129.21, y: 518.05))
        bezier4Path.addCurve(to: CGPoint(x: 134.34, y: 520.51), controlPoint1: CGPoint(x: 131.55, y: 517.87), controlPoint2: CGPoint(x: 133.38, y: 518.84))
        bezier4Path.addCurve(to: CGPoint(x: 148.76, y: 542.82), controlPoint1: CGPoint(x: 138.34, y: 527.49), controlPoint2: CGPoint(x: 142.27, y: 533.5))
        bezier4Path.addCurve(to: CGPoint(x: 166.29, y: 569.05), controlPoint1: CGPoint(x: 160.39, y: 559.54), controlPoint2: CGPoint(x: 161.5, y: 561.18))
        bezier4Path.addCurve(to: CGPoint(x: 184.61, y: 605.06), controlPoint1: CGPoint(x: 173.01, y: 580.08), controlPoint2: CGPoint(x: 178.92, y: 591.58))
        bezier4Path.addLine(to: CGPoint(x: 175, y: 607))
        bezier4Path.addCurve(to: CGPoint(x: 175, y: 577.5), controlPoint1: CGPoint(x: 175, y: 592.31), controlPoint2: CGPoint(x: 175, y: 592.31))
        bezier4Path.addCurve(to: CGPoint(x: 175, y: 434.21), controlPoint1: CGPoint(x: 175, y: 506.16), controlPoint2: CGPoint(x: 175, y: 463.86))
        bezier4Path.addLine(to: CGPoint(x: 178.5, y: 438.98))
        bezier4Path.addCurve(to: CGPoint(x: 140, y: 386.5), controlPoint1: CGPoint(x: 155.77, y: 431.84), controlPoint2: CGPoint(x: 140, y: 410.7))
        bezier4Path.addCurve(to: CGPoint(x: 195, y: 331.5), controlPoint1: CGPoint(x: 140, y: 356.12), controlPoint2: CGPoint(x: 164.62, y: 331.5))
        bezier4Path.addCurve(to: CGPoint(x: 214.08, y: 334.9), controlPoint1: CGPoint(x: 201.59, y: 331.5), controlPoint2: CGPoint(x: 208.03, y: 332.66))
        bezier4Path.addCurve(to: CGPoint(x: 250, y: 386.5), controlPoint1: CGPoint(x: 235.49, y: 342.82), controlPoint2: CGPoint(x: 250, y: 363.29))
        bezier4Path.addCurve(to: CGPoint(x: 219.2, y: 435.9), controlPoint1: CGPoint(x: 250, y: 407.7), controlPoint2: CGPoint(x: 237.9, y: 426.73))
        bezier4Path.addLine(to: CGPoint(x: 222, y: 431.41))
        bezier4Path.addCurve(to: CGPoint(x: 222, y: 480.93), controlPoint1: CGPoint(x: 222, y: 443.24), controlPoint2: CGPoint(x: 222, y: 454.27))
        bezier4Path.addCurve(to: CGPoint(x: 222, y: 607), controlPoint1: CGPoint(x: 222, y: 535.91), controlPoint2: CGPoint(x: 222, y: 568.56))
        bezier4Path.addLine(to: CGPoint(x: 212.28, y: 605.36))
        bezier4Path.addCurve(to: CGPoint(x: 237.13, y: 562.56), controlPoint1: CGPoint(x: 213.24, y: 602.58), controlPoint2: CGPoint(x: 221.8, y: 587.99))
        bezier4Path.addCurve(to: CGPoint(x: 237.69, y: 561.63), controlPoint1: CGPoint(x: 237.41, y: 562.09), controlPoint2: CGPoint(x: 237.41, y: 562.09))
        bezier4Path.addCurve(to: CGPoint(x: 254.91, y: 533.22), controlPoint1: CGPoint(x: 243.17, y: 552.54), controlPoint2: CGPoint(x: 249.04, y: 542.86))
        bezier4Path.addCurve(to: CGPoint(x: 260.58, y: 523.91), controlPoint1: CGPoint(x: 256.96, y: 529.85), controlPoint2: CGPoint(x: 258.87, y: 526.72))
        bezier4Path.addCurve(to: CGPoint(x: 262.17, y: 521.31), controlPoint1: CGPoint(x: 261.18, y: 522.93), controlPoint2: CGPoint(x: 261.71, y: 522.06))
        bezier4Path.addCurve(to: CGPoint(x: 262.59, y: 520.63), controlPoint1: CGPoint(x: 262.43, y: 520.9), controlPoint2: CGPoint(x: 262.43, y: 520.9))
        bezier4Path.addCurve(to: CGPoint(x: 262.73, y: 520.39), controlPoint1: CGPoint(x: 262.71, y: 520.43), controlPoint2: CGPoint(x: 262.71, y: 520.43))
        bezier4Path.addCurve(to: CGPoint(x: 268.16, y: 518.14), controlPoint1: CGPoint(x: 263.87, y: 518.54), controlPoint2: CGPoint(x: 266.06, y: 517.63))
        bezier4Path.addCurve(to: CGPoint(x: 268.52, y: 518.22), controlPoint1: CGPoint(x: 268.23, y: 518.15), controlPoint2: CGPoint(x: 268.35, y: 518.18))
        bezier4Path.addCurve(to: CGPoint(x: 269.51, y: 518.47), controlPoint1: CGPoint(x: 268.8, y: 518.29), controlPoint2: CGPoint(x: 269.13, y: 518.38))
        bezier4Path.addCurve(to: CGPoint(x: 273.2, y: 519.44), controlPoint1: CGPoint(x: 270.58, y: 518.74), controlPoint2: CGPoint(x: 271.81, y: 519.06))
        bezier4Path.addCurve(to: CGPoint(x: 286.3, y: 523.22), controlPoint1: CGPoint(x: 277.16, y: 520.5), controlPoint2: CGPoint(x: 281.56, y: 521.76))
        bezier4Path.addCurve(to: CGPoint(x: 326.09, y: 537.9), controlPoint1: CGPoint(x: 299.85, y: 527.38), controlPoint2: CGPoint(x: 313.41, y: 532.28))
        bezier4Path.addCurve(to: CGPoint(x: 371.54, y: 566.46), controlPoint1: CGPoint(x: 345.46, y: 546.49), controlPoint2: CGPoint(x: 361.04, y: 555.97))
        bezier4Path.addLine(to: CGPoint(x: 363, y: 570))
        bezier4Path.addCurve(to: CGPoint(x: 363, y: 529.95), controlPoint1: CGPoint(x: 363, y: 555.06), controlPoint2: CGPoint(x: 363, y: 555.06))
        bezier4Path.addCurve(to: CGPoint(x: 363, y: 500.42), controlPoint1: CGPoint(x: 363, y: 513.85), controlPoint2: CGPoint(x: 363, y: 513.85))
        bezier4Path.addCurve(to: CGPoint(x: 363, y: 490.69), controlPoint1: CGPoint(x: 363, y: 494.72), controlPoint2: CGPoint(x: 363, y: 494.72))
        bezier4Path.addCurve(to: CGPoint(x: 363, y: 487), controlPoint1: CGPoint(x: 363, y: 487.67), controlPoint2: CGPoint(x: 363, y: 487.67))
        bezier4Path.addLine(to: CGPoint(x: 364.46, y: 490.54))
        bezier4Path.addLine(to: CGPoint(x: 308.46, y: 434.54))
        bezier4Path.addCurve(to: CGPoint(x: 307.14, y: 429.83), controlPoint1: CGPoint(x: 307.23, y: 433.31), controlPoint2: CGPoint(x: 306.73, y: 431.52))
        bezier4Path.addCurve(to: CGPoint(x: 309.55, y: 419.3), controlPoint1: CGPoint(x: 307.98, y: 426.3), controlPoint2: CGPoint(x: 308.79, y: 422.79))
        bezier4Path.addCurve(to: CGPoint(x: 313.2, y: 266.65), controlPoint1: CGPoint(x: 321.72, y: 363.22), controlPoint2: CGPoint(x: 322.42, y: 312.42))
        bezier4Path.addCurve(to: CGPoint(x: 270.78, y: 164.18), controlPoint1: CGPoint(x: 305.42, y: 228), controlPoint2: CGPoint(x: 290.77, y: 193.92))
        bezier4Path.addCurve(to: CGPoint(x: 218.71, y: 106.36), controlPoint1: CGPoint(x: 255.23, y: 141.05), controlPoint2: CGPoint(x: 237.37, y: 121.84))
        bezier4Path.addCurve(to: CGPoint(x: 200.47, y: 92.68), controlPoint1: CGPoint(x: 212.19, y: 100.95), controlPoint2: CGPoint(x: 206.05, y: 96.4))
        bezier4Path.addCurve(to: CGPoint(x: 195.32, y: 89.4), controlPoint1: CGPoint(x: 198.53, y: 91.39), controlPoint2: CGPoint(x: 196.81, y: 90.3))
        bezier4Path.addCurve(to: CGPoint(x: 193.99, y: 88.61), controlPoint1: CGPoint(x: 194.81, y: 89.09), controlPoint2: CGPoint(x: 194.37, y: 88.83))
        bezier4Path.addCurve(to: CGPoint(x: 193.67, y: 88.43), controlPoint1: CGPoint(x: 193.87, y: 88.54), controlPoint2: CGPoint(x: 193.76, y: 88.48))
        bezier4Path.addCurve(to: CGPoint(x: 193.6, y: 88.39), controlPoint1: CGPoint(x: 193.63, y: 88.4), controlPoint2: CGPoint(x: 193.63, y: 88.4))
        bezier4Path.addCurve(to: CGPoint(x: 193.59, y: 88.38), controlPoint1: CGPoint(x: 193.59, y: 88.38), controlPoint2: CGPoint(x: 193.59, y: 88.38))
        bezier4Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier4Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier4Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier4Path.addLine(to: CGPoint(x: 193.59, y: 88.38))
        bezier4Path.addLine(to: CGPoint(x: 198.42, y: 79.62))
        bezier4Path.close()
        context.saveGState()
        bezier4Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 198.81, y: 79.62), end: CGPoint(x: 198.81, y: 607), options: [])
        context.restoreGState()

        ////// Bezier 4 Inner Shadow
        context.saveGState()
        context.clip(to: bezier4Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier4OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier4OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier4OpaqueShadow.setFill()
        bezier4Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole33(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 204.94, y: 294.05))
        bezierPath.addCurve(to: CGPoint(x: 199.4, y: 298.07), controlPoint1: CGPoint(x: 203.88, y: 294.82), controlPoint2: CGPoint(x: 203.88, y: 294.82))
        bezierPath.addCurve(to: CGPoint(x: 186.17, y: 307.68), controlPoint1: CGPoint(x: 193.65, y: 302.25), controlPoint2: CGPoint(x: 193.65, y: 302.25))
        bezierPath.addCurve(to: CGPoint(x: 177.83, y: 313.74), controlPoint1: CGPoint(x: 182.06, y: 310.67), controlPoint2: CGPoint(x: 182.06, y: 310.67))
        bezierPath.addCurve(to: CGPoint(x: 159.2, y: 327.28), controlPoint1: CGPoint(x: 167.67, y: 321.12), controlPoint2: CGPoint(x: 167.67, y: 321.12))
        bezierPath.addCurve(to: CGPoint(x: 153.06, y: 331.74), controlPoint1: CGPoint(x: 155.6, y: 329.89), controlPoint2: CGPoint(x: 155.6, y: 329.89))
        bezierPath.addCurve(to: CGPoint(x: 150.73, y: 333.43), controlPoint1: CGPoint(x: 151.15, y: 333.12), controlPoint2: CGPoint(x: 151.15, y: 333.12))
        bezierPath.addLine(to: CGPoint(x: 152.55, y: 327.84))
        bezierPath.addLine(to: CGPoint(x: 173.25, y: 391.57))
        bezierPath.addLine(to: CGPoint(x: 168.5, y: 388.11))
        bezierPath.addLine(to: CGPoint(x: 235.5, y: 388.11))
        bezierPath.addLine(to: CGPoint(x: 230.75, y: 391.57))
        bezierPath.addLine(to: CGPoint(x: 251.45, y: 327.84))
        bezierPath.addLine(to: CGPoint(x: 253.27, y: 333.43))
        bezierPath.addLine(to: CGPoint(x: 199.06, y: 294.05))
        bezierPath.addLine(to: CGPoint(x: 204.94, y: 294.05))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 202, y: 294.05), end: CGPoint(x: 202, y: 391.57), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 202, y: 433, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 200, y: 220, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 199.06, y: 285.95))
        bezier2Path.addCurve(to: CGPoint(x: 204.94, y: 285.95), controlPoint1: CGPoint(x: 200.81, y: 284.68), controlPoint2: CGPoint(x: 203.19, y: 284.68))
        bezier2Path.addLine(to: CGPoint(x: 259.15, y: 325.34))
        bezier2Path.addCurve(to: CGPoint(x: 260.97, y: 330.93), controlPoint1: CGPoint(x: 260.9, y: 326.61), controlPoint2: CGPoint(x: 261.63, y: 328.87))
        bezier2Path.addLine(to: CGPoint(x: 240.26, y: 394.66))
        bezier2Path.addCurve(to: CGPoint(x: 235.5, y: 398.11), controlPoint1: CGPoint(x: 239.59, y: 396.72), controlPoint2: CGPoint(x: 237.67, y: 398.11))
        bezier2Path.addLine(to: CGPoint(x: 168.5, y: 398.11))
        bezier2Path.addCurve(to: CGPoint(x: 163.74, y: 394.66), controlPoint1: CGPoint(x: 166.33, y: 398.11), controlPoint2: CGPoint(x: 164.41, y: 396.72))
        bezier2Path.addLine(to: CGPoint(x: 143.03, y: 330.93))
        bezier2Path.addCurve(to: CGPoint(x: 144.85, y: 325.34), controlPoint1: CGPoint(x: 142.37, y: 328.87), controlPoint2: CGPoint(x: 143.1, y: 326.61))
        bezier2Path.addCurve(to: CGPoint(x: 147.18, y: 323.65), controlPoint1: CGPoint(x: 145.27, y: 325.03), controlPoint2: CGPoint(x: 145.27, y: 325.03))
        bezier2Path.addCurve(to: CGPoint(x: 153.32, y: 319.19), controlPoint1: CGPoint(x: 149.72, y: 321.8), controlPoint2: CGPoint(x: 149.72, y: 321.8))
        bezier2Path.addCurve(to: CGPoint(x: 171.96, y: 305.65), controlPoint1: CGPoint(x: 161.79, y: 313.03), controlPoint2: CGPoint(x: 161.79, y: 313.03))
        bezier2Path.addCurve(to: CGPoint(x: 180.29, y: 299.59), controlPoint1: CGPoint(x: 176.18, y: 302.58), controlPoint2: CGPoint(x: 176.18, y: 302.58))
        bezier2Path.addCurve(to: CGPoint(x: 193.53, y: 289.98), controlPoint1: CGPoint(x: 187.77, y: 294.16), controlPoint2: CGPoint(x: 187.77, y: 294.16))
        bezier2Path.addCurve(to: CGPoint(x: 199.06, y: 285.95), controlPoint1: CGPoint(x: 198, y: 286.73), controlPoint2: CGPoint(x: 198, y: 286.73))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 202, y: 285), end: CGPoint(x: 202, y: 398.11), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 197.88, y: 160.83))
        bezier3Path.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezier3Path.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezier3Path.addLine(to: CGPoint(x: 206.13, y: 155.18))
        bezier3Path.addCurve(to: CGPoint(x: 206.13, y: 155.18), controlPoint1: CGPoint(x: 206.13, y: 155.18), controlPoint2: CGPoint(x: 206.13, y: 155.18))
        bezier3Path.addCurve(to: CGPoint(x: 206.14, y: 155.19), controlPoint1: CGPoint(x: 206.13, y: 155.18), controlPoint2: CGPoint(x: 206.13, y: 155.18))
        bezier3Path.addCurve(to: CGPoint(x: 206.17, y: 155.24), controlPoint1: CGPoint(x: 206.15, y: 155.21), controlPoint2: CGPoint(x: 206.15, y: 155.21))
        bezier3Path.addCurve(to: CGPoint(x: 206.32, y: 155.45), controlPoint1: CGPoint(x: 206.23, y: 155.33), controlPoint2: CGPoint(x: 206.23, y: 155.33))
        bezier3Path.addCurve(to: CGPoint(x: 206.87, y: 156.27), controlPoint1: CGPoint(x: 206.54, y: 155.77), controlPoint2: CGPoint(x: 206.54, y: 155.77))
        bezier3Path.addCurve(to: CGPoint(x: 208.99, y: 159.35), controlPoint1: CGPoint(x: 207.72, y: 157.5), controlPoint2: CGPoint(x: 207.72, y: 157.5))
        bezier3Path.addCurve(to: CGPoint(x: 216.54, y: 170.37), controlPoint1: CGPoint(x: 212.11, y: 163.91), controlPoint2: CGPoint(x: 212.11, y: 163.91))
        bezier3Path.addCurve(to: CGPoint(x: 239.45, y: 203.8), controlPoint1: CGPoint(x: 226.95, y: 185.57), controlPoint2: CGPoint(x: 226.95, y: 185.57))
        bezier3Path.addCurve(to: CGPoint(x: 262.36, y: 237.23), controlPoint1: CGPoint(x: 251.95, y: 222.04), controlPoint2: CGPoint(x: 251.95, y: 222.04))
        bezier3Path.addCurve(to: CGPoint(x: 269.92, y: 248.25), controlPoint1: CGPoint(x: 266.79, y: 243.69), controlPoint2: CGPoint(x: 266.79, y: 243.69))
        bezier3Path.addCurve(to: CGPoint(x: 272.78, y: 252.43), controlPoint1: CGPoint(x: 272.26, y: 251.67), controlPoint2: CGPoint(x: 272.26, y: 251.67))
        bezier3Path.addLine(to: CGPoint(x: 270.07, y: 250.46))
        bezier3Path.addLine(to: CGPoint(x: 383.16, y: 283.8))
        bezier3Path.addCurve(to: CGPoint(x: 385.71, y: 291.64), controlPoint1: CGPoint(x: 386.53, y: 284.79), controlPoint2: CGPoint(x: 387.85, y: 288.86))
        bezier3Path.addLine(to: CGPoint(x: 313.81, y: 385.09))
        bezier3Path.addLine(to: CGPoint(x: 314.85, y: 381.91))
        bezier3Path.addLine(to: CGPoint(x: 318.09, y: 499.77))
        bezier3Path.addCurve(to: CGPoint(x: 311.42, y: 504.62), controlPoint1: CGPoint(x: 318.19, y: 503.28), controlPoint2: CGPoint(x: 314.73, y: 505.79))
        bezier3Path.addLine(to: CGPoint(x: 200.32, y: 465.11))
        bezier3Path.addLine(to: CGPoint(x: 203.68, y: 465.11))
        bezier3Path.addLine(to: CGPoint(x: 92.58, y: 504.62))
        bezier3Path.addCurve(to: CGPoint(x: 85.91, y: 499.77), controlPoint1: CGPoint(x: 89.27, y: 505.79), controlPoint2: CGPoint(x: 85.81, y: 503.28))
        bezier3Path.addLine(to: CGPoint(x: 89.15, y: 381.91))
        bezier3Path.addLine(to: CGPoint(x: 90.19, y: 385.09))
        bezier3Path.addLine(to: CGPoint(x: 18.29, y: 291.64))
        bezier3Path.addCurve(to: CGPoint(x: 20.84, y: 283.8), controlPoint1: CGPoint(x: 16.15, y: 288.86), controlPoint2: CGPoint(x: 17.47, y: 284.79))
        bezier3Path.addLine(to: CGPoint(x: 133.93, y: 250.46))
        bezier3Path.addLine(to: CGPoint(x: 131.22, y: 252.43))
        bezier3Path.addLine(to: CGPoint(x: 197.88, y: 155.17))
        bezier3Path.addCurve(to: CGPoint(x: 206.12, y: 155.17), controlPoint1: CGPoint(x: 199.86, y: 152.28), controlPoint2: CGPoint(x: 204.14, y: 152.28))
        bezier3Path.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezier3Path.addLine(to: CGPoint(x: 202, y: 158))
        bezier3Path.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 202, y: 153), end: CGPoint(x: 202, y: 504.91), options: [])
        context.restoreGState()

        ////// Bezier 3 Inner Shadow
        context.saveGState()
        context.clip(to: bezier3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier3OpaqueShadow.setFill()
        bezier3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 206.13, y: 155.17))
        bezier4Path.addCurve(to: CGPoint(x: 197.88, y: 160.83), controlPoint1: CGPoint(x: 209.89, y: 160.67), controlPoint2: CGPoint(x: 201.65, y: 166.33))
        bezier4Path.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezier4Path.addLine(to: CGPoint(x: 202, y: 158))
        bezier4Path.addLine(to: CGPoint(x: 206.12, y: 160.83))
        bezier4Path.addLine(to: CGPoint(x: 139.47, y: 258.08))
        bezier4Path.addCurve(to: CGPoint(x: 136.76, y: 260.05), controlPoint1: CGPoint(x: 138.82, y: 259.03), controlPoint2: CGPoint(x: 137.86, y: 259.73))
        bezier4Path.addLine(to: CGPoint(x: 23.66, y: 293.39))
        bezier4Path.addLine(to: CGPoint(x: 26.21, y: 285.55))
        bezier4Path.addLine(to: CGPoint(x: 98.11, y: 378.99))
        bezier4Path.addCurve(to: CGPoint(x: 99.15, y: 382.18), controlPoint1: CGPoint(x: 98.81, y: 379.9), controlPoint2: CGPoint(x: 99.18, y: 381.03))
        bezier4Path.addLine(to: CGPoint(x: 95.91, y: 500.04))
        bezier4Path.addLine(to: CGPoint(x: 89.23, y: 495.19))
        bezier4Path.addLine(to: CGPoint(x: 200.32, y: 455.69))
        bezier4Path.addCurve(to: CGPoint(x: 203.68, y: 455.69), controlPoint1: CGPoint(x: 201.41, y: 455.3), controlPoint2: CGPoint(x: 202.59, y: 455.3))
        bezier4Path.addLine(to: CGPoint(x: 314.77, y: 495.19))
        bezier4Path.addLine(to: CGPoint(x: 308.09, y: 500.04))
        bezier4Path.addLine(to: CGPoint(x: 304.85, y: 382.18))
        bezier4Path.addCurve(to: CGPoint(x: 305.89, y: 378.99), controlPoint1: CGPoint(x: 304.82, y: 381.03), controlPoint2: CGPoint(x: 305.19, y: 379.9))
        bezier4Path.addLine(to: CGPoint(x: 377.79, y: 285.55))
        bezier4Path.addLine(to: CGPoint(x: 380.34, y: 293.39))
        bezier4Path.addLine(to: CGPoint(x: 267.24, y: 260.05))
        bezier4Path.addCurve(to: CGPoint(x: 264.53, y: 258.08), controlPoint1: CGPoint(x: 266.14, y: 259.73), controlPoint2: CGPoint(x: 265.18, y: 259.03))
        bezier4Path.addCurve(to: CGPoint(x: 261.67, y: 253.91), controlPoint1: CGPoint(x: 264.01, y: 257.32), controlPoint2: CGPoint(x: 264.01, y: 257.32))
        bezier4Path.addCurve(to: CGPoint(x: 254.12, y: 242.89), controlPoint1: CGPoint(x: 258.54, y: 249.35), controlPoint2: CGPoint(x: 258.54, y: 249.35))
        bezier4Path.addCurve(to: CGPoint(x: 231.2, y: 209.46), controlPoint1: CGPoint(x: 243.7, y: 227.69), controlPoint2: CGPoint(x: 243.7, y: 227.69))
        bezier4Path.addCurve(to: CGPoint(x: 208.29, y: 176.02), controlPoint1: CGPoint(x: 218.71, y: 191.22), controlPoint2: CGPoint(x: 218.71, y: 191.22))
        bezier4Path.addCurve(to: CGPoint(x: 200.74, y: 165.01), controlPoint1: CGPoint(x: 203.86, y: 169.57), controlPoint2: CGPoint(x: 203.86, y: 169.57))
        bezier4Path.addCurve(to: CGPoint(x: 198.62, y: 161.92), controlPoint1: CGPoint(x: 199.47, y: 163.15), controlPoint2: CGPoint(x: 199.47, y: 163.15))
        bezier4Path.addCurve(to: CGPoint(x: 198.07, y: 161.11), controlPoint1: CGPoint(x: 198.29, y: 161.43), controlPoint2: CGPoint(x: 198.29, y: 161.43))
        bezier4Path.addCurve(to: CGPoint(x: 197.92, y: 160.9), controlPoint1: CGPoint(x: 197.98, y: 160.98), controlPoint2: CGPoint(x: 197.98, y: 160.98))
        bezier4Path.addCurve(to: CGPoint(x: 197.89, y: 160.85), controlPoint1: CGPoint(x: 197.9, y: 160.87), controlPoint2: CGPoint(x: 197.9, y: 160.87))
        bezier4Path.addCurve(to: CGPoint(x: 197.88, y: 160.83), controlPoint1: CGPoint(x: 197.88, y: 160.84), controlPoint2: CGPoint(x: 197.88, y: 160.84))
        bezier4Path.addCurve(to: CGPoint(x: 197.88, y: 160.83), controlPoint1: CGPoint(x: 197.88, y: 160.83), controlPoint2: CGPoint(x: 197.88, y: 160.83))
        bezier4Path.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezier4Path.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezier4Path.addLine(to: CGPoint(x: 197.88, y: 160.83))
        bezier4Path.addLine(to: CGPoint(x: 206.13, y: 155.17))
        bezier4Path.close()
        context.saveGState()
        bezier4Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 202, y: 155.17), end: CGPoint(x: 202, y: 500.04), options: [])
        context.restoreGState()

        ////// Bezier 4 Inner Shadow
        context.saveGState()
        context.clip(to: bezier4Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier4OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier4OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier4OpaqueShadow.setFill()
        bezier4Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole44(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 191.1, y: 137.74))
        bezierPath.addCurve(to: CGPoint(x: 202.48, y: 148.68), controlPoint1: CGPoint(x: 196.28, y: 139.28), controlPoint2: CGPoint(x: 199.9, y: 143.06))
        bezierPath.addCurve(to: CGPoint(x: 206.99, y: 163.66), controlPoint1: CGPoint(x: 204.21, y: 152.46), controlPoint2: CGPoint(x: 205.17, y: 155.87))
        bezierPath.addCurve(to: CGPoint(x: 207.09, y: 164.08), controlPoint1: CGPoint(x: 207.04, y: 163.87), controlPoint2: CGPoint(x: 207.04, y: 163.87))
        bezierPath.addCurve(to: CGPoint(x: 215.35, y: 182.59), controlPoint1: CGPoint(x: 209.9, y: 176.11), controlPoint2: CGPoint(x: 211.83, y: 180.72))
        bezierPath.addCurve(to: CGPoint(x: 240.8, y: 181.43), controlPoint1: CGPoint(x: 219.51, y: 184.8), controlPoint2: CGPoint(x: 225.7, y: 184.36))
        bezierPath.addCurve(to: CGPoint(x: 240.81, y: 181.43), controlPoint1: CGPoint(x: 240.81, y: 181.43), controlPoint2: CGPoint(x: 240.81, y: 181.43))
        bezierPath.addCurve(to: CGPoint(x: 259.08, y: 178.77), controlPoint1: CGPoint(x: 250.18, y: 179.6), controlPoint2: CGPoint(x: 254.26, y: 178.95))
        bezierPath.addCurve(to: CGPoint(x: 275.74, y: 183.18), controlPoint1: CGPoint(x: 266.11, y: 178.49), controlPoint2: CGPoint(x: 271.6, y: 179.72))
        bezierPath.addCurve(to: CGPoint(x: 361, y: 365.5), controlPoint1: CGPoint(x: 329.39, y: 228.03), controlPoint2: CGPoint(x: 361, y: 294.19))
        bezierPath.addCurve(to: CGPoint(x: 354.37, y: 386.73), controlPoint1: CGPoint(x: 361, y: 374.65), controlPoint2: CGPoint(x: 358.81, y: 381.48))
        bezierPath.addCurve(to: CGPoint(x: 339.54, y: 396.91), controlPoint1: CGPoint(x: 350.88, y: 390.85), controlPoint2: CGPoint(x: 346.87, y: 393.4))
        bezierPath.addCurve(to: CGPoint(x: 334.67, y: 399.23), controlPoint1: CGPoint(x: 339.28, y: 397.04), controlPoint2: CGPoint(x: 335.72, y: 398.72))
        bezierPath.addCurve(to: CGPoint(x: 329.89, y: 401.7), controlPoint1: CGPoint(x: 332.84, y: 400.12), controlPoint2: CGPoint(x: 331.32, y: 400.9))
        bezierPath.addCurve(to: CGPoint(x: 308.76, y: 428.52), controlPoint1: CGPoint(x: 319.61, y: 407.44), controlPoint2: CGPoint(x: 313.09, y: 414.92))
        bezierPath.addCurve(to: CGPoint(x: 305.83, y: 466.52), controlPoint1: CGPoint(x: 305.9, y: 437.52), controlPoint2: CGPoint(x: 305.24, y: 448.55))
        bezierPath.addCurve(to: CGPoint(x: 306.09, y: 473.81), controlPoint1: CGPoint(x: 305.89, y: 468.56), controlPoint2: CGPoint(x: 305.96, y: 470.33))
        bezierPath.addCurve(to: CGPoint(x: 306.12, y: 503.43), controlPoint1: CGPoint(x: 306.71, y: 489.57), controlPoint2: CGPoint(x: 306.78, y: 495.95))
        bezierPath.addCurve(to: CGPoint(x: 297.81, y: 526.84), controlPoint1: CGPoint(x: 305.19, y: 513.88), controlPoint2: CGPoint(x: 302.71, y: 521.55))
        bezierPath.addCurve(to: CGPoint(x: 123.57, y: 603), controlPoint1: CGPoint(x: 253.16, y: 575.07), controlPoint2: CGPoint(x: 190.6, y: 603))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 591.52), controlPoint1: CGPoint(x: 98.47, y: 603), controlPoint2: CGPoint(x: 73.88, y: 599.1))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 582.01), controlPoint1: CGPoint(x: 45.85, y: 590.03), controlPoint2: CGPoint(x: 45.85, y: 583.5))
        bezierPath.addCurve(to: CGPoint(x: 207.85, y: 365.5), controlPoint1: CGPoint(x: 143.54, y: 551.9), controlPoint2: CGPoint(x: 207.85, y: 464.9))
        bezierPath.addCurve(to: CGPoint(x: 214.3, y: 354.8), controlPoint1: CGPoint(x: 207.85, y: 360.86), controlPoint2: CGPoint(x: 210.21, y: 357.29))
        bezierPath.addCurve(to: CGPoint(x: 225.64, y: 350.53), controlPoint1: CGPoint(x: 217.04, y: 353.13), controlPoint2: CGPoint(x: 220.22, y: 352))
        bezierPath.addCurve(to: CGPoint(x: 231.25, y: 349.03), controlPoint1: CGPoint(x: 226.44, y: 350.31), controlPoint2: CGPoint(x: 230.21, y: 349.31))
        bezierPath.addCurve(to: CGPoint(x: 236.91, y: 347.35), controlPoint1: CGPoint(x: 233.44, y: 348.43), controlPoint2: CGPoint(x: 235.22, y: 347.91))
        bezierPath.addCurve(to: CGPoint(x: 254.86, y: 335.31), controlPoint1: CGPoint(x: 245.58, y: 344.51), controlPoint2: CGPoint(x: 251.27, y: 340.91))
        bezierPath.addCurve(to: CGPoint(x: 257.12, y: 302.08), controlPoint1: CGPoint(x: 259.44, y: 328.14), controlPoint2: CGPoint(x: 260.51, y: 317.48))
        bezierPath.addCurve(to: CGPoint(x: 227.13, y: 271.65), controlPoint1: CGPoint(x: 252.32, y: 280.31), controlPoint2: CGPoint(x: 242.61, y: 272.22))
        bezierPath.addCurve(to: CGPoint(x: 211.32, y: 272.89), controlPoint1: CGPoint(x: 222.66, y: 271.49), controlPoint2: CGPoint(x: 218.4, y: 271.87))
        bezierPath.addCurve(to: CGPoint(x: 197.58, y: 274.25), controlPoint1: CGPoint(x: 202.5, y: 274.16), controlPoint2: CGPoint(x: 200.87, y: 274.35))
        bezierPath.addCurve(to: CGPoint(x: 185.9, y: 267.86), controlPoint1: CGPoint(x: 192.08, y: 274.09), controlPoint2: CGPoint(x: 187.99, y: 272.25))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 148.99), controlPoint1: CGPoint(x: 159.08, y: 211.48), controlPoint2: CGPoint(x: 109.94, y: 168.23))
        bezierPath.addCurve(to: CGPoint(x: 50.46, y: 139.48), controlPoint1: CGPoint(x: 45.85, y: 147.5), controlPoint2: CGPoint(x: 45.85, y: 140.97))
        bezierPath.addCurve(to: CGPoint(x: 121.84, y: 128.01), controlPoint1: CGPoint(x: 73.34, y: 132.08), controlPoint2: CGPoint(x: 97.33, y: 128.18))
        bezierPath.addCurve(to: CGPoint(x: 123.57, y: 128), controlPoint1: CGPoint(x: 122.42, y: 128), controlPoint2: CGPoint(x: 123, y: 128))
        bezierPath.addCurve(to: CGPoint(x: 191.1, y: 137.74), controlPoint1: CGPoint(x: 146.69, y: 128), controlPoint2: CGPoint(x: 169.36, y: 131.31))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 204, y: 128), end: CGPoint(x: 204, y: 603), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 173, y: 555, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 162, y: 174, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 188.26, y: 147.33))
        bezier2Path.addCurve(to: CGPoint(x: 123.57, y: 138), controlPoint1: CGPoint(x: 167.44, y: 141.17), controlPoint2: CGPoint(x: 145.72, y: 138))
        bezier2Path.addCurve(to: CGPoint(x: 121.91, y: 138.01), controlPoint1: CGPoint(x: 123.02, y: 138), controlPoint2: CGPoint(x: 122.47, y: 138))
        bezier2Path.addCurve(to: CGPoint(x: 53.54, y: 148.99), controlPoint1: CGPoint(x: 98.43, y: 138.17), controlPoint2: CGPoint(x: 75.45, y: 141.9))
        bezier2Path.addLine(to: CGPoint(x: 53.54, y: 139.48))
        bezier2Path.addCurve(to: CGPoint(x: 194.93, y: 263.57), controlPoint1: CGPoint(x: 115.64, y: 159.56), controlPoint2: CGPoint(x: 166.93, y: 204.7))
        bezier2Path.addCurve(to: CGPoint(x: 195.25, y: 263.84), controlPoint1: CGPoint(x: 194.99, y: 263.7), controlPoint2: CGPoint(x: 195.03, y: 263.74))
        bezier2Path.addCurve(to: CGPoint(x: 197.86, y: 264.26), controlPoint1: CGPoint(x: 195.76, y: 264.06), controlPoint2: CGPoint(x: 196.62, y: 264.22))
        bezier2Path.addCurve(to: CGPoint(x: 209.9, y: 262.99), controlPoint1: CGPoint(x: 200.31, y: 264.33), controlPoint2: CGPoint(x: 201.88, y: 264.14))
        bezier2Path.addCurve(to: CGPoint(x: 227.49, y: 261.66), controlPoint1: CGPoint(x: 217.53, y: 261.9), controlPoint2: CGPoint(x: 222.26, y: 261.47))
        bezier2Path.addCurve(to: CGPoint(x: 266.88, y: 299.92), controlPoint1: CGPoint(x: 247.52, y: 262.39), controlPoint2: CGPoint(x: 261.11, y: 273.7))
        bezier2Path.addCurve(to: CGPoint(x: 263.28, y: 340.69), controlPoint1: CGPoint(x: 270.8, y: 317.71), controlPoint2: CGPoint(x: 269.46, y: 331.03))
        bezier2Path.addCurve(to: CGPoint(x: 240.03, y: 356.86), controlPoint1: CGPoint(x: 258.24, y: 348.59), controlPoint2: CGPoint(x: 250.68, y: 353.36))
        bezier2Path.addCurve(to: CGPoint(x: 233.88, y: 358.68), controlPoint1: CGPoint(x: 238.16, y: 357.47), controlPoint2: CGPoint(x: 236.22, y: 358.04))
        bezier2Path.addCurve(to: CGPoint(x: 228.26, y: 360.18), controlPoint1: CGPoint(x: 232.79, y: 358.97), controlPoint2: CGPoint(x: 229.02, y: 359.97))
        bezier2Path.addCurve(to: CGPoint(x: 217.85, y: 365.5), controlPoint1: CGPoint(x: 220.16, y: 362.38), controlPoint2: CGPoint(x: 217.85, y: 363.79))
        bezier2Path.addCurve(to: CGPoint(x: 53.54, y: 591.52), controlPoint1: CGPoint(x: 217.85, y: 469.27), controlPoint2: CGPoint(x: 150.71, y: 560.09))
        bezier2Path.addLine(to: CGPoint(x: 53.54, y: 582.01))
        bezier2Path.addCurve(to: CGPoint(x: 123.57, y: 593), controlPoint1: CGPoint(x: 75.96, y: 589.26), controlPoint2: CGPoint(x: 99.51, y: 593))
        bezier2Path.addCurve(to: CGPoint(x: 290.47, y: 520.04), controlPoint1: CGPoint(x: 187.78, y: 593), controlPoint2: CGPoint(x: 247.69, y: 566.25))
        bezier2Path.addCurve(to: CGPoint(x: 296.16, y: 502.54), controlPoint1: CGPoint(x: 293.56, y: 516.71), controlPoint2: CGPoint(x: 295.41, y: 510.99))
        bezier2Path.addCurve(to: CGPoint(x: 296.1, y: 474.2), controlPoint1: CGPoint(x: 296.77, y: 495.65), controlPoint2: CGPoint(x: 296.7, y: 489.49))
        bezier2Path.addCurve(to: CGPoint(x: 295.83, y: 466.84), controlPoint1: CGPoint(x: 295.97, y: 470.7), controlPoint2: CGPoint(x: 295.9, y: 468.92))
        bezier2Path.addCurve(to: CGPoint(x: 299.24, y: 425.48), controlPoint1: CGPoint(x: 295.21, y: 447.78), controlPoint2: CGPoint(x: 295.92, y: 435.91))
        bezier2Path.addCurve(to: CGPoint(x: 325.01, y: 392.97), controlPoint1: CGPoint(x: 304.37, y: 409.35), controlPoint2: CGPoint(x: 312.6, y: 399.9))
        bezier2Path.addCurve(to: CGPoint(x: 330.31, y: 390.23), controlPoint1: CGPoint(x: 326.64, y: 392.06), controlPoint2: CGPoint(x: 328.31, y: 391.2))
        bezier2Path.addCurve(to: CGPoint(x: 335.23, y: 387.89), controlPoint1: CGPoint(x: 331.41, y: 389.7), controlPoint2: CGPoint(x: 335, y: 388))
        bezier2Path.addCurve(to: CGPoint(x: 346.74, y: 380.27), controlPoint1: CGPoint(x: 341.36, y: 384.95), controlPoint2: CGPoint(x: 344.42, y: 383.01))
        bezier2Path.addCurve(to: CGPoint(x: 351, y: 365.5), controlPoint1: CGPoint(x: 349.54, y: 376.95), controlPoint2: CGPoint(x: 351, y: 372.41))
        bezier2Path.addCurve(to: CGPoint(x: 269.33, y: 190.85), controlPoint1: CGPoint(x: 351, y: 297.19), controlPoint2: CGPoint(x: 320.73, y: 233.82))
        bezier2Path.addCurve(to: CGPoint(x: 242.72, y: 191.24), controlPoint1: CGPoint(x: 265.67, y: 187.8), controlPoint2: CGPoint(x: 259.11, y: 188.05))
        bezier2Path.addCurve(to: CGPoint(x: 242.71, y: 191.24), controlPoint1: CGPoint(x: 242.72, y: 191.24), controlPoint2: CGPoint(x: 242.72, y: 191.24))
        bezier2Path.addCurve(to: CGPoint(x: 226.16, y: 193.81), controlPoint1: CGPoint(x: 234.26, y: 192.89), controlPoint2: CGPoint(x: 230.57, y: 193.5))
        bezier2Path.addCurve(to: CGPoint(x: 210.65, y: 191.41), controlPoint1: CGPoint(x: 219.84, y: 194.25), controlPoint2: CGPoint(x: 214.79, y: 193.61))
        bezier2Path.addCurve(to: CGPoint(x: 201.4, y: 180.21), controlPoint1: CGPoint(x: 206.5, y: 189.2), controlPoint2: CGPoint(x: 203.59, y: 185.43))
        bezier2Path.addCurve(to: CGPoint(x: 197.35, y: 166.36), controlPoint1: CGPoint(x: 199.89, y: 176.61), controlPoint2: CGPoint(x: 198.98, y: 173.34))
        bezier2Path.addCurve(to: CGPoint(x: 197.26, y: 165.93), controlPoint1: CGPoint(x: 197.3, y: 166.14), controlPoint2: CGPoint(x: 197.3, y: 166.14))
        bezier2Path.addCurve(to: CGPoint(x: 188.26, y: 147.33), controlPoint1: CGPoint(x: 194.22, y: 152.95), controlPoint2: CGPoint(x: 192.17, y: 148.49))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 202.27, y: 138), end: CGPoint(x: 202.27, y: 593), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole55(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 205.94, y: 352.55))
        bezier2Path.addCurve(to: CGPoint(x: 201.29, y: 355.92), controlPoint1: CGPoint(x: 205.05, y: 353.19), controlPoint2: CGPoint(x: 205.05, y: 353.19))
        bezier2Path.addCurve(to: CGPoint(x: 190.18, y: 364), controlPoint1: CGPoint(x: 196.45, y: 359.44), controlPoint2: CGPoint(x: 196.45, y: 359.44))
        bezier2Path.addCurve(to: CGPoint(x: 183.35, y: 368.96), controlPoint1: CGPoint(x: 186.81, y: 366.44), controlPoint2: CGPoint(x: 186.81, y: 366.44))
        bezier2Path.addCurve(to: CGPoint(x: 167.82, y: 380.24), controlPoint1: CGPoint(x: 174.88, y: 375.11), controlPoint2: CGPoint(x: 174.88, y: 375.11))
        bezier2Path.addCurve(to: CGPoint(x: 162.7, y: 383.96), controlPoint1: CGPoint(x: 164.82, y: 382.42), controlPoint2: CGPoint(x: 164.82, y: 382.42))
        bezier2Path.addCurve(to: CGPoint(x: 160.76, y: 385.37), controlPoint1: CGPoint(x: 161.12, y: 385.11), controlPoint2: CGPoint(x: 161.12, y: 385.11))
        bezier2Path.addLine(to: CGPoint(x: 162.58, y: 379.78))
        bezier2Path.addLine(to: CGPoint(x: 179.84, y: 432.88))
        bezier2Path.addLine(to: CGPoint(x: 175.08, y: 429.43))
        bezier2Path.addLine(to: CGPoint(x: 230.92, y: 429.43))
        bezier2Path.addLine(to: CGPoint(x: 226.16, y: 432.88))
        bezier2Path.addLine(to: CGPoint(x: 243.42, y: 379.78))
        bezier2Path.addLine(to: CGPoint(x: 245.24, y: 385.37))
        bezier2Path.addLine(to: CGPoint(x: 200.06, y: 352.55))
        bezier2Path.addLine(to: CGPoint(x: 205.94, y: 352.55))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 203, y: 352.55), end: CGPoint(x: 203, y: 432.88), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 294, y: 218, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 97, y: 557, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 200.06, y: 344.45))
        bezierPath.addCurve(to: CGPoint(x: 205.94, y: 344.45), controlPoint1: CGPoint(x: 201.81, y: 343.18), controlPoint2: CGPoint(x: 204.19, y: 343.18))
        bezierPath.addLine(to: CGPoint(x: 251.11, y: 377.28))
        bezierPath.addCurve(to: CGPoint(x: 252.93, y: 382.87), controlPoint1: CGPoint(x: 252.87, y: 378.55), controlPoint2: CGPoint(x: 253.6, y: 380.81))
        bezierPath.addLine(to: CGPoint(x: 235.68, y: 435.97))
        bezierPath.addCurve(to: CGPoint(x: 230.92, y: 439.43), controlPoint1: CGPoint(x: 235.01, y: 438.03), controlPoint2: CGPoint(x: 233.09, y: 439.43))
        bezierPath.addLine(to: CGPoint(x: 175.08, y: 439.43))
        bezierPath.addCurve(to: CGPoint(x: 170.32, y: 435.97), controlPoint1: CGPoint(x: 172.91, y: 439.43), controlPoint2: CGPoint(x: 170.99, y: 438.03))
        bezierPath.addLine(to: CGPoint(x: 153.07, y: 382.87))
        bezierPath.addCurve(to: CGPoint(x: 154.89, y: 377.28), controlPoint1: CGPoint(x: 152.4, y: 380.81), controlPoint2: CGPoint(x: 153.13, y: 378.55))
        bezierPath.addCurve(to: CGPoint(x: 156.83, y: 375.87), controlPoint1: CGPoint(x: 155.24, y: 377.02), controlPoint2: CGPoint(x: 155.24, y: 377.02))
        bezierPath.addCurve(to: CGPoint(x: 161.94, y: 372.15), controlPoint1: CGPoint(x: 158.94, y: 374.33), controlPoint2: CGPoint(x: 158.94, y: 374.33))
        bezierPath.addCurve(to: CGPoint(x: 177.47, y: 360.87), controlPoint1: CGPoint(x: 169, y: 367.02), controlPoint2: CGPoint(x: 169, y: 367.02))
        bezierPath.addCurve(to: CGPoint(x: 184.3, y: 355.91), controlPoint1: CGPoint(x: 180.93, y: 358.35), controlPoint2: CGPoint(x: 180.93, y: 358.35))
        bezierPath.addCurve(to: CGPoint(x: 195.41, y: 347.83), controlPoint1: CGPoint(x: 190.58, y: 351.35), controlPoint2: CGPoint(x: 190.58, y: 351.35))
        bezierPath.addCurve(to: CGPoint(x: 200.06, y: 344.45), controlPoint1: CGPoint(x: 199.17, y: 345.1), controlPoint2: CGPoint(x: 199.17, y: 345.1))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 203, y: 343.5), end: CGPoint(x: 203, y: 439.43), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 103.23, y: 145.33))
        bezier3Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier3Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier3Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier3Path.addCurve(to: CGPoint(x: 108.24, y: 136.68), controlPoint1: CGPoint(x: 108.23, y: 136.67), controlPoint2: CGPoint(x: 108.23, y: 136.67))
        bezier3Path.addCurve(to: CGPoint(x: 108.25, y: 136.68), controlPoint1: CGPoint(x: 108.24, y: 136.68), controlPoint2: CGPoint(x: 108.24, y: 136.68))
        bezier3Path.addCurve(to: CGPoint(x: 108.29, y: 136.7), controlPoint1: CGPoint(x: 108.26, y: 136.69), controlPoint2: CGPoint(x: 108.26, y: 136.69))
        bezier3Path.addCurve(to: CGPoint(x: 108.45, y: 136.8), controlPoint1: CGPoint(x: 108.35, y: 136.74), controlPoint2: CGPoint(x: 108.35, y: 136.74))
        bezier3Path.addCurve(to: CGPoint(x: 109.07, y: 137.16), controlPoint1: CGPoint(x: 108.69, y: 136.94), controlPoint2: CGPoint(x: 108.69, y: 136.94))
        bezier3Path.addCurve(to: CGPoint(x: 111.43, y: 138.52), controlPoint1: CGPoint(x: 110.01, y: 137.7), controlPoint2: CGPoint(x: 110.01, y: 137.7))
        bezier3Path.addCurve(to: CGPoint(x: 119.87, y: 143.41), controlPoint1: CGPoint(x: 114.93, y: 140.54), controlPoint2: CGPoint(x: 114.93, y: 140.54))
        bezier3Path.addCurve(to: CGPoint(x: 145.49, y: 158.22), controlPoint1: CGPoint(x: 131.52, y: 150.14), controlPoint2: CGPoint(x: 131.52, y: 150.14))
        bezier3Path.addCurve(to: CGPoint(x: 171.1, y: 173.03), controlPoint1: CGPoint(x: 159.46, y: 166.3), controlPoint2: CGPoint(x: 159.46, y: 166.3))
        bezier3Path.addCurve(to: CGPoint(x: 179.54, y: 177.91), controlPoint1: CGPoint(x: 176.05, y: 175.89), controlPoint2: CGPoint(x: 176.05, y: 175.89))
        bezier3Path.addCurve(to: CGPoint(x: 182.74, y: 179.76), controlPoint1: CGPoint(x: 182.16, y: 179.43), controlPoint2: CGPoint(x: 182.16, y: 179.43))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 184.09), controlPoint1: CGPoint(x: 184.29, y: 180.66), controlPoint2: CGPoint(x: 185.24, y: 182.31))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 187.8), controlPoint1: CGPoint(x: 185.24, y: 184.77), controlPoint2: CGPoint(x: 185.24, y: 184.77))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 197.56), controlPoint1: CGPoint(x: 185.24, y: 191.84), controlPoint2: CGPoint(x: 185.24, y: 191.84))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 227.18), controlPoint1: CGPoint(x: 185.24, y: 211.03), controlPoint2: CGPoint(x: 185.24, y: 211.03))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 268.55), controlPoint1: CGPoint(x: 185.24, y: 254.07), controlPoint2: CGPoint(x: 185.24, y: 254.07))
        bezier3Path.addLine(to: CGPoint(x: 177.74, y: 264.22))
        bezier3Path.addCurve(to: CGPoint(x: 193.93, y: 254.88), controlPoint1: CGPoint(x: 187.18, y: 258.77), controlPoint2: CGPoint(x: 187.18, y: 258.77))
        bezier3Path.addCurve(to: CGPoint(x: 200.16, y: 251.29), controlPoint1: CGPoint(x: 199.02, y: 251.95), controlPoint2: CGPoint(x: 199.02, y: 251.95))
        bezier3Path.addCurve(to: CGPoint(x: 205.16, y: 251.29), controlPoint1: CGPoint(x: 201.71, y: 250.39), controlPoint2: CGPoint(x: 203.61, y: 250.39))
        bezier3Path.addCurve(to: CGPoint(x: 211.66, y: 255.03), controlPoint1: CGPoint(x: 206.35, y: 251.97), controlPoint2: CGPoint(x: 206.35, y: 251.97))
        bezier3Path.addCurve(to: CGPoint(x: 228.47, y: 264.73), controlPoint1: CGPoint(x: 218.68, y: 259.08), controlPoint2: CGPoint(x: 218.68, y: 259.08))
        bezier3Path.addLine(to: CGPoint(x: 220.97, y: 269.06))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 253.26), controlPoint1: CGPoint(x: 220.97, y: 263.73), controlPoint2: CGPoint(x: 220.97, y: 263.73))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 227.18), controlPoint1: CGPoint(x: 220.97, y: 241.08), controlPoint2: CGPoint(x: 220.97, y: 241.08))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 197.56), controlPoint1: CGPoint(x: 220.97, y: 211.03), controlPoint2: CGPoint(x: 220.97, y: 211.03))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 187.8), controlPoint1: CGPoint(x: 220.97, y: 191.84), controlPoint2: CGPoint(x: 220.97, y: 191.84))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 184.09), controlPoint1: CGPoint(x: 220.97, y: 184.77), controlPoint2: CGPoint(x: 220.97, y: 184.77))
        bezier3Path.addLine(to: CGPoint(x: 220.97, y: 184.09))
        bezier3Path.addCurve(to: CGPoint(x: 223.47, y: 179.76), controlPoint1: CGPoint(x: 220.97, y: 182.31), controlPoint2: CGPoint(x: 221.92, y: 180.66))
        bezier3Path.addCurve(to: CGPoint(x: 228.06, y: 177.11), controlPoint1: CGPoint(x: 224.32, y: 179.27), controlPoint2: CGPoint(x: 224.32, y: 179.27))
        bezier3Path.addCurve(to: CGPoint(x: 260.73, y: 158.22), controlPoint1: CGPoint(x: 241.23, y: 169.49), controlPoint2: CGPoint(x: 241.23, y: 169.49))
        bezier3Path.addCurve(to: CGPoint(x: 286.34, y: 143.41), controlPoint1: CGPoint(x: 274.7, y: 150.14), controlPoint2: CGPoint(x: 274.7, y: 150.14))
        bezier3Path.addCurve(to: CGPoint(x: 294.78, y: 138.52), controlPoint1: CGPoint(x: 291.29, y: 140.54), controlPoint2: CGPoint(x: 291.29, y: 140.54))
        bezier3Path.addCurve(to: CGPoint(x: 297.98, y: 136.67), controlPoint1: CGPoint(x: 297.4, y: 137.01), controlPoint2: CGPoint(x: 297.4, y: 137.01))
        bezier3Path.addCurve(to: CGPoint(x: 302.99, y: 136.67), controlPoint1: CGPoint(x: 299.53, y: 135.78), controlPoint2: CGPoint(x: 301.44, y: 135.78))
        bezier3Path.addLine(to: CGPoint(x: 377.5, y: 179.76))
        bezier3Path.addCurve(to: CGPoint(x: 380, y: 184.09), controlPoint1: CGPoint(x: 379.05, y: 180.66), controlPoint2: CGPoint(x: 380, y: 182.31))
        bezier3Path.addLine(to: CGPoint(x: 380, y: 270.28))
        bezier3Path.addCurve(to: CGPoint(x: 377.5, y: 274.61), controlPoint1: CGPoint(x: 380, y: 272.06), controlPoint2: CGPoint(x: 379.05, y: 273.71))
        bezier3Path.addCurve(to: CGPoint(x: 374.3, y: 276.46), controlPoint1: CGPoint(x: 376.92, y: 274.94), controlPoint2: CGPoint(x: 376.92, y: 274.94))
        bezier3Path.addCurve(to: CGPoint(x: 365.86, y: 281.34), controlPoint1: CGPoint(x: 370.81, y: 278.48), controlPoint2: CGPoint(x: 370.81, y: 278.48))
        bezier3Path.addCurve(to: CGPoint(x: 340.25, y: 296.15), controlPoint1: CGPoint(x: 354.22, y: 288.07), controlPoint2: CGPoint(x: 354.22, y: 288.07))
        bezier3Path.addCurve(to: CGPoint(x: 317.85, y: 309.1), controlPoint1: CGPoint(x: 328.33, y: 303.04), controlPoint2: CGPoint(x: 328.33, y: 303.04))
        bezier3Path.addCurve(to: CGPoint(x: 304.14, y: 317.03), controlPoint1: CGPoint(x: 308.83, y: 314.32), controlPoint2: CGPoint(x: 308.83, y: 314.32))
        bezier3Path.addLine(to: CGPoint(x: 304.13, y: 308.37))
        bezier3Path.addCurve(to: CGPoint(x: 320.53, y: 317.83), controlPoint1: CGPoint(x: 313.69, y: 313.89), controlPoint2: CGPoint(x: 313.69, y: 313.89))
        bezier3Path.addCurve(to: CGPoint(x: 326.85, y: 321.48), controlPoint1: CGPoint(x: 325.69, y: 320.81), controlPoint2: CGPoint(x: 325.69, y: 320.81))
        bezier3Path.addCurve(to: CGPoint(x: 329.35, y: 325.81), controlPoint1: CGPoint(x: 328.39, y: 322.37), controlPoint2: CGPoint(x: 329.35, y: 324.02))
        bezier3Path.addLine(to: CGPoint(x: 329.35, y: 466.19))
        bezier3Path.addCurve(to: CGPoint(x: 326.85, y: 470.52), controlPoint1: CGPoint(x: 329.35, y: 467.98), controlPoint2: CGPoint(x: 328.39, y: 469.63))
        bezier3Path.addCurve(to: CGPoint(x: 320.53, y: 474.17), controlPoint1: CGPoint(x: 325.69, y: 471.19), controlPoint2: CGPoint(x: 325.69, y: 471.19))
        bezier3Path.addCurve(to: CGPoint(x: 304.13, y: 483.63), controlPoint1: CGPoint(x: 313.69, y: 478.11), controlPoint2: CGPoint(x: 313.69, y: 478.11))
        bezier3Path.addLine(to: CGPoint(x: 304.14, y: 474.97))
        bezier3Path.addCurve(to: CGPoint(x: 340.25, y: 495.85), controlPoint1: CGPoint(x: 307.96, y: 477.18), controlPoint2: CGPoint(x: 320.97, y: 484.7))
        bezier3Path.addCurve(to: CGPoint(x: 365.86, y: 510.66), controlPoint1: CGPoint(x: 354.22, y: 503.93), controlPoint2: CGPoint(x: 354.22, y: 503.93))
        bezier3Path.addCurve(to: CGPoint(x: 374.3, y: 515.54), controlPoint1: CGPoint(x: 370.81, y: 513.52), controlPoint2: CGPoint(x: 370.81, y: 513.52))
        bezier3Path.addCurve(to: CGPoint(x: 377.5, y: 517.39), controlPoint1: CGPoint(x: 376.92, y: 517.06), controlPoint2: CGPoint(x: 376.92, y: 517.06))
        bezier3Path.addCurve(to: CGPoint(x: 380, y: 521.72), controlPoint1: CGPoint(x: 379.05, y: 518.29), controlPoint2: CGPoint(x: 380, y: 519.94))
        bezier3Path.addLine(to: CGPoint(x: 380, y: 607.91))
        bezier3Path.addCurve(to: CGPoint(x: 377.5, y: 612.24), controlPoint1: CGPoint(x: 380, y: 609.69), controlPoint2: CGPoint(x: 379.05, y: 611.34))
        bezier3Path.addLine(to: CGPoint(x: 302.99, y: 655.33))
        bezier3Path.addCurve(to: CGPoint(x: 297.98, y: 655.33), controlPoint1: CGPoint(x: 301.44, y: 656.22), controlPoint2: CGPoint(x: 299.53, y: 656.22))
        bezier3Path.addLine(to: CGPoint(x: 223.47, y: 612.24))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 607.91), controlPoint1: CGPoint(x: 221.92, y: 611.34), controlPoint2: CGPoint(x: 220.97, y: 609.69))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 604.69), controlPoint1: CGPoint(x: 220.97, y: 607.33), controlPoint2: CGPoint(x: 220.97, y: 607.33))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 596.1), controlPoint1: CGPoint(x: 220.97, y: 601.15), controlPoint2: CGPoint(x: 220.97, y: 601.15))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 569.34), controlPoint1: CGPoint(x: 220.97, y: 584.13), controlPoint2: CGPoint(x: 220.97, y: 584.13))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 564.82), controlPoint1: CGPoint(x: 220.97, y: 567.08), controlPoint2: CGPoint(x: 220.97, y: 567.08))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 538.74), controlPoint1: CGPoint(x: 220.97, y: 550.92), controlPoint2: CGPoint(x: 220.97, y: 550.92))
        bezier3Path.addCurve(to: CGPoint(x: 220.97, y: 522.94), controlPoint1: CGPoint(x: 220.97, y: 528.27), controlPoint2: CGPoint(x: 220.97, y: 528.27))
        bezier3Path.addLine(to: CGPoint(x: 228.47, y: 527.27))
        bezier3Path.addCurve(to: CGPoint(x: 211.66, y: 536.97), controlPoint1: CGPoint(x: 218.68, y: 532.92), controlPoint2: CGPoint(x: 218.68, y: 532.92))
        bezier3Path.addCurve(to: CGPoint(x: 205.16, y: 540.71), controlPoint1: CGPoint(x: 206.35, y: 540.03), controlPoint2: CGPoint(x: 206.35, y: 540.03))
        bezier3Path.addCurve(to: CGPoint(x: 200.16, y: 540.71), controlPoint1: CGPoint(x: 203.61, y: 541.61), controlPoint2: CGPoint(x: 201.71, y: 541.61))
        bezier3Path.addCurve(to: CGPoint(x: 193.93, y: 537.12), controlPoint1: CGPoint(x: 199.02, y: 540.05), controlPoint2: CGPoint(x: 199.02, y: 540.05))
        bezier3Path.addCurve(to: CGPoint(x: 177.74, y: 527.78), controlPoint1: CGPoint(x: 187.18, y: 533.23), controlPoint2: CGPoint(x: 187.18, y: 533.23))
        bezier3Path.addLine(to: CGPoint(x: 185.24, y: 523.45))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 564.82), controlPoint1: CGPoint(x: 185.24, y: 537.93), controlPoint2: CGPoint(x: 185.24, y: 537.93))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 594.44), controlPoint1: CGPoint(x: 185.24, y: 580.97), controlPoint2: CGPoint(x: 185.24, y: 580.97))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 604.2), controlPoint1: CGPoint(x: 185.24, y: 600.16), controlPoint2: CGPoint(x: 185.24, y: 600.16))
        bezier3Path.addCurve(to: CGPoint(x: 185.24, y: 607.91), controlPoint1: CGPoint(x: 185.24, y: 607.23), controlPoint2: CGPoint(x: 185.24, y: 607.23))
        bezier3Path.addCurve(to: CGPoint(x: 182.74, y: 612.24), controlPoint1: CGPoint(x: 185.24, y: 609.69), controlPoint2: CGPoint(x: 184.29, y: 611.34))
        bezier3Path.addLine(to: CGPoint(x: 108.23, y: 655.33))
        bezier3Path.addCurve(to: CGPoint(x: 103.22, y: 655.33), controlPoint1: CGPoint(x: 106.68, y: 656.22), controlPoint2: CGPoint(x: 104.77, y: 656.22))
        bezier3Path.addLine(to: CGPoint(x: 28.71, y: 612.24))
        bezier3Path.addCurve(to: CGPoint(x: 26.21, y: 607.91), controlPoint1: CGPoint(x: 27.16, y: 611.34), controlPoint2: CGPoint(x: 26.21, y: 609.69))
        bezier3Path.addLine(to: CGPoint(x: 26.21, y: 521.72))
        bezier3Path.addCurve(to: CGPoint(x: 28.71, y: 517.39), controlPoint1: CGPoint(x: 26.21, y: 519.94), controlPoint2: CGPoint(x: 27.16, y: 518.29))
        bezier3Path.addCurve(to: CGPoint(x: 31.91, y: 515.54), controlPoint1: CGPoint(x: 29.29, y: 517.06), controlPoint2: CGPoint(x: 29.29, y: 517.06))
        bezier3Path.addCurve(to: CGPoint(x: 40.35, y: 510.66), controlPoint1: CGPoint(x: 35.4, y: 513.52), controlPoint2: CGPoint(x: 35.4, y: 513.52))
        bezier3Path.addCurve(to: CGPoint(x: 65.97, y: 495.85), controlPoint1: CGPoint(x: 51.99, y: 503.93), controlPoint2: CGPoint(x: 51.99, y: 503.93))
        bezier3Path.addCurve(to: CGPoint(x: 101.63, y: 475.22), controlPoint1: CGPoint(x: 89.05, y: 482.5), controlPoint2: CGPoint(x: 89.05, y: 482.5))
        bezier3Path.addLine(to: CGPoint(x: 101.64, y: 483.88))
        bezier3Path.addCurve(to: CGPoint(x: 84.93, y: 474.24), controlPoint1: CGPoint(x: 91.9, y: 478.27), controlPoint2: CGPoint(x: 91.9, y: 478.27))
        bezier3Path.addCurve(to: CGPoint(x: 78.48, y: 470.52), controlPoint1: CGPoint(x: 79.66, y: 471.21), controlPoint2: CGPoint(x: 79.66, y: 471.21))
        bezier3Path.addCurve(to: CGPoint(x: 75.97, y: 466.19), controlPoint1: CGPoint(x: 76.93, y: 469.63), controlPoint2: CGPoint(x: 75.97, y: 467.98))
        bezier3Path.addLine(to: CGPoint(x: 75.97, y: 325.81))
        bezier3Path.addCurve(to: CGPoint(x: 78.48, y: 321.48), controlPoint1: CGPoint(x: 75.97, y: 324.02), controlPoint2: CGPoint(x: 76.93, y: 322.37))
        bezier3Path.addCurve(to: CGPoint(x: 84.93, y: 317.76), controlPoint1: CGPoint(x: 79.66, y: 320.79), controlPoint2: CGPoint(x: 79.66, y: 320.79))
        bezier3Path.addCurve(to: CGPoint(x: 101.64, y: 308.12), controlPoint1: CGPoint(x: 91.9, y: 313.73), controlPoint2: CGPoint(x: 91.9, y: 313.73))
        bezier3Path.addLine(to: CGPoint(x: 101.63, y: 316.78))
        bezier3Path.addCurve(to: CGPoint(x: 65.97, y: 296.15), controlPoint1: CGPoint(x: 89.05, y: 309.5), controlPoint2: CGPoint(x: 89.05, y: 309.5))
        bezier3Path.addCurve(to: CGPoint(x: 40.35, y: 281.34), controlPoint1: CGPoint(x: 51.99, y: 288.07), controlPoint2: CGPoint(x: 51.99, y: 288.07))
        bezier3Path.addCurve(to: CGPoint(x: 31.91, y: 276.46), controlPoint1: CGPoint(x: 35.4, y: 278.48), controlPoint2: CGPoint(x: 35.4, y: 278.48))
        bezier3Path.addCurve(to: CGPoint(x: 28.71, y: 274.61), controlPoint1: CGPoint(x: 29.29, y: 274.94), controlPoint2: CGPoint(x: 29.29, y: 274.94))
        bezier3Path.addCurve(to: CGPoint(x: 26.21, y: 270.28), controlPoint1: CGPoint(x: 27.16, y: 273.71), controlPoint2: CGPoint(x: 26.21, y: 272.06))
        bezier3Path.addLine(to: CGPoint(x: 26.21, y: 184.09))
        bezier3Path.addCurve(to: CGPoint(x: 28.71, y: 179.76), controlPoint1: CGPoint(x: 26.21, y: 182.31), controlPoint2: CGPoint(x: 27.16, y: 180.66))
        bezier3Path.addCurve(to: CGPoint(x: 31.91, y: 177.91), controlPoint1: CGPoint(x: 29.29, y: 179.43), controlPoint2: CGPoint(x: 29.29, y: 179.43))
        bezier3Path.addCurve(to: CGPoint(x: 40.35, y: 173.03), controlPoint1: CGPoint(x: 35.4, y: 175.89), controlPoint2: CGPoint(x: 35.4, y: 175.89))
        bezier3Path.addCurve(to: CGPoint(x: 65.97, y: 158.22), controlPoint1: CGPoint(x: 51.99, y: 166.3), controlPoint2: CGPoint(x: 51.99, y: 166.3))
        bezier3Path.addCurve(to: CGPoint(x: 69.8, y: 156), controlPoint1: CGPoint(x: 67.89, y: 157.11), controlPoint2: CGPoint(x: 67.89, y: 157.11))
        bezier3Path.addCurve(to: CGPoint(x: 92.99, y: 142.59), controlPoint1: CGPoint(x: 82.61, y: 148.59), controlPoint2: CGPoint(x: 82.61, y: 148.59))
        bezier3Path.addCurve(to: CGPoint(x: 100.43, y: 138.29), controlPoint1: CGPoint(x: 97.36, y: 140.06), controlPoint2: CGPoint(x: 97.36, y: 140.06))
        bezier3Path.addCurve(to: CGPoint(x: 103.22, y: 136.67), controlPoint1: CGPoint(x: 102.72, y: 136.96), controlPoint2: CGPoint(x: 102.72, y: 136.96))
        bezier3Path.addCurve(to: CGPoint(x: 108.23, y: 136.67), controlPoint1: CGPoint(x: 104.77, y: 135.78), controlPoint2: CGPoint(x: 106.68, y: 135.78))
        bezier3Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier3Path.addLine(to: CGPoint(x: 105.73, y: 141))
        bezier3Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 203.11, y: 136), end: CGPoint(x: 203.11, y: 656), options: [])
        context.restoreGState()

        ////// Bezier 3 Inner Shadow
        context.saveGState()
        context.clip(to: bezier3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier3OpaqueShadow.setFill()
        bezier3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 108.23, y: 136.67))
        bezier4Path.addCurve(to: CGPoint(x: 103.23, y: 145.33), controlPoint1: CGPoint(x: 114, y: 140.01), controlPoint2: CGPoint(x: 109, y: 148.67))
        bezier4Path.addLine(to: CGPoint(x: 103.22, y: 145.33))
        bezier4Path.addLine(to: CGPoint(x: 105.73, y: 141))
        bezier4Path.addLine(to: CGPoint(x: 108.23, y: 145.33))
        bezier4Path.addCurve(to: CGPoint(x: 105.43, y: 146.94), controlPoint1: CGPoint(x: 107.72, y: 145.62), controlPoint2: CGPoint(x: 107.72, y: 145.62))
        bezier4Path.addCurve(to: CGPoint(x: 97.99, y: 151.25), controlPoint1: CGPoint(x: 102.37, y: 148.72), controlPoint2: CGPoint(x: 102.37, y: 148.72))
        bezier4Path.addCurve(to: CGPoint(x: 74.81, y: 164.66), controlPoint1: CGPoint(x: 87.62, y: 157.25), controlPoint2: CGPoint(x: 87.62, y: 157.25))
        bezier4Path.addCurve(to: CGPoint(x: 70.97, y: 166.87), controlPoint1: CGPoint(x: 72.89, y: 165.76), controlPoint2: CGPoint(x: 72.89, y: 165.76))
        bezier4Path.addCurve(to: CGPoint(x: 45.36, y: 181.69), controlPoint1: CGPoint(x: 57, y: 174.95), controlPoint2: CGPoint(x: 57, y: 174.95))
        bezier4Path.addCurve(to: CGPoint(x: 36.92, y: 186.57), controlPoint1: CGPoint(x: 40.41, y: 184.55), controlPoint2: CGPoint(x: 40.41, y: 184.55))
        bezier4Path.addCurve(to: CGPoint(x: 33.72, y: 188.42), controlPoint1: CGPoint(x: 34.3, y: 188.08), controlPoint2: CGPoint(x: 34.3, y: 188.08))
        bezier4Path.addLine(to: CGPoint(x: 36.21, y: 184.09))
        bezier4Path.addLine(to: CGPoint(x: 36.21, y: 270.28))
        bezier4Path.addLine(to: CGPoint(x: 33.72, y: 265.95))
        bezier4Path.addCurve(to: CGPoint(x: 36.92, y: 267.8), controlPoint1: CGPoint(x: 34.3, y: 266.29), controlPoint2: CGPoint(x: 34.3, y: 266.29))
        bezier4Path.addCurve(to: CGPoint(x: 45.36, y: 272.68), controlPoint1: CGPoint(x: 40.41, y: 269.82), controlPoint2: CGPoint(x: 40.41, y: 269.82))
        bezier4Path.addCurve(to: CGPoint(x: 70.97, y: 287.49), controlPoint1: CGPoint(x: 57, y: 279.42), controlPoint2: CGPoint(x: 57, y: 279.42))
        bezier4Path.addCurve(to: CGPoint(x: 106.64, y: 308.12), controlPoint1: CGPoint(x: 94.06, y: 300.85), controlPoint2: CGPoint(x: 94.06, y: 300.85))
        bezier4Path.addCurve(to: CGPoint(x: 106.63, y: 316.78), controlPoint1: CGPoint(x: 109.97, y: 310.05), controlPoint2: CGPoint(x: 109.97, y: 314.86))
        bezier4Path.addCurve(to: CGPoint(x: 89.92, y: 326.42), controlPoint1: CGPoint(x: 96.9, y: 322.39), controlPoint2: CGPoint(x: 96.9, y: 322.39))
        bezier4Path.addCurve(to: CGPoint(x: 83.47, y: 330.14), controlPoint1: CGPoint(x: 84.66, y: 329.46), controlPoint2: CGPoint(x: 84.66, y: 329.46))
        bezier4Path.addLine(to: CGPoint(x: 85.97, y: 325.81))
        bezier4Path.addLine(to: CGPoint(x: 85.97, y: 466.19))
        bezier4Path.addLine(to: CGPoint(x: 83.47, y: 461.86))
        bezier4Path.addCurve(to: CGPoint(x: 89.92, y: 465.58), controlPoint1: CGPoint(x: 84.66, y: 462.54), controlPoint2: CGPoint(x: 84.66, y: 462.54))
        bezier4Path.addCurve(to: CGPoint(x: 106.63, y: 475.22), controlPoint1: CGPoint(x: 96.9, y: 469.61), controlPoint2: CGPoint(x: 96.9, y: 469.61))
        bezier4Path.addCurve(to: CGPoint(x: 106.64, y: 483.88), controlPoint1: CGPoint(x: 109.97, y: 477.14), controlPoint2: CGPoint(x: 109.97, y: 481.95))
        bezier4Path.addCurve(to: CGPoint(x: 70.97, y: 504.51), controlPoint1: CGPoint(x: 94.06, y: 491.15), controlPoint2: CGPoint(x: 94.06, y: 491.15))
        bezier4Path.addCurve(to: CGPoint(x: 45.36, y: 519.32), controlPoint1: CGPoint(x: 57, y: 512.58), controlPoint2: CGPoint(x: 57, y: 512.58))
        bezier4Path.addCurve(to: CGPoint(x: 36.92, y: 524.2), controlPoint1: CGPoint(x: 40.41, y: 522.18), controlPoint2: CGPoint(x: 40.41, y: 522.18))
        bezier4Path.addCurve(to: CGPoint(x: 33.72, y: 526.05), controlPoint1: CGPoint(x: 34.3, y: 525.71), controlPoint2: CGPoint(x: 34.3, y: 525.71))
        bezier4Path.addLine(to: CGPoint(x: 36.21, y: 521.72))
        bezier4Path.addLine(to: CGPoint(x: 36.21, y: 607.91))
        bezier4Path.addLine(to: CGPoint(x: 33.72, y: 603.58))
        bezier4Path.addLine(to: CGPoint(x: 108.23, y: 646.67))
        bezier4Path.addLine(to: CGPoint(x: 103.22, y: 646.67))
        bezier4Path.addLine(to: CGPoint(x: 177.74, y: 603.58))
        bezier4Path.addLine(to: CGPoint(x: 175.24, y: 607.91))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 604.2), controlPoint1: CGPoint(x: 175.24, y: 607.23), controlPoint2: CGPoint(x: 175.24, y: 607.23))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 594.44), controlPoint1: CGPoint(x: 175.24, y: 600.16), controlPoint2: CGPoint(x: 175.24, y: 600.16))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 564.82), controlPoint1: CGPoint(x: 175.24, y: 580.97), controlPoint2: CGPoint(x: 175.24, y: 580.97))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 523.45), controlPoint1: CGPoint(x: 175.24, y: 537.93), controlPoint2: CGPoint(x: 175.24, y: 537.93))
        bezier4Path.addCurve(to: CGPoint(x: 182.74, y: 519.12), controlPoint1: CGPoint(x: 175.24, y: 519.6), controlPoint2: CGPoint(x: 179.4, y: 517.2))
        bezier4Path.addCurve(to: CGPoint(x: 198.93, y: 528.46), controlPoint1: CGPoint(x: 192.18, y: 524.56), controlPoint2: CGPoint(x: 192.18, y: 524.56))
        bezier4Path.addCurve(to: CGPoint(x: 205.16, y: 532.05), controlPoint1: CGPoint(x: 204.02, y: 531.39), controlPoint2: CGPoint(x: 204.02, y: 531.39))
        bezier4Path.addLine(to: CGPoint(x: 200.16, y: 532.05))
        bezier4Path.addCurve(to: CGPoint(x: 206.66, y: 528.3), controlPoint1: CGPoint(x: 201.36, y: 531.36), controlPoint2: CGPoint(x: 201.36, y: 531.36))
        bezier4Path.addCurve(to: CGPoint(x: 223.47, y: 518.61), controlPoint1: CGPoint(x: 213.68, y: 524.25), controlPoint2: CGPoint(x: 213.68, y: 524.25))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 522.94), controlPoint1: CGPoint(x: 226.81, y: 516.68), controlPoint2: CGPoint(x: 230.97, y: 519.09))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 538.74), controlPoint1: CGPoint(x: 230.97, y: 528.27), controlPoint2: CGPoint(x: 230.97, y: 528.27))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 564.82), controlPoint1: CGPoint(x: 230.97, y: 550.92), controlPoint2: CGPoint(x: 230.97, y: 550.92))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 569.34), controlPoint1: CGPoint(x: 230.97, y: 567.08), controlPoint2: CGPoint(x: 230.97, y: 567.08))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 596.1), controlPoint1: CGPoint(x: 230.97, y: 584.13), controlPoint2: CGPoint(x: 230.97, y: 584.13))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 604.69), controlPoint1: CGPoint(x: 230.97, y: 601.15), controlPoint2: CGPoint(x: 230.97, y: 601.15))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 607.91), controlPoint1: CGPoint(x: 230.97, y: 607.33), controlPoint2: CGPoint(x: 230.97, y: 607.33))
        bezier4Path.addLine(to: CGPoint(x: 228.48, y: 603.58))
        bezier4Path.addLine(to: CGPoint(x: 302.99, y: 646.67))
        bezier4Path.addLine(to: CGPoint(x: 297.98, y: 646.67))
        bezier4Path.addLine(to: CGPoint(x: 372.5, y: 603.58))
        bezier4Path.addLine(to: CGPoint(x: 370, y: 607.91))
        bezier4Path.addLine(to: CGPoint(x: 370, y: 521.72))
        bezier4Path.addLine(to: CGPoint(x: 372.5, y: 526.05))
        bezier4Path.addCurve(to: CGPoint(x: 369.3, y: 524.2), controlPoint1: CGPoint(x: 371.91, y: 525.71), controlPoint2: CGPoint(x: 371.91, y: 525.71))
        bezier4Path.addCurve(to: CGPoint(x: 360.85, y: 519.32), controlPoint1: CGPoint(x: 365.8, y: 522.18), controlPoint2: CGPoint(x: 365.8, y: 522.18))
        bezier4Path.addCurve(to: CGPoint(x: 335.24, y: 504.51), controlPoint1: CGPoint(x: 349.21, y: 512.58), controlPoint2: CGPoint(x: 349.21, y: 512.58))
        bezier4Path.addCurve(to: CGPoint(x: 299.13, y: 483.62), controlPoint1: CGPoint(x: 315.96, y: 493.35), controlPoint2: CGPoint(x: 302.96, y: 485.84))
        bezier4Path.addCurve(to: CGPoint(x: 299.14, y: 474.96), controlPoint1: CGPoint(x: 295.8, y: 481.7), controlPoint2: CGPoint(x: 295.8, y: 476.89))
        bezier4Path.addCurve(to: CGPoint(x: 315.53, y: 465.51), controlPoint1: CGPoint(x: 308.69, y: 469.45), controlPoint2: CGPoint(x: 308.69, y: 469.45))
        bezier4Path.addCurve(to: CGPoint(x: 321.85, y: 461.86), controlPoint1: CGPoint(x: 320.69, y: 462.53), controlPoint2: CGPoint(x: 320.69, y: 462.53))
        bezier4Path.addLine(to: CGPoint(x: 319.35, y: 466.19))
        bezier4Path.addLine(to: CGPoint(x: 319.35, y: 325.81))
        bezier4Path.addLine(to: CGPoint(x: 321.85, y: 330.14))
        bezier4Path.addCurve(to: CGPoint(x: 315.53, y: 326.49), controlPoint1: CGPoint(x: 320.69, y: 329.47), controlPoint2: CGPoint(x: 320.69, y: 329.47))
        bezier4Path.addCurve(to: CGPoint(x: 299.13, y: 317.04), controlPoint1: CGPoint(x: 308.69, y: 322.55), controlPoint2: CGPoint(x: 308.69, y: 322.55))
        bezier4Path.addCurve(to: CGPoint(x: 299.13, y: 308.38), controlPoint1: CGPoint(x: 295.8, y: 315.11), controlPoint2: CGPoint(x: 295.8, y: 310.3))
        bezier4Path.addCurve(to: CGPoint(x: 312.85, y: 300.44), controlPoint1: CGPoint(x: 303.82, y: 305.66), controlPoint2: CGPoint(x: 303.82, y: 305.66))
        bezier4Path.addCurve(to: CGPoint(x: 335.24, y: 287.49), controlPoint1: CGPoint(x: 323.32, y: 294.39), controlPoint2: CGPoint(x: 323.32, y: 294.39))
        bezier4Path.addCurve(to: CGPoint(x: 360.85, y: 272.68), controlPoint1: CGPoint(x: 349.21, y: 279.42), controlPoint2: CGPoint(x: 349.21, y: 279.42))
        bezier4Path.addCurve(to: CGPoint(x: 369.3, y: 267.8), controlPoint1: CGPoint(x: 365.8, y: 269.82), controlPoint2: CGPoint(x: 365.8, y: 269.82))
        bezier4Path.addCurve(to: CGPoint(x: 372.5, y: 265.95), controlPoint1: CGPoint(x: 371.91, y: 266.29), controlPoint2: CGPoint(x: 371.91, y: 266.29))
        bezier4Path.addLine(to: CGPoint(x: 370, y: 270.28))
        bezier4Path.addLine(to: CGPoint(x: 370, y: 184.09))
        bezier4Path.addLine(to: CGPoint(x: 372.5, y: 188.42))
        bezier4Path.addLine(to: CGPoint(x: 297.98, y: 145.33))
        bezier4Path.addLine(to: CGPoint(x: 302.99, y: 145.33))
        bezier4Path.addCurve(to: CGPoint(x: 299.79, y: 147.18), controlPoint1: CGPoint(x: 302.41, y: 145.67), controlPoint2: CGPoint(x: 302.41, y: 145.67))
        bezier4Path.addCurve(to: CGPoint(x: 291.35, y: 152.06), controlPoint1: CGPoint(x: 296.3, y: 149.2), controlPoint2: CGPoint(x: 296.3, y: 149.2))
        bezier4Path.addCurve(to: CGPoint(x: 265.73, y: 166.87), controlPoint1: CGPoint(x: 279.7, y: 158.8), controlPoint2: CGPoint(x: 279.7, y: 158.8))
        bezier4Path.addCurve(to: CGPoint(x: 233.07, y: 185.76), controlPoint1: CGPoint(x: 246.24, y: 178.15), controlPoint2: CGPoint(x: 246.24, y: 178.15))
        bezier4Path.addCurve(to: CGPoint(x: 228.48, y: 188.42), controlPoint1: CGPoint(x: 229.33, y: 187.93), controlPoint2: CGPoint(x: 229.33, y: 187.93))
        bezier4Path.addLine(to: CGPoint(x: 225.97, y: 184.09))
        bezier4Path.addLine(to: CGPoint(x: 230.97, y: 184.09))
        bezier4Path.addLine(to: CGPoint(x: 230.97, y: 184.09))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 187.8), controlPoint1: CGPoint(x: 230.97, y: 184.77), controlPoint2: CGPoint(x: 230.97, y: 184.77))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 197.56), controlPoint1: CGPoint(x: 230.97, y: 191.84), controlPoint2: CGPoint(x: 230.97, y: 191.84))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 227.18), controlPoint1: CGPoint(x: 230.97, y: 211.03), controlPoint2: CGPoint(x: 230.97, y: 211.03))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 253.26), controlPoint1: CGPoint(x: 230.97, y: 241.08), controlPoint2: CGPoint(x: 230.97, y: 241.08))
        bezier4Path.addCurve(to: CGPoint(x: 230.97, y: 269.06), controlPoint1: CGPoint(x: 230.97, y: 263.73), controlPoint2: CGPoint(x: 230.97, y: 263.73))
        bezier4Path.addCurve(to: CGPoint(x: 223.47, y: 273.39), controlPoint1: CGPoint(x: 230.97, y: 272.91), controlPoint2: CGPoint(x: 226.81, y: 275.32))
        bezier4Path.addCurve(to: CGPoint(x: 206.66, y: 263.7), controlPoint1: CGPoint(x: 213.68, y: 267.75), controlPoint2: CGPoint(x: 213.68, y: 267.75))
        bezier4Path.addCurve(to: CGPoint(x: 200.16, y: 259.95), controlPoint1: CGPoint(x: 201.36, y: 260.64), controlPoint2: CGPoint(x: 201.36, y: 260.64))
        bezier4Path.addLine(to: CGPoint(x: 202.66, y: 255.62))
        bezier4Path.addLine(to: CGPoint(x: 205.16, y: 259.95))
        bezier4Path.addCurve(to: CGPoint(x: 198.93, y: 263.54), controlPoint1: CGPoint(x: 204.02, y: 260.61), controlPoint2: CGPoint(x: 204.02, y: 260.61))
        bezier4Path.addCurve(to: CGPoint(x: 182.74, y: 272.88), controlPoint1: CGPoint(x: 192.18, y: 267.44), controlPoint2: CGPoint(x: 192.18, y: 267.44))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 268.55), controlPoint1: CGPoint(x: 179.4, y: 274.8), controlPoint2: CGPoint(x: 175.24, y: 272.4))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 227.18), controlPoint1: CGPoint(x: 175.24, y: 254.07), controlPoint2: CGPoint(x: 175.24, y: 254.07))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 197.56), controlPoint1: CGPoint(x: 175.24, y: 211.03), controlPoint2: CGPoint(x: 175.24, y: 211.03))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 187.8), controlPoint1: CGPoint(x: 175.24, y: 191.84), controlPoint2: CGPoint(x: 175.24, y: 191.84))
        bezier4Path.addCurve(to: CGPoint(x: 175.24, y: 184.09), controlPoint1: CGPoint(x: 175.24, y: 184.77), controlPoint2: CGPoint(x: 175.24, y: 184.77))
        bezier4Path.addLine(to: CGPoint(x: 177.74, y: 188.42))
        bezier4Path.addCurve(to: CGPoint(x: 174.54, y: 186.57), controlPoint1: CGPoint(x: 177.15, y: 188.08), controlPoint2: CGPoint(x: 177.15, y: 188.08))
        bezier4Path.addCurve(to: CGPoint(x: 166.09, y: 181.69), controlPoint1: CGPoint(x: 171.04, y: 184.55), controlPoint2: CGPoint(x: 171.04, y: 184.55))
        bezier4Path.addCurve(to: CGPoint(x: 140.48, y: 166.88), controlPoint1: CGPoint(x: 154.45, y: 174.95), controlPoint2: CGPoint(x: 154.45, y: 174.95))
        bezier4Path.addCurve(to: CGPoint(x: 114.87, y: 152.06), controlPoint1: CGPoint(x: 126.51, y: 158.8), controlPoint2: CGPoint(x: 126.51, y: 158.8))
        bezier4Path.addCurve(to: CGPoint(x: 106.43, y: 147.18), controlPoint1: CGPoint(x: 109.92, y: 149.2), controlPoint2: CGPoint(x: 109.92, y: 149.2))
        bezier4Path.addCurve(to: CGPoint(x: 104.06, y: 145.81), controlPoint1: CGPoint(x: 105.01, y: 146.36), controlPoint2: CGPoint(x: 105.01, y: 146.36))
        bezier4Path.addCurve(to: CGPoint(x: 103.44, y: 145.45), controlPoint1: CGPoint(x: 103.69, y: 145.6), controlPoint2: CGPoint(x: 103.69, y: 145.6))
        bezier4Path.addCurve(to: CGPoint(x: 103.28, y: 145.36), controlPoint1: CGPoint(x: 103.34, y: 145.4), controlPoint2: CGPoint(x: 103.34, y: 145.4))
        bezier4Path.addCurve(to: CGPoint(x: 103.24, y: 145.34), controlPoint1: CGPoint(x: 103.26, y: 145.35), controlPoint2: CGPoint(x: 103.26, y: 145.35))
        bezier4Path.addCurve(to: CGPoint(x: 103.23, y: 145.33), controlPoint1: CGPoint(x: 103.23, y: 145.33), controlPoint2: CGPoint(x: 103.23, y: 145.33))
        bezier4Path.addCurve(to: CGPoint(x: 103.23, y: 145.33), controlPoint1: CGPoint(x: 103.23, y: 145.33), controlPoint2: CGPoint(x: 103.23, y: 145.33))
        bezier4Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier4Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier4Path.addLine(to: CGPoint(x: 103.23, y: 145.33))
        bezier4Path.addLine(to: CGPoint(x: 108.23, y: 136.67))
        bezier4Path.close()
        context.saveGState()
        bezier4Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 203.11, y: 136.67), end: CGPoint(x: 203.11, y: 646.67), options: [])
        context.restoreGState()

        ////// Bezier 4 Inner Shadow
        context.saveGState()
        context.clip(to: bezier4Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier4OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier4OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier4OpaqueShadow.setFill()
        bezier4Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole66(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// wall Drawing
        let wallPath = UIBezierPath()
        wallPath.move(to: CGPoint(x: 200.47, y: 61.84))
        wallPath.addCurve(to: CGPoint(x: 222.33, y: 75.71), controlPoint1: CGPoint(x: 212.7, y: 69.6), controlPoint2: CGPoint(x: 212.7, y: 69.6))
        wallPath.addCurve(to: CGPoint(x: 229.16, y: 80.04), controlPoint1: CGPoint(x: 226.36, y: 78.27), controlPoint2: CGPoint(x: 226.36, y: 78.27))
        wallPath.addCurve(to: CGPoint(x: 231.7, y: 81.65), controlPoint1: CGPoint(x: 231.25, y: 81.36), controlPoint2: CGPoint(x: 231.25, y: 81.36))
        wallPath.addCurve(to: CGPoint(x: 234.02, y: 85.88), controlPoint1: CGPoint(x: 233.15, y: 82.57), controlPoint2: CGPoint(x: 234.02, y: 84.16))
        wallPath.addLine(to: CGPoint(x: 234.02, y: 186.12))
        wallPath.addLine(to: CGPoint(x: 231.73, y: 181.92))
        wallPath.addCurve(to: CGPoint(x: 269.67, y: 206.06), controlPoint1: CGPoint(x: 236.03, y: 184.69), controlPoint2: CGPoint(x: 249.66, y: 193.35))
        wallPath.addCurve(to: CGPoint(x: 269.74, y: 206.11), controlPoint1: CGPoint(x: 269.7, y: 206.08), controlPoint2: CGPoint(x: 269.7, y: 206.08))
        wallPath.addCurve(to: CGPoint(x: 296.87, y: 223.33), controlPoint1: CGPoint(x: 278.37, y: 211.59), controlPoint2: CGPoint(x: 287.62, y: 217.46))
        wallPath.addCurve(to: CGPoint(x: 305.81, y: 229), controlPoint1: CGPoint(x: 300.11, y: 225.38), controlPoint2: CGPoint(x: 303.11, y: 227.29))
        wallPath.addCurve(to: CGPoint(x: 308.32, y: 230.59), controlPoint1: CGPoint(x: 307.31, y: 229.95), controlPoint2: CGPoint(x: 307.31, y: 229.95))
        wallPath.addCurve(to: CGPoint(x: 309.2, y: 231.15), controlPoint1: CGPoint(x: 309.05, y: 231.06), controlPoint2: CGPoint(x: 309.05, y: 231.06))
        wallPath.addCurve(to: CGPoint(x: 311.52, y: 235.38), controlPoint1: CGPoint(x: 310.65, y: 232.07), controlPoint2: CGPoint(x: 311.52, y: 233.66))
        wallPath.addLine(to: CGPoint(x: 311.52, y: 335.62))
        wallPath.addCurve(to: CGPoint(x: 309.33, y: 339.77), controlPoint1: CGPoint(x: 311.52, y: 337.28), controlPoint2: CGPoint(x: 310.7, y: 338.84))
        wallPath.addLine(to: CGPoint(x: 160.93, y: 440.14))
        wallPath.addLine(to: CGPoint(x: 160.89, y: 431.83))
        wallPath.addLine(to: CGPoint(x: 309.29, y: 530.21))
        wallPath.addCurve(to: CGPoint(x: 311.52, y: 534.38), controlPoint1: CGPoint(x: 310.68, y: 531.13), controlPoint2: CGPoint(x: 311.52, y: 532.7))
        wallPath.addLine(to: CGPoint(x: 311.52, y: 634.62))
        wallPath.addCurve(to: CGPoint(x: 309.2, y: 638.85), controlPoint1: CGPoint(x: 311.52, y: 636.34), controlPoint2: CGPoint(x: 310.65, y: 637.93))
        wallPath.addLine(to: CGPoint(x: 230.18, y: 688.97))
        wallPath.addCurve(to: CGPoint(x: 224.82, y: 688.97), controlPoint1: CGPoint(x: 228.54, y: 690.01), controlPoint2: CGPoint(x: 226.46, y: 690.01))
        wallPath.addLine(to: CGPoint(x: 145.8, y: 638.85))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 634.62), controlPoint1: CGPoint(x: 144.35, y: 637.93), controlPoint2: CGPoint(x: 143.48, y: 636.34))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 630.67), controlPoint1: CGPoint(x: 143.48, y: 633.91), controlPoint2: CGPoint(x: 143.48, y: 633.91))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 620.16), controlPoint1: CGPoint(x: 143.48, y: 626.33), controlPoint2: CGPoint(x: 143.48, y: 626.33))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 587.74), controlPoint1: CGPoint(x: 143.48, y: 605.57), controlPoint2: CGPoint(x: 143.48, y: 605.57))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 584.5), controlPoint1: CGPoint(x: 143.48, y: 586.12), controlPoint2: CGPoint(x: 143.48, y: 586.12))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 552.54), controlPoint1: CGPoint(x: 143.48, y: 567.32), controlPoint2: CGPoint(x: 143.48, y: 567.32))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 541.04), controlPoint1: CGPoint(x: 143.48, y: 546.04), controlPoint2: CGPoint(x: 143.48, y: 546.04))
        wallPath.addCurve(to: CGPoint(x: 143.48, y: 534.92), controlPoint1: CGPoint(x: 143.48, y: 536.93), controlPoint2: CGPoint(x: 143.48, y: 536.93))
        wallPath.addLine(to: CGPoint(x: 145.8, y: 539.14))
        wallPath.addCurve(to: CGPoint(x: 131.78, y: 530.25), controlPoint1: CGPoint(x: 141.53, y: 536.43), controlPoint2: CGPoint(x: 141.53, y: 536.43))
        wallPath.addCurve(to: CGPoint(x: 106.81, y: 514.41), controlPoint1: CGPoint(x: 120.21, y: 522.91), controlPoint2: CGPoint(x: 120.21, y: 522.91))
        wallPath.addCurve(to: CGPoint(x: 79.64, y: 497.18), controlPoint1: CGPoint(x: 91.99, y: 505.01), controlPoint2: CGPoint(x: 91.99, y: 505.01))
        wallPath.addCurve(to: CGPoint(x: 70.69, y: 491.5), controlPoint1: CGPoint(x: 74.4, y: 493.85), controlPoint2: CGPoint(x: 74.4, y: 493.85))
        wallPath.addCurve(to: CGPoint(x: 67.3, y: 489.35), controlPoint1: CGPoint(x: 67.91, y: 489.74), controlPoint2: CGPoint(x: 67.91, y: 489.74))
        wallPath.addCurve(to: CGPoint(x: 64.98, y: 485.12), controlPoint1: CGPoint(x: 65.85, y: 488.43), controlPoint2: CGPoint(x: 64.98, y: 486.84))
        wallPath.addLine(to: CGPoint(x: 64.98, y: 384.88))
        wallPath.addCurve(to: CGPoint(x: 67.19, y: 380.73), controlPoint1: CGPoint(x: 64.98, y: 383.21), controlPoint2: CGPoint(x: 65.8, y: 381.65))
        wallPath.addLine(to: CGPoint(x: 215.21, y: 281.23))
        wallPath.addLine(to: CGPoint(x: 215.2, y: 289.52))
        wallPath.addLine(to: CGPoint(x: 68.18, y: 190.27))
        wallPath.addCurve(to: CGPoint(x: 65.98, y: 186.12), controlPoint1: CGPoint(x: 66.8, y: 189.34), controlPoint2: CGPoint(x: 65.98, y: 187.79))
        wallPath.addLine(to: CGPoint(x: 65.98, y: 85.88))
        wallPath.addCurve(to: CGPoint(x: 68.3, y: 81.65), controlPoint1: CGPoint(x: 65.98, y: 84.16), controlPoint2: CGPoint(x: 66.85, y: 82.57))
        wallPath.addCurve(to: CGPoint(x: 74.02, y: 78.03), controlPoint1: CGPoint(x: 69.37, y: 80.97), controlPoint2: CGPoint(x: 69.37, y: 80.97))
        wallPath.addCurve(to: CGPoint(x: 88.35, y: 68.93), controlPoint1: CGPoint(x: 80.1, y: 74.17), controlPoint2: CGPoint(x: 80.1, y: 74.17))
        wallPath.addCurve(to: CGPoint(x: 107.81, y: 56.59), controlPoint1: CGPoint(x: 97.69, y: 63.01), controlPoint2: CGPoint(x: 97.69, y: 63.01))
        wallPath.addCurve(to: CGPoint(x: 134.79, y: 39.47), controlPoint1: CGPoint(x: 122.51, y: 47.27), controlPoint2: CGPoint(x: 122.51, y: 47.27))
        wallPath.addCurve(to: CGPoint(x: 143.77, y: 33.78), controlPoint1: CGPoint(x: 140.03, y: 36.15), controlPoint2: CGPoint(x: 140.03, y: 36.15))
        wallPath.addCurve(to: CGPoint(x: 147.32, y: 31.53), controlPoint1: CGPoint(x: 146.6, y: 31.99), controlPoint2: CGPoint(x: 146.6, y: 31.99))
        wallPath.addCurve(to: CGPoint(x: 152.67, y: 31.53), controlPoint1: CGPoint(x: 148.95, y: 30.49), controlPoint2: CGPoint(x: 151.04, y: 30.49))
        wallPath.addLine(to: CGPoint(x: 200.47, y: 61.84))
        wallPath.close()
        context.saveGState()
        wallPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 188.25, y: 30.75), end: CGPoint(x: 188.25, y: 689.75), options: [])
        context.restoreGState()

        ////// wall Inner Shadow
        context.saveGState()
        context.clip(to: wallPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wallOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wallOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wallOpaqueShadow.setFill()
        wallPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 149, y: 134, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 217, y: 596, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// wall 2 Drawing
        let wall2Path = UIBezierPath()
        wall2Path.move(to: CGPoint(x: 195.11, y: 70.29))
        wall2Path.addLine(to: CGPoint(x: 147.32, y: 39.97))
        wall2Path.addLine(to: CGPoint(x: 150, y: 35.75))
        wall2Path.addLine(to: CGPoint(x: 152.67, y: 39.97))
        wall2Path.addCurve(to: CGPoint(x: 149.12, y: 42.23), controlPoint1: CGPoint(x: 151.95, y: 40.43), controlPoint2: CGPoint(x: 151.95, y: 40.43))
        wall2Path.addCurve(to: CGPoint(x: 140.15, y: 47.92), controlPoint1: CGPoint(x: 145.39, y: 44.6), controlPoint2: CGPoint(x: 145.39, y: 44.6))
        wall2Path.addCurve(to: CGPoint(x: 113.17, y: 65.03), controlPoint1: CGPoint(x: 127.86, y: 55.71), controlPoint2: CGPoint(x: 127.86, y: 55.71))
        wall2Path.addCurve(to: CGPoint(x: 93.71, y: 77.38), controlPoint1: CGPoint(x: 103.04, y: 71.46), controlPoint2: CGPoint(x: 103.04, y: 71.46))
        wall2Path.addCurve(to: CGPoint(x: 79.37, y: 86.47), controlPoint1: CGPoint(x: 85.46, y: 82.61), controlPoint2: CGPoint(x: 85.46, y: 82.61))
        wall2Path.addCurve(to: CGPoint(x: 73.65, y: 90.1), controlPoint1: CGPoint(x: 74.72, y: 89.42), controlPoint2: CGPoint(x: 74.72, y: 89.42))
        wall2Path.addLine(to: CGPoint(x: 75.98, y: 85.88))
        wall2Path.addLine(to: CGPoint(x: 75.98, y: 186.12))
        wall2Path.addLine(to: CGPoint(x: 73.77, y: 181.98))
        wall2Path.addLine(to: CGPoint(x: 220.8, y: 281.23))
        wall2Path.addCurve(to: CGPoint(x: 220.79, y: 289.52), controlPoint1: CGPoint(x: 223.74, y: 283.22), controlPoint2: CGPoint(x: 223.73, y: 287.55))
        wall2Path.addLine(to: CGPoint(x: 72.76, y: 389.02))
        wall2Path.addLine(to: CGPoint(x: 74.98, y: 384.88))
        wall2Path.addLine(to: CGPoint(x: 74.98, y: 485.12))
        wall2Path.addLine(to: CGPoint(x: 72.65, y: 480.9))
        wall2Path.addCurve(to: CGPoint(x: 76.05, y: 483.06), controlPoint1: CGPoint(x: 73.27, y: 481.29), controlPoint2: CGPoint(x: 73.27, y: 481.29))
        wall2Path.addCurve(to: CGPoint(x: 85, y: 488.73), controlPoint1: CGPoint(x: 79.75, y: 485.41), controlPoint2: CGPoint(x: 79.75, y: 485.41))
        wall2Path.addCurve(to: CGPoint(x: 112.17, y: 505.97), controlPoint1: CGPoint(x: 97.35, y: 496.57), controlPoint2: CGPoint(x: 97.35, y: 496.57))
        wall2Path.addCurve(to: CGPoint(x: 137.14, y: 521.81), controlPoint1: CGPoint(x: 125.57, y: 514.46), controlPoint2: CGPoint(x: 125.57, y: 514.46))
        wall2Path.addCurve(to: CGPoint(x: 151.15, y: 530.69), controlPoint1: CGPoint(x: 146.89, y: 527.99), controlPoint2: CGPoint(x: 146.89, y: 527.99))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 534.92), controlPoint1: CGPoint(x: 152.6, y: 531.61), controlPoint2: CGPoint(x: 153.48, y: 533.2))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 541.04), controlPoint1: CGPoint(x: 153.48, y: 536.93), controlPoint2: CGPoint(x: 153.48, y: 536.93))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 552.54), controlPoint1: CGPoint(x: 153.48, y: 546.04), controlPoint2: CGPoint(x: 153.48, y: 546.04))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 584.5), controlPoint1: CGPoint(x: 153.48, y: 567.32), controlPoint2: CGPoint(x: 153.48, y: 567.32))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 587.74), controlPoint1: CGPoint(x: 153.48, y: 586.12), controlPoint2: CGPoint(x: 153.48, y: 586.12))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 620.16), controlPoint1: CGPoint(x: 153.48, y: 605.57), controlPoint2: CGPoint(x: 153.48, y: 605.57))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 630.67), controlPoint1: CGPoint(x: 153.48, y: 626.33), controlPoint2: CGPoint(x: 153.48, y: 626.33))
        wall2Path.addCurve(to: CGPoint(x: 153.48, y: 634.62), controlPoint1: CGPoint(x: 153.48, y: 633.91), controlPoint2: CGPoint(x: 153.48, y: 633.91))
        wall2Path.addLine(to: CGPoint(x: 151.15, y: 630.4))
        wall2Path.addLine(to: CGPoint(x: 230.18, y: 680.53))
        wall2Path.addLine(to: CGPoint(x: 224.82, y: 680.53))
        wall2Path.addLine(to: CGPoint(x: 303.85, y: 630.4))
        wall2Path.addLine(to: CGPoint(x: 301.52, y: 634.62))
        wall2Path.addLine(to: CGPoint(x: 301.52, y: 534.38))
        wall2Path.addLine(to: CGPoint(x: 303.76, y: 538.54))
        wall2Path.addLine(to: CGPoint(x: 155.36, y: 440.17))
        wall2Path.addCurve(to: CGPoint(x: 155.32, y: 431.86), controlPoint1: CGPoint(x: 152.4, y: 438.2), controlPoint2: CGPoint(x: 152.38, y: 433.85))
        wall2Path.addLine(to: CGPoint(x: 303.72, y: 331.48))
        wall2Path.addLine(to: CGPoint(x: 301.52, y: 335.62))
        wall2Path.addLine(to: CGPoint(x: 301.52, y: 235.38))
        wall2Path.addLine(to: CGPoint(x: 303.85, y: 239.6))
        wall2Path.addCurve(to: CGPoint(x: 302.96, y: 239.03), controlPoint1: CGPoint(x: 303.69, y: 239.5), controlPoint2: CGPoint(x: 303.69, y: 239.5))
        wall2Path.addCurve(to: CGPoint(x: 300.45, y: 237.45), controlPoint1: CGPoint(x: 301.96, y: 238.4), controlPoint2: CGPoint(x: 301.96, y: 238.4))
        wall2Path.addCurve(to: CGPoint(x: 291.51, y: 231.77), controlPoint1: CGPoint(x: 297.76, y: 235.73), controlPoint2: CGPoint(x: 294.75, y: 233.83))
        wall2Path.addCurve(to: CGPoint(x: 264.38, y: 214.55), controlPoint1: CGPoint(x: 282.26, y: 225.9), controlPoint2: CGPoint(x: 273.01, y: 220.03))
        wall2Path.addCurve(to: CGPoint(x: 264.31, y: 214.5), controlPoint1: CGPoint(x: 264.34, y: 214.53), controlPoint2: CGPoint(x: 264.34, y: 214.53))
        wall2Path.addCurve(to: CGPoint(x: 226.32, y: 190.33), controlPoint1: CGPoint(x: 244.27, y: 201.78), controlPoint2: CGPoint(x: 230.65, y: 193.11))
        wall2Path.addCurve(to: CGPoint(x: 224.02, y: 186.12), controlPoint1: CGPoint(x: 224.89, y: 189.41), controlPoint2: CGPoint(x: 224.02, y: 187.83))
        wall2Path.addLine(to: CGPoint(x: 224.02, y: 85.88))
        wall2Path.addLine(to: CGPoint(x: 226.35, y: 90.1))
        wall2Path.addCurve(to: CGPoint(x: 223.81, y: 88.49), controlPoint1: CGPoint(x: 225.89, y: 89.81), controlPoint2: CGPoint(x: 225.89, y: 89.81))
        wall2Path.addCurve(to: CGPoint(x: 216.97, y: 84.15), controlPoint1: CGPoint(x: 221.01, y: 86.71), controlPoint2: CGPoint(x: 221.01, y: 86.71))
        wall2Path.addCurve(to: CGPoint(x: 195.11, y: 70.29), controlPoint1: CGPoint(x: 207.34, y: 78.04), controlPoint2: CGPoint(x: 207.34, y: 78.04))
        wall2Path.close()
        context.saveGState()
        wall2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 188.25, y: 35.75), end: CGPoint(x: 188.25, y: 680.53), options: [])
        context.restoreGState()

        ////// wall 2 Inner Shadow
        context.saveGState()
        context.clip(to: wall2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let wall2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: wall2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        wall2OpaqueShadow.setFill()
        wall2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole77(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 268.46, y: 230.4))
        bezier3Path.addCurve(to: CGPoint(x: 284.09, y: 214.1), controlPoint1: CGPoint(x: 277.42, y: 221.05), controlPoint2: CGPoint(x: 277.42, y: 221.05))
        bezier3Path.addCurve(to: CGPoint(x: 288.72, y: 209.29), controlPoint1: CGPoint(x: 286.84, y: 211.24), controlPoint2: CGPoint(x: 286.84, y: 211.24))
        bezier3Path.addCurve(to: CGPoint(x: 290.39, y: 207.54), controlPoint1: CGPoint(x: 290.1, y: 207.85), controlPoint2: CGPoint(x: 290.1, y: 207.85))
        bezier3Path.addCurve(to: CGPoint(x: 297.61, y: 207.54), controlPoint1: CGPoint(x: 292.36, y: 205.49), controlPoint2: CGPoint(x: 295.64, y: 205.49))
        bezier3Path.addLine(to: CGPoint(x: 377.72, y: 291.04))
        bezier3Path.addCurve(to: CGPoint(x: 379.11, y: 294.5), controlPoint1: CGPoint(x: 378.61, y: 291.97), controlPoint2: CGPoint(x: 379.11, y: 293.21))
        bezier3Path.addLine(to: CGPoint(x: 379.11, y: 461.5))
        bezier3Path.addCurve(to: CGPoint(x: 377.72, y: 464.96), controlPoint1: CGPoint(x: 379.11, y: 462.79), controlPoint2: CGPoint(x: 378.61, y: 464.03))
        bezier3Path.addLine(to: CGPoint(x: 297.61, y: 548.46))
        bezier3Path.addCurve(to: CGPoint(x: 290.39, y: 548.46), controlPoint1: CGPoint(x: 295.64, y: 550.51), controlPoint2: CGPoint(x: 292.36, y: 550.51))
        bezier3Path.addCurve(to: CGPoint(x: 288.72, y: 546.71), controlPoint1: CGPoint(x: 290.1, y: 548.15), controlPoint2: CGPoint(x: 290.1, y: 548.15))
        bezier3Path.addCurve(to: CGPoint(x: 284.09, y: 541.9), controlPoint1: CGPoint(x: 286.84, y: 544.76), controlPoint2: CGPoint(x: 286.84, y: 544.76))
        bezier3Path.addCurve(to: CGPoint(x: 268.46, y: 525.6), controlPoint1: CGPoint(x: 277.42, y: 534.95), controlPoint2: CGPoint(x: 277.42, y: 534.95))
        bezier3Path.addLine(to: CGPoint(x: 276.35, y: 524.73))
        bezier3Path.addCurve(to: CGPoint(x: 243.33, y: 579.34), controlPoint1: CGPoint(x: 269.5, y: 536.06), controlPoint2: CGPoint(x: 258.06, y: 554.97))
        bezier3Path.addCurve(to: CGPoint(x: 215.8, y: 624.88), controlPoint1: CGPoint(x: 228.31, y: 604.18), controlPoint2: CGPoint(x: 228.31, y: 604.18))
        bezier3Path.addCurve(to: CGPoint(x: 206.72, y: 639.89), controlPoint1: CGPoint(x: 210.48, y: 633.68), controlPoint2: CGPoint(x: 210.48, y: 633.68))
        bezier3Path.addCurve(to: CGPoint(x: 203.28, y: 645.59), controlPoint1: CGPoint(x: 203.9, y: 644.55), controlPoint2: CGPoint(x: 203.9, y: 644.55))
        bezier3Path.addCurve(to: CGPoint(x: 194.72, y: 645.59), controlPoint1: CGPoint(x: 201.33, y: 648.8), controlPoint2: CGPoint(x: 196.67, y: 648.8))
        bezier3Path.addCurve(to: CGPoint(x: 191.28, y: 639.89), controlPoint1: CGPoint(x: 194.1, y: 644.55), controlPoint2: CGPoint(x: 194.1, y: 644.55))
        bezier3Path.addCurve(to: CGPoint(x: 182.2, y: 624.88), controlPoint1: CGPoint(x: 187.52, y: 633.68), controlPoint2: CGPoint(x: 187.52, y: 633.68))
        bezier3Path.addCurve(to: CGPoint(x: 154.67, y: 579.34), controlPoint1: CGPoint(x: 169.69, y: 604.18), controlPoint2: CGPoint(x: 169.69, y: 604.18))
        bezier3Path.addCurve(to: CGPoint(x: 122.42, y: 526.01), controlPoint1: CGPoint(x: 136.23, y: 548.84), controlPoint2: CGPoint(x: 136.23, y: 548.84))
        bezier3Path.addLine(to: CGPoint(x: 130.31, y: 526.88))
        bezier3Path.addCurve(to: CGPoint(x: 115.52, y: 542.3), controlPoint1: CGPoint(x: 121.81, y: 535.75), controlPoint2: CGPoint(x: 121.81, y: 535.75))
        bezier3Path.addCurve(to: CGPoint(x: 109.61, y: 548.46), controlPoint1: CGPoint(x: 110.72, y: 547.31), controlPoint2: CGPoint(x: 110.72, y: 547.31))
        bezier3Path.addCurve(to: CGPoint(x: 102.39, y: 548.46), controlPoint1: CGPoint(x: 107.64, y: 550.51), controlPoint2: CGPoint(x: 104.36, y: 550.51))
        bezier3Path.addLine(to: CGPoint(x: 22.28, y: 464.96))
        bezier3Path.addCurve(to: CGPoint(x: 20.89, y: 461.5), controlPoint1: CGPoint(x: 21.39, y: 464.03), controlPoint2: CGPoint(x: 20.89, y: 462.79))
        bezier3Path.addLine(to: CGPoint(x: 20.89, y: 294.5))
        bezier3Path.addCurve(to: CGPoint(x: 22.28, y: 291.04), controlPoint1: CGPoint(x: 20.89, y: 293.21), controlPoint2: CGPoint(x: 21.39, y: 291.97))
        bezier3Path.addLine(to: CGPoint(x: 102.39, y: 207.54))
        bezier3Path.addCurve(to: CGPoint(x: 109.61, y: 207.54), controlPoint1: CGPoint(x: 104.36, y: 205.49), controlPoint2: CGPoint(x: 107.64, y: 205.49))
        bezier3Path.addCurve(to: CGPoint(x: 115.52, y: 213.7), controlPoint1: CGPoint(x: 110.72, y: 208.69), controlPoint2: CGPoint(x: 110.72, y: 208.69))
        bezier3Path.addCurve(to: CGPoint(x: 130.31, y: 229.12), controlPoint1: CGPoint(x: 121.81, y: 220.25), controlPoint2: CGPoint(x: 121.81, y: 220.25))
        bezier3Path.addLine(to: CGPoint(x: 122.42, y: 229.99))
        bezier3Path.addCurve(to: CGPoint(x: 165.98, y: 157.95), controlPoint1: CGPoint(x: 131.22, y: 215.45), controlPoint2: CGPoint(x: 146.6, y: 190))
        bezier3Path.addCurve(to: CGPoint(x: 186.11, y: 124.65), controlPoint1: CGPoint(x: 177.32, y: 139.2), controlPoint2: CGPoint(x: 177.32, y: 139.2))
        bezier3Path.addCurve(to: CGPoint(x: 192.34, y: 114.34), controlPoint1: CGPoint(x: 189.79, y: 118.57), controlPoint2: CGPoint(x: 189.79, y: 118.57))
        bezier3Path.addCurve(to: CGPoint(x: 194.72, y: 110.42), controlPoint1: CGPoint(x: 194.26, y: 111.18), controlPoint2: CGPoint(x: 194.26, y: 111.18))
        bezier3Path.addCurve(to: CGPoint(x: 203.28, y: 110.42), controlPoint1: CGPoint(x: 196.66, y: 107.2), controlPoint2: CGPoint(x: 201.33, y: 107.2))
        bezier3Path.addCurve(to: CGPoint(x: 206.72, y: 116.11), controlPoint1: CGPoint(x: 203.9, y: 111.45), controlPoint2: CGPoint(x: 203.9, y: 111.45))
        bezier3Path.addCurve(to: CGPoint(x: 215.79, y: 131.12), controlPoint1: CGPoint(x: 210.47, y: 122.32), controlPoint2: CGPoint(x: 210.47, y: 122.32))
        bezier3Path.addCurve(to: CGPoint(x: 243.33, y: 176.66), controlPoint1: CGPoint(x: 225.18, y: 146.64), controlPoint2: CGPoint(x: 234.57, y: 162.17))
        bezier3Path.addLine(to: CGPoint(x: 243.33, y: 176.66))
        bezier3Path.addCurve(to: CGPoint(x: 276.35, y: 231.27), controlPoint1: CGPoint(x: 258.06, y: 201.03), controlPoint2: CGPoint(x: 269.5, y: 219.94))
        bezier3Path.addLine(to: CGPoint(x: 268.46, y: 230.4))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 200, y: 108), end: CGPoint(x: 200, y: 648), options: [])
        context.restoreGState()

        ////// Bezier 3 Inner Shadow
        context.saveGState()
        context.clip(to: bezier3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier3OpaqueShadow.setFill()
        bezier3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 196, y: 575, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 198, y: 195, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 275.68, y: 237.32))
        bezierPath.addCurve(to: CGPoint(x: 267.79, y: 236.45), controlPoint1: CGPoint(x: 273.4, y: 239.69), controlPoint2: CGPoint(x: 269.49, y: 239.26))
        bezierPath.addCurve(to: CGPoint(x: 234.77, y: 181.84), controlPoint1: CGPoint(x: 260.94, y: 225.11), controlPoint2: CGPoint(x: 249.51, y: 206.2))
        bezierPath.addLine(to: CGPoint(x: 234.77, y: 181.84))
        bezierPath.addCurve(to: CGPoint(x: 207.24, y: 136.29), controlPoint1: CGPoint(x: 226.01, y: 167.35), controlPoint2: CGPoint(x: 216.62, y: 151.82))
        bezierPath.addCurve(to: CGPoint(x: 198.16, y: 121.28), controlPoint1: CGPoint(x: 201.92, y: 127.49), controlPoint2: CGPoint(x: 201.92, y: 127.49))
        bezierPath.addCurve(to: CGPoint(x: 194.72, y: 115.59), controlPoint1: CGPoint(x: 195.35, y: 116.62), controlPoint2: CGPoint(x: 195.35, y: 116.62))
        bezierPath.addLine(to: CGPoint(x: 199, y: 113))
        bezierPath.addLine(to: CGPoint(x: 203.28, y: 115.59))
        bezierPath.addCurve(to: CGPoint(x: 200.9, y: 119.52), controlPoint1: CGPoint(x: 202.81, y: 116.36), controlPoint2: CGPoint(x: 202.81, y: 116.36))
        bezierPath.addCurve(to: CGPoint(x: 194.67, y: 129.83), controlPoint1: CGPoint(x: 198.35, y: 123.74), controlPoint2: CGPoint(x: 198.35, y: 123.74))
        bezierPath.addCurve(to: CGPoint(x: 174.54, y: 163.12), controlPoint1: CGPoint(x: 185.87, y: 144.37), controlPoint2: CGPoint(x: 185.87, y: 144.37))
        bezierPath.addCurve(to: CGPoint(x: 130.98, y: 235.17), controlPoint1: CGPoint(x: 155.16, y: 195.18), controlPoint2: CGPoint(x: 139.77, y: 220.63))
        bezierPath.addCurve(to: CGPoint(x: 123.1, y: 236.04), controlPoint1: CGPoint(x: 129.28, y: 237.98), controlPoint2: CGPoint(x: 125.37, y: 238.42))
        bezierPath.addCurve(to: CGPoint(x: 108.31, y: 220.63), controlPoint1: CGPoint(x: 114.59, y: 227.18), controlPoint2: CGPoint(x: 114.59, y: 227.18))
        bezierPath.addCurve(to: CGPoint(x: 102.39, y: 214.46), controlPoint1: CGPoint(x: 103.5, y: 215.62), controlPoint2: CGPoint(x: 103.5, y: 215.62))
        bezierPath.addLine(to: CGPoint(x: 109.61, y: 214.46))
        bezierPath.addLine(to: CGPoint(x: 29.5, y: 297.96))
        bezierPath.addLine(to: CGPoint(x: 30.89, y: 294.5))
        bezierPath.addLine(to: CGPoint(x: 30.89, y: 461.5))
        bezierPath.addLine(to: CGPoint(x: 29.5, y: 458.04))
        bezierPath.addLine(to: CGPoint(x: 109.61, y: 541.54))
        bezierPath.addLine(to: CGPoint(x: 102.39, y: 541.54))
        bezierPath.addCurve(to: CGPoint(x: 108.31, y: 535.37), controlPoint1: CGPoint(x: 103.5, y: 540.38), controlPoint2: CGPoint(x: 103.5, y: 540.38))
        bezierPath.addCurve(to: CGPoint(x: 123.1, y: 519.96), controlPoint1: CGPoint(x: 114.59, y: 528.82), controlPoint2: CGPoint(x: 114.59, y: 528.82))
        bezierPath.addCurve(to: CGPoint(x: 130.98, y: 520.83), controlPoint1: CGPoint(x: 125.37, y: 517.58), controlPoint2: CGPoint(x: 129.28, y: 518.02))
        bezierPath.addCurve(to: CGPoint(x: 163.23, y: 574.16), controlPoint1: CGPoint(x: 144.79, y: 543.67), controlPoint2: CGPoint(x: 144.79, y: 543.67))
        bezierPath.addCurve(to: CGPoint(x: 190.76, y: 619.71), controlPoint1: CGPoint(x: 178.25, y: 599.01), controlPoint2: CGPoint(x: 178.25, y: 599.01))
        bezierPath.addCurve(to: CGPoint(x: 199.84, y: 634.72), controlPoint1: CGPoint(x: 196.08, y: 628.51), controlPoint2: CGPoint(x: 196.08, y: 628.51))
        bezierPath.addCurve(to: CGPoint(x: 203.28, y: 640.41), controlPoint1: CGPoint(x: 202.65, y: 639.38), controlPoint2: CGPoint(x: 202.65, y: 639.38))
        bezierPath.addLine(to: CGPoint(x: 194.72, y: 640.41))
        bezierPath.addCurve(to: CGPoint(x: 198.16, y: 634.72), controlPoint1: CGPoint(x: 195.35, y: 639.38), controlPoint2: CGPoint(x: 195.35, y: 639.38))
        bezierPath.addCurve(to: CGPoint(x: 207.24, y: 619.71), controlPoint1: CGPoint(x: 201.92, y: 628.51), controlPoint2: CGPoint(x: 201.92, y: 628.51))
        bezierPath.addCurve(to: CGPoint(x: 234.77, y: 574.16), controlPoint1: CGPoint(x: 219.75, y: 599.01), controlPoint2: CGPoint(x: 219.75, y: 599.01))
        bezierPath.addCurve(to: CGPoint(x: 267.79, y: 519.55), controlPoint1: CGPoint(x: 249.51, y: 549.8), controlPoint2: CGPoint(x: 260.94, y: 530.89))
        bezierPath.addCurve(to: CGPoint(x: 275.68, y: 518.68), controlPoint1: CGPoint(x: 269.49, y: 516.74), controlPoint2: CGPoint(x: 273.4, y: 516.31))
        bezierPath.addCurve(to: CGPoint(x: 291.31, y: 534.97), controlPoint1: CGPoint(x: 284.64, y: 528.02), controlPoint2: CGPoint(x: 284.64, y: 528.02))
        bezierPath.addCurve(to: CGPoint(x: 295.93, y: 539.79), controlPoint1: CGPoint(x: 294.06, y: 537.84), controlPoint2: CGPoint(x: 294.06, y: 537.84))
        bezierPath.addCurve(to: CGPoint(x: 297.61, y: 541.54), controlPoint1: CGPoint(x: 297.31, y: 541.23), controlPoint2: CGPoint(x: 297.31, y: 541.23))
        bezierPath.addLine(to: CGPoint(x: 290.39, y: 541.54))
        bezierPath.addLine(to: CGPoint(x: 370.5, y: 458.04))
        bezierPath.addLine(to: CGPoint(x: 369.11, y: 461.5))
        bezierPath.addLine(to: CGPoint(x: 369.11, y: 294.5))
        bezierPath.addLine(to: CGPoint(x: 370.5, y: 297.96))
        bezierPath.addLine(to: CGPoint(x: 290.39, y: 214.46))
        bezierPath.addLine(to: CGPoint(x: 297.61, y: 214.46))
        bezierPath.addCurve(to: CGPoint(x: 295.93, y: 216.21), controlPoint1: CGPoint(x: 297.31, y: 214.77), controlPoint2: CGPoint(x: 297.31, y: 214.77))
        bezierPath.addCurve(to: CGPoint(x: 291.31, y: 221.03), controlPoint1: CGPoint(x: 294.06, y: 218.16), controlPoint2: CGPoint(x: 294.06, y: 218.16))
        bezierPath.addCurve(to: CGPoint(x: 275.68, y: 237.32), controlPoint1: CGPoint(x: 284.64, y: 227.98), controlPoint2: CGPoint(x: 284.64, y: 227.98))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 200, y: 113), end: CGPoint(x: 200, y: 640.41), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 200, y: 267))
        bezier2Path.addLine(to: CGPoint(x: 159, y: 267))
        bezier2Path.addLine(to: CGPoint(x: 163.57, y: 264.02))
        bezier2Path.addLine(to: CGPoint(x: 128.46, y: 343.3))
        bezier2Path.addLine(to: CGPoint(x: 128.89, y: 341.28))
        bezier2Path.addLine(to: CGPoint(x: 128.89, y: 414.22))
        bezier2Path.addLine(to: CGPoint(x: 127.5, y: 410.76))
        bezier2Path.addLine(to: CGPoint(x: 162.49, y: 447.23))
        bezier2Path.addLine(to: CGPoint(x: 155.28, y: 447.23))
        bezier2Path.addCurve(to: CGPoint(x: 157.86, y: 444.54), controlPoint1: CGPoint(x: 155.76, y: 446.73), controlPoint2: CGPoint(x: 155.76, y: 446.73))
        bezier2Path.addCurve(to: CGPoint(x: 164.32, y: 437.81), controlPoint1: CGPoint(x: 160.61, y: 441.68), controlPoint2: CGPoint(x: 160.61, y: 441.68))
        bezier2Path.addCurve(to: CGPoint(x: 172.21, y: 438.68), controlPoint1: CGPoint(x: 166.6, y: 435.43), controlPoint2: CGPoint(x: 170.51, y: 435.87))
        bezier2Path.addCurve(to: CGPoint(x: 186.29, y: 461.98), controlPoint1: CGPoint(x: 178.24, y: 448.66), controlPoint2: CGPoint(x: 178.24, y: 448.66))
        bezier2Path.addCurve(to: CGPoint(x: 198.32, y: 481.87), controlPoint1: CGPoint(x: 192.85, y: 472.83), controlPoint2: CGPoint(x: 192.85, y: 472.83))
        bezier2Path.addCurve(to: CGPoint(x: 202.28, y: 488.43), controlPoint1: CGPoint(x: 200.64, y: 485.71), controlPoint2: CGPoint(x: 200.64, y: 485.71))
        bezier2Path.addCurve(to: CGPoint(x: 203.79, y: 490.91), controlPoint1: CGPoint(x: 203.51, y: 490.46), controlPoint2: CGPoint(x: 203.51, y: 490.46))
        bezier2Path.addLine(to: CGPoint(x: 199.45, y: 488.5))
        bezier2Path.addLine(to: CGPoint(x: 240.94, y: 488))
        bezier2Path.addLine(to: CGPoint(x: 236.43, y: 490.97))
        bezier2Path.addLine(to: CGPoint(x: 271.43, y: 412.19))
        bezier2Path.addLine(to: CGPoint(x: 271, y: 414.22))
        bezier2Path.addLine(to: CGPoint(x: 271, y: 341.28))
        bezier2Path.addCurve(to: CGPoint(x: 271.25, y: 339.73), controlPoint1: CGPoint(x: 271, y: 340.75), controlPoint2: CGPoint(x: 271.08, y: 340.23))
        bezier2Path.addLine(to: CGPoint(x: 289.25, y: 284.45))
        bezier2Path.addLine(to: CGPoint(x: 295.67, y: 290.71))
        bezier2Path.addLine(to: CGPoint(x: 242.68, y: 309.52))
        bezier2Path.addLine(to: CGPoint(x: 244.62, y: 308.27))
        bezier2Path.addCurve(to: CGPoint(x: 241.86, y: 311.14), controlPoint1: CGPoint(x: 244.1, y: 308.81), controlPoint2: CGPoint(x: 244.1, y: 308.81))
        bezier2Path.addCurve(to: CGPoint(x: 235.04, y: 318.25), controlPoint1: CGPoint(x: 238.95, y: 314.17), controlPoint2: CGPoint(x: 238.95, y: 314.17))
        bezier2Path.addCurve(to: CGPoint(x: 227.15, y: 317.38), controlPoint1: CGPoint(x: 232.76, y: 320.63), controlPoint2: CGPoint(x: 228.85, y: 320.19))
        bezier2Path.addCurve(to: CGPoint(x: 211.69, y: 291.45), controlPoint1: CGPoint(x: 225.44, y: 314.54), controlPoint2: CGPoint(x: 219.89, y: 305.23))
        bezier2Path.addCurve(to: CGPoint(x: 211.65, y: 291.39), controlPoint1: CGPoint(x: 211.67, y: 291.42), controlPoint2: CGPoint(x: 211.67, y: 291.42))
        bezier2Path.addCurve(to: CGPoint(x: 200.68, y: 272.94), controlPoint1: CGPoint(x: 208.16, y: 285.52), controlPoint2: CGPoint(x: 204.42, y: 279.23))
        bezier2Path.addCurve(to: CGPoint(x: 197.07, y: 266.86), controlPoint1: CGPoint(x: 199.38, y: 270.74), controlPoint2: CGPoint(x: 198.16, y: 268.69))
        bezier2Path.addCurve(to: CGPoint(x: 196.06, y: 265.16), controlPoint1: CGPoint(x: 196.46, y: 265.84), controlPoint2: CGPoint(x: 196.46, y: 265.84))
        bezier2Path.addCurve(to: CGPoint(x: 195.7, y: 264.55), controlPoint1: CGPoint(x: 195.76, y: 264.66), controlPoint2: CGPoint(x: 195.76, y: 264.66))
        bezier2Path.addLine(to: CGPoint(x: 200, y: 267))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 211.59, y: 264.02), end: CGPoint(x: 211.59, y: 490.97), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 200, y: 257))
        bezier4Path.addCurve(to: CGPoint(x: 204.3, y: 259.45), controlPoint1: CGPoint(x: 201.76, y: 257), controlPoint2: CGPoint(x: 203.4, y: 257.93))
        bezier4Path.addCurve(to: CGPoint(x: 204.66, y: 260.05), controlPoint1: CGPoint(x: 204.36, y: 259.55), controlPoint2: CGPoint(x: 204.36, y: 259.55))
        bezier4Path.addCurve(to: CGPoint(x: 205.67, y: 261.75), controlPoint1: CGPoint(x: 205.06, y: 260.73), controlPoint2: CGPoint(x: 205.06, y: 260.73))
        bezier4Path.addCurve(to: CGPoint(x: 209.28, y: 267.83), controlPoint1: CGPoint(x: 206.76, y: 263.59), controlPoint2: CGPoint(x: 207.97, y: 265.63))
        bezier4Path.addCurve(to: CGPoint(x: 220.25, y: 286.28), controlPoint1: CGPoint(x: 213.02, y: 274.12), controlPoint2: CGPoint(x: 216.76, y: 280.41))
        bezier4Path.addCurve(to: CGPoint(x: 220.28, y: 286.34), controlPoint1: CGPoint(x: 220.26, y: 286.31), controlPoint2: CGPoint(x: 220.26, y: 286.31))
        bezier4Path.addCurve(to: CGPoint(x: 235.71, y: 312.2), controlPoint1: CGPoint(x: 228.46, y: 300.09), controlPoint2: CGPoint(x: 234.01, y: 309.4))
        bezier4Path.addLine(to: CGPoint(x: 227.82, y: 311.33))
        bezier4Path.addCurve(to: CGPoint(x: 234.65, y: 304.21), controlPoint1: CGPoint(x: 231.74, y: 307.25), controlPoint2: CGPoint(x: 231.74, y: 307.25))
        bezier4Path.addCurve(to: CGPoint(x: 237.4, y: 301.34), controlPoint1: CGPoint(x: 236.88, y: 301.88), controlPoint2: CGPoint(x: 236.88, y: 301.88))
        bezier4Path.addCurve(to: CGPoint(x: 239.34, y: 300.09), controlPoint1: CGPoint(x: 237.94, y: 300.78), controlPoint2: CGPoint(x: 238.6, y: 300.35))
        bezier4Path.addLine(to: CGPoint(x: 292.33, y: 281.29))
        bezier4Path.addCurve(to: CGPoint(x: 298.75, y: 287.55), controlPoint1: CGPoint(x: 296.24, y: 279.9), controlPoint2: CGPoint(x: 300.04, y: 283.6))
        bezier4Path.addLine(to: CGPoint(x: 280.75, y: 342.83))
        bezier4Path.addLine(to: CGPoint(x: 281, y: 341.28))
        bezier4Path.addLine(to: CGPoint(x: 281, y: 414.22))
        bezier4Path.addCurve(to: CGPoint(x: 280.57, y: 416.25), controlPoint1: CGPoint(x: 281, y: 414.92), controlPoint2: CGPoint(x: 280.85, y: 415.61))
        bezier4Path.addLine(to: CGPoint(x: 245.57, y: 495.03))
        bezier4Path.addCurve(to: CGPoint(x: 241.06, y: 498), controlPoint1: CGPoint(x: 244.78, y: 496.82), controlPoint2: CGPoint(x: 243.01, y: 497.98))
        bezier4Path.addLine(to: CGPoint(x: 199.57, y: 498.5))
        bezier4Path.addCurve(to: CGPoint(x: 195.23, y: 496.09), controlPoint1: CGPoint(x: 197.8, y: 498.52), controlPoint2: CGPoint(x: 196.15, y: 497.6))
        bezier4Path.addCurve(to: CGPoint(x: 193.73, y: 493.6), controlPoint1: CGPoint(x: 194.96, y: 495.63), controlPoint2: CGPoint(x: 194.96, y: 495.63))
        bezier4Path.addCurve(to: CGPoint(x: 189.76, y: 487.04), controlPoint1: CGPoint(x: 192.09, y: 490.89), controlPoint2: CGPoint(x: 192.09, y: 490.89))
        bezier4Path.addCurve(to: CGPoint(x: 177.73, y: 467.15), controlPoint1: CGPoint(x: 184.3, y: 478), controlPoint2: CGPoint(x: 184.3, y: 478))
        bezier4Path.addCurve(to: CGPoint(x: 163.65, y: 443.86), controlPoint1: CGPoint(x: 169.68, y: 453.83), controlPoint2: CGPoint(x: 169.68, y: 453.83))
        bezier4Path.addLine(to: CGPoint(x: 171.54, y: 444.73))
        bezier4Path.addCurve(to: CGPoint(x: 165.08, y: 451.46), controlPoint1: CGPoint(x: 167.82, y: 448.6), controlPoint2: CGPoint(x: 167.82, y: 448.6))
        bezier4Path.addCurve(to: CGPoint(x: 162.49, y: 454.16), controlPoint1: CGPoint(x: 162.98, y: 453.65), controlPoint2: CGPoint(x: 162.98, y: 453.65))
        bezier4Path.addCurve(to: CGPoint(x: 155.28, y: 454.16), controlPoint1: CGPoint(x: 160.53, y: 456.21), controlPoint2: CGPoint(x: 157.25, y: 456.21))
        bezier4Path.addLine(to: CGPoint(x: 120.28, y: 417.68))
        bezier4Path.addCurve(to: CGPoint(x: 118.89, y: 414.22), controlPoint1: CGPoint(x: 119.39, y: 416.75), controlPoint2: CGPoint(x: 118.89, y: 415.51))
        bezier4Path.addLine(to: CGPoint(x: 118.89, y: 341.28))
        bezier4Path.addCurve(to: CGPoint(x: 119.32, y: 339.25), controlPoint1: CGPoint(x: 118.89, y: 340.58), controlPoint2: CGPoint(x: 119.04, y: 339.89))
        bezier4Path.addLine(to: CGPoint(x: 154.43, y: 259.98))
        bezier4Path.addCurve(to: CGPoint(x: 159, y: 257), controlPoint1: CGPoint(x: 155.23, y: 258.17), controlPoint2: CGPoint(x: 157.02, y: 257))
        bezier4Path.addLine(to: CGPoint(x: 200, y: 257))
        bezier4Path.close()
        context.saveGState()
        bezier4Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 208.95, y: 257), end: CGPoint(x: 208.95, y: 498.5), options: [])
        context.restoreGState()

        ////// Bezier 4 Inner Shadow
        context.saveGState()
        context.clip(to: bezier4Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier4OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier4OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier4OpaqueShadow.setFill()
        bezier4Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole88(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 329.03, y: 261.63))
        bezier2Path.addCurve(to: CGPoint(x: 323, y: 311), controlPoint1: CGPoint(x: 325.05, y: 281.16), controlPoint2: CGPoint(x: 323, y: 297.4))
        bezier2Path.addCurve(to: CGPoint(x: 323.5, y: 335.44), controlPoint1: CGPoint(x: 323, y: 313.6), controlPoint2: CGPoint(x: 323.01, y: 313.92))
        bezier2Path.addCurve(to: CGPoint(x: 323.58, y: 338.82), controlPoint1: CGPoint(x: 323.53, y: 336.65), controlPoint2: CGPoint(x: 323.55, y: 337.76))
        bezier2Path.addCurve(to: CGPoint(x: 324, y: 364), controlPoint1: CGPoint(x: 323.86, y: 351.44), controlPoint2: CGPoint(x: 324, y: 359.33))
        bezier2Path.addCurve(to: CGPoint(x: 202.5, y: 537), controlPoint1: CGPoint(x: 324, y: 459.24), controlPoint2: CGPoint(x: 270.08, y: 537))
        bezier2Path.addCurve(to: CGPoint(x: 141.45, y: 513.7), controlPoint1: CGPoint(x: 180.7, y: 537), controlPoint2: CGPoint(x: 159.79, y: 528.86))
        bezier2Path.addLine(to: CGPoint(x: 147.29, y: 514.09))
        bezier2Path.addCurve(to: CGPoint(x: 111.16, y: 584.46), controlPoint1: CGPoint(x: 124.25, y: 528.47), controlPoint2: CGPoint(x: 114.49, y: 550.22))
        bezier2Path.addCurve(to: CGPoint(x: 109.56, y: 609.16), controlPoint1: CGPoint(x: 110.5, y: 591.28), controlPoint2: CGPoint(x: 110.19, y: 596.31))
        bezier2Path.addCurve(to: CGPoint(x: 102.12, y: 657.34), controlPoint1: CGPoint(x: 108.28, y: 635.43), controlPoint2: CGPoint(x: 106.91, y: 646.33))
        bezier2Path.addCurve(to: CGPoint(x: 64.17, y: 681), controlPoint1: CGPoint(x: 95.61, y: 672.32), controlPoint2: CGPoint(x: 83.44, y: 680.35))
        bezier2Path.addCurve(to: CGPoint(x: 24.41, y: 630.46), controlPoint1: CGPoint(x: 34.18, y: 682.01), controlPoint2: CGPoint(x: 21.93, y: 663.88))
        bezier2Path.addCurve(to: CGPoint(x: 34.07, y: 581.09), controlPoint1: CGPoint(x: 25.4, y: 617.08), controlPoint2: CGPoint(x: 28.62, y: 601.1))
        bezier2Path.addCurve(to: CGPoint(x: 51.28, y: 524.33), controlPoint1: CGPoint(x: 38.06, y: 566.43), controlPoint2: CGPoint(x: 40.74, y: 557.69))
        bezier2Path.addCurve(to: CGPoint(x: 54.89, y: 512.81), controlPoint1: CGPoint(x: 52.72, y: 519.74), controlPoint2: CGPoint(x: 53.83, y: 516.23))
        bezier2Path.addCurve(to: CGPoint(x: 75.58, y: 433.24), controlPoint1: CGPoint(x: 66.05, y: 477.1), controlPoint2: CGPoint(x: 72.2, y: 454.2))
        bezier2Path.addCurve(to: CGPoint(x: 81.73, y: 429.19), controlPoint1: CGPoint(x: 76.05, y: 430.35), controlPoint2: CGPoint(x: 78.89, y: 428.48))
        bezier2Path.addCurve(to: CGPoint(x: 95.88, y: 432.73), controlPoint1: CGPoint(x: 86.64, y: 430.42), controlPoint2: CGPoint(x: 86.64, y: 430.42))
        bezier2Path.addCurve(to: CGPoint(x: 118.68, y: 438.44), controlPoint1: CGPoint(x: 106.56, y: 435.41), controlPoint2: CGPoint(x: 106.56, y: 435.41))
        bezier2Path.addCurve(to: CGPoint(x: 144.98, y: 445.03), controlPoint1: CGPoint(x: 133.02, y: 442.03), controlPoint2: CGPoint(x: 133.02, y: 442.03))
        bezier2Path.addCurve(to: CGPoint(x: 153.64, y: 447.2), controlPoint1: CGPoint(x: 150.06, y: 446.3), controlPoint2: CGPoint(x: 150.06, y: 446.3))
        bezier2Path.addCurve(to: CGPoint(x: 156.93, y: 448.02), controlPoint1: CGPoint(x: 156.33, y: 447.87), controlPoint2: CGPoint(x: 156.33, y: 447.87))
        bezier2Path.addLine(to: CGPoint(x: 152.7, y: 448.88))
        bezier2Path.addCurve(to: CGPoint(x: 152.96, y: 448.68), controlPoint1: CGPoint(x: 152.73, y: 448.86), controlPoint2: CGPoint(x: 152.82, y: 448.79))
        bezier2Path.addCurve(to: CGPoint(x: 153.83, y: 447.99), controlPoint1: CGPoint(x: 153.21, y: 448.48), controlPoint2: CGPoint(x: 153.5, y: 448.25))
        bezier2Path.addCurve(to: CGPoint(x: 157.01, y: 445.27), controlPoint1: CGPoint(x: 154.78, y: 447.21), controlPoint2: CGPoint(x: 155.85, y: 446.3))
        bezier2Path.addCurve(to: CGPoint(x: 166.71, y: 435.43), controlPoint1: CGPoint(x: 160.32, y: 442.32), controlPoint2: CGPoint(x: 163.63, y: 439.01))
        bezier2Path.addCurve(to: CGPoint(x: 179.84, y: 402), controlPoint1: CGPoint(x: 176.79, y: 423.72), controlPoint2: CGPoint(x: 181.9, y: 412.15))
        bezier2Path.addCurve(to: CGPoint(x: 179.43, y: 400.34), controlPoint1: CGPoint(x: 179.72, y: 401.44), controlPoint2: CGPoint(x: 179.59, y: 400.89))
        bezier2Path.addCurve(to: CGPoint(x: 123.49, y: 351.12), controlPoint1: CGPoint(x: 173.39, y: 379.14), controlPoint2: CGPoint(x: 153.6, y: 363.34))
        bezier2Path.addCurve(to: CGPoint(x: 111.15, y: 348.56), controlPoint1: CGPoint(x: 117.75, y: 348.79), controlPoint2: CGPoint(x: 113.85, y: 348.09))
        bezier2Path.addCurve(to: CGPoint(x: 105.39, y: 352.06), controlPoint1: CGPoint(x: 109.21, y: 348.89), controlPoint2: CGPoint(x: 107.72, y: 349.82))
        bezier2Path.addCurve(to: CGPoint(x: 101.39, y: 356.01), controlPoint1: CGPoint(x: 105.07, y: 352.37), controlPoint2: CGPoint(x: 102.33, y: 355.12))
        bezier2Path.addCurve(to: CGPoint(x: 88.15, y: 364.07), controlPoint1: CGPoint(x: 97.39, y: 359.76), controlPoint2: CGPoint(x: 93.45, y: 362.32))
        bezier2Path.addCurve(to: CGPoint(x: 81.62, y: 358.69), controlPoint1: CGPoint(x: 84.65, y: 365.23), controlPoint2: CGPoint(x: 81.15, y: 362.34))
        bezier2Path.addCurve(to: CGPoint(x: 102.85, y: 272.36), controlPoint1: CGPoint(x: 85.88, y: 325.53), controlPoint2: CGPoint(x: 92.96, y: 296.51))
        bezier2Path.addCurve(to: CGPoint(x: 110.6, y: 270.35), controlPoint1: CGPoint(x: 104.12, y: 269.27), controlPoint2: CGPoint(x: 107.99, y: 268.27))
        bezier2Path.addCurve(to: CGPoint(x: 120.26, y: 280.37), controlPoint1: CGPoint(x: 113.19, y: 272.42), controlPoint2: CGPoint(x: 115.9, y: 275.3))
        bezier2Path.addCurve(to: CGPoint(x: 125.71, y: 286.75), controlPoint1: CGPoint(x: 121.17, y: 281.43), controlPoint2: CGPoint(x: 124.81, y: 285.71))
        bezier2Path.addCurve(to: CGPoint(x: 131.65, y: 293.5), controlPoint1: CGPoint(x: 127.94, y: 289.36), controlPoint2: CGPoint(x: 129.8, y: 291.47))
        bezier2Path.addCurve(to: CGPoint(x: 167.02, y: 316.55), controlPoint1: CGPoint(x: 144.62, y: 307.71), controlPoint2: CGPoint(x: 155.67, y: 315.48))
        bezier2Path.addCurve(to: CGPoint(x: 210.27, y: 282.57), controlPoint1: CGPoint(x: 188.48, y: 318.57), controlPoint2: CGPoint(x: 200.28, y: 308.19))
        bezier2Path.addCurve(to: CGPoint(x: 199.04, y: 231.05), controlPoint1: CGPoint(x: 217.8, y: 263.26), controlPoint2: CGPoint(x: 214.69, y: 251.39))
        bezier2Path.addCurve(to: CGPoint(x: 180.09, y: 217.44), controlPoint1: CGPoint(x: 193.53, y: 223.89), controlPoint2: CGPoint(x: 187.41, y: 219.71))
        bezier2Path.addCurve(to: CGPoint(x: 162.55, y: 214.78), controlPoint1: CGPoint(x: 175.33, y: 215.96), controlPoint2: CGPoint(x: 171.57, y: 215.46))
        bezier2Path.addCurve(to: CGPoint(x: 156.59, y: 214.26), controlPoint1: CGPoint(x: 159.74, y: 214.56), controlPoint2: CGPoint(x: 158.25, y: 214.44))
        bezier2Path.addCurve(to: CGPoint(x: 154.49, y: 205.05), controlPoint1: CGPoint(x: 151.88, y: 213.74), controlPoint2: CGPoint(x: 150.47, y: 207.56))
        bezier2Path.addCurve(to: CGPoint(x: 174.3, y: 195.66), controlPoint1: CGPoint(x: 160.74, y: 201.14), controlPoint2: CGPoint(x: 167.34, y: 198.01))
        bezier2Path.addCurve(to: CGPoint(x: 202.5, y: 191), controlPoint1: CGPoint(x: 183.46, y: 192.58), controlPoint2: CGPoint(x: 192.91, y: 191))
        bezier2Path.addCurve(to: CGPoint(x: 253.41, y: 206.8), controlPoint1: CGPoint(x: 220.34, y: 191), controlPoint2: CGPoint(x: 237.62, y: 196.45))
        bezier2Path.addLine(to: CGPoint(x: 250.67, y: 210.99))
        bezier2Path.addLine(to: CGPoint(x: 248.26, y: 206.6))
        bezier2Path.addCurve(to: CGPoint(x: 249.53, y: 205.89), controlPoint1: CGPoint(x: 248.69, y: 206.37), controlPoint2: CGPoint(x: 249.11, y: 206.13))
        bezier2Path.addCurve(to: CGPoint(x: 291.23, y: 131.67), controlPoint1: CGPoint(x: 274.82, y: 191.47), controlPoint2: CGPoint(x: 286.4, y: 168.1))
        bezier2Path.addCurve(to: CGPoint(x: 294.02, y: 101.79), controlPoint1: CGPoint(x: 292.32, y: 123.44), controlPoint2: CGPoint(x: 292.8, y: 117.99))
        bezier2Path.addCurve(to: CGPoint(x: 301.85, y: 55.63), controlPoint1: CGPoint(x: 295.91, y: 76.8), controlPoint2: CGPoint(x: 297.48, y: 66.01))
        bezier2Path.addCurve(to: CGPoint(x: 335, y: 34), controlPoint1: CGPoint(x: 307.83, y: 41.44), controlPoint2: CGPoint(x: 318.51, y: 34))
        bezier2Path.addCurve(to: CGPoint(x: 364.05, y: 49.44), controlPoint1: CGPoint(x: 348.61, y: 34), controlPoint2: CGPoint(x: 358.4, y: 39.27))
        bezier2Path.addCurve(to: CGPoint(x: 369.58, y: 86.34), controlPoint1: CGPoint(x: 368.97, y: 58.28), controlPoint2: CGPoint(x: 370.61, y: 70.5))
        bezier2Path.addCurve(to: CGPoint(x: 361.17, y: 135.9), controlPoint1: CGPoint(x: 368.69, y: 99.82), controlPoint2: CGPoint(x: 365.89, y: 115.87))
        bezier2Path.addCurve(to: CGPoint(x: 346.26, y: 192.73), controlPoint1: CGPoint(x: 357.7, y: 150.63), controlPoint2: CGPoint(x: 355.25, y: 159.85))
        bezier2Path.addCurve(to: CGPoint(x: 343.34, y: 203.44), controlPoint1: CGPoint(x: 345.09, y: 197), controlPoint2: CGPoint(x: 344.2, y: 200.26))
        bezier2Path.addCurve(to: CGPoint(x: 329.03, y: 261.63), controlPoint1: CGPoint(x: 336.6, y: 228.31), controlPoint2: CGPoint(x: 332.33, y: 245.41))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.99, y: 34), end: CGPoint(x: 196.99, y: 681.04), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 63, y: 631, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 330, y: 76, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 319.23, y: 259.64))
        bezierPath.addCurve(to: CGPoint(x: 333.69, y: 200.83), controlPoint1: CGPoint(x: 322.58, y: 243.16), controlPoint2: CGPoint(x: 326.89, y: 225.88))
        bezierPath.addCurve(to: CGPoint(x: 336.61, y: 190.09), controlPoint1: CGPoint(x: 334.55, y: 197.64), controlPoint2: CGPoint(x: 335.44, y: 194.37))
        bezierPath.addCurve(to: CGPoint(x: 351.44, y: 133.61), controlPoint1: CGPoint(x: 345.57, y: 157.34), controlPoint2: CGPoint(x: 348.01, y: 148.18))
        bezierPath.addCurve(to: CGPoint(x: 359.6, y: 85.69), controlPoint1: CGPoint(x: 356.04, y: 114.07), controlPoint2: CGPoint(x: 358.76, y: 98.51))
        bezierPath.addCurve(to: CGPoint(x: 335, y: 44), controlPoint1: CGPoint(x: 361.47, y: 57.05), controlPoint2: CGPoint(x: 354.21, y: 44))
        bezierPath.addCurve(to: CGPoint(x: 311.06, y: 59.51), controlPoint1: CGPoint(x: 322.62, y: 44), controlPoint2: CGPoint(x: 315.52, y: 48.95))
        bezierPath.addCurve(to: CGPoint(x: 304, y: 102.54), controlPoint1: CGPoint(x: 307.28, y: 68.5), controlPoint2: CGPoint(x: 305.79, y: 78.74))
        bezierPath.addCurve(to: CGPoint(x: 301.14, y: 132.98), controlPoint1: CGPoint(x: 302.76, y: 118.95), controlPoint2: CGPoint(x: 302.27, y: 124.5))
        bezierPath.addCurve(to: CGPoint(x: 288.62, y: 178.23), controlPoint1: CGPoint(x: 298.77, y: 150.89), controlPoint2: CGPoint(x: 294.96, y: 165.45))
        bezierPath.addCurve(to: CGPoint(x: 254.49, y: 214.58), controlPoint1: CGPoint(x: 280.98, y: 193.64), controlPoint2: CGPoint(x: 269.87, y: 205.8))
        bezierPath.addCurve(to: CGPoint(x: 253.07, y: 215.37), controlPoint1: CGPoint(x: 254.02, y: 214.84), controlPoint2: CGPoint(x: 253.54, y: 215.11))
        bezierPath.addCurve(to: CGPoint(x: 247.92, y: 215.17), controlPoint1: CGPoint(x: 251.45, y: 216.26), controlPoint2: CGPoint(x: 249.47, y: 216.18))
        bezierPath.addCurve(to: CGPoint(x: 202.5, y: 201), controlPoint1: CGPoint(x: 233.72, y: 205.86), controlPoint2: CGPoint(x: 218.34, y: 201))
        bezierPath.addCurve(to: CGPoint(x: 177.49, y: 205.14), controlPoint1: CGPoint(x: 194, y: 201), controlPoint2: CGPoint(x: 185.63, y: 202.4))
        bezierPath.addCurve(to: CGPoint(x: 159.79, y: 213.52), controlPoint1: CGPoint(x: 171.28, y: 207.23), controlPoint2: CGPoint(x: 165.38, y: 210.03))
        bezierPath.addLine(to: CGPoint(x: 157.69, y: 204.32))
        bezierPath.addCurve(to: CGPoint(x: 163.31, y: 204.81), controlPoint1: CGPoint(x: 159.2, y: 204.48), controlPoint2: CGPoint(x: 160.6, y: 204.6))
        bezierPath.addCurve(to: CGPoint(x: 183.05, y: 207.89), controlPoint1: CGPoint(x: 173.07, y: 205.55), controlPoint2: CGPoint(x: 177.33, y: 206.11))
        bezierPath.addCurve(to: CGPoint(x: 206.96, y: 224.95), controlPoint1: CGPoint(x: 192.32, y: 210.77), controlPoint2: CGPoint(x: 200.18, y: 216.13))
        bezierPath.addCurve(to: CGPoint(x: 222.64, y: 253.2), controlPoint1: CGPoint(x: 215.55, y: 236.11), controlPoint2: CGPoint(x: 220.32, y: 244.37))
        bezierPath.addCurve(to: CGPoint(x: 219.59, y: 286.2), controlPoint1: CGPoint(x: 225.31, y: 263.4), controlPoint2: CGPoint(x: 224.38, y: 273.92))
        bezierPath.addCurve(to: CGPoint(x: 200.7, y: 316.43), controlPoint1: CGPoint(x: 214.24, y: 299.93), controlPoint2: CGPoint(x: 208.41, y: 309.65))
        bezierPath.addCurve(to: CGPoint(x: 166.08, y: 326.5), controlPoint1: CGPoint(x: 191.63, y: 324.4), controlPoint2: CGPoint(x: 180.25, y: 327.84))
        bezierPath.addCurve(to: CGPoint(x: 124.26, y: 300.24), controlPoint1: CGPoint(x: 151.57, y: 325.13), controlPoint2: CGPoint(x: 138.78, y: 316.14))
        bezierPath.addCurve(to: CGPoint(x: 118.12, y: 293.26), controlPoint1: CGPoint(x: 122.33, y: 298.13), controlPoint2: CGPoint(x: 120.41, y: 295.94))
        bezierPath.addCurve(to: CGPoint(x: 112.68, y: 286.89), controlPoint1: CGPoint(x: 117.21, y: 292.2), controlPoint2: CGPoint(x: 113.57, y: 287.92))
        bezierPath.addCurve(to: CGPoint(x: 104.35, y: 278.16), controlPoint1: CGPoint(x: 108.72, y: 282.29), controlPoint2: CGPoint(x: 106.3, y: 279.72))
        bezierPath.addLine(to: CGPoint(x: 112.1, y: 276.15))
        bezierPath.addCurve(to: CGPoint(x: 91.54, y: 359.96), controlPoint1: CGPoint(x: 102.57, y: 299.43), controlPoint2: CGPoint(x: 95.69, y: 327.61))
        bezierPath.addLine(to: CGPoint(x: 85.01, y: 354.58))
        bezierPath.addCurve(to: CGPoint(x: 94.54, y: 348.72), controlPoint1: CGPoint(x: 88.79, y: 353.33), controlPoint2: CGPoint(x: 91.53, y: 351.55))
        bezierPath.addCurve(to: CGPoint(x: 98.45, y: 344.86), controlPoint1: CGPoint(x: 95.33, y: 347.97), controlPoint2: CGPoint(x: 98.01, y: 345.29))
        bezierPath.addCurve(to: CGPoint(x: 127.25, y: 341.86), controlPoint1: CGPoint(x: 106.05, y: 337.54), controlPoint2: CGPoint(x: 113.47, y: 336.26))
        bezierPath.addCurve(to: CGPoint(x: 189.05, y: 397.59), controlPoint1: CGPoint(x: 159.94, y: 355.12), controlPoint2: CGPoint(x: 181.95, y: 372.69))
        bezierPath.addCurve(to: CGPoint(x: 189.64, y: 400.01), controlPoint1: CGPoint(x: 189.28, y: 398.39), controlPoint2: CGPoint(x: 189.47, y: 399.2))
        bezierPath.addCurve(to: CGPoint(x: 174.29, y: 441.95), controlPoint1: CGPoint(x: 192.46, y: 413.92), controlPoint2: CGPoint(x: 186.19, y: 428.14))
        bezierPath.addCurve(to: CGPoint(x: 163.66, y: 452.73), controlPoint1: CGPoint(x: 170.9, y: 445.89), controlPoint2: CGPoint(x: 167.28, y: 449.51))
        bezierPath.addCurve(to: CGPoint(x: 160.14, y: 455.74), controlPoint1: CGPoint(x: 162.39, y: 453.87), controlPoint2: CGPoint(x: 161.21, y: 454.87))
        bezierPath.addCurve(to: CGPoint(x: 158.73, y: 456.86), controlPoint1: CGPoint(x: 159.49, y: 456.27), controlPoint2: CGPoint(x: 159.01, y: 456.65))
        bezierPath.addCurve(to: CGPoint(x: 154.5, y: 457.72), controlPoint1: CGPoint(x: 157.52, y: 457.77), controlPoint2: CGPoint(x: 155.97, y: 458.09))
        bezierPath.addCurve(to: CGPoint(x: 151.21, y: 456.9), controlPoint1: CGPoint(x: 153.9, y: 457.57), controlPoint2: CGPoint(x: 153.9, y: 457.57))
        bezierPath.addCurve(to: CGPoint(x: 142.55, y: 454.73), controlPoint1: CGPoint(x: 147.63, y: 456), controlPoint2: CGPoint(x: 147.63, y: 456))
        bezierPath.addCurve(to: CGPoint(x: 116.25, y: 448.14), controlPoint1: CGPoint(x: 130.59, y: 451.73), controlPoint2: CGPoint(x: 130.59, y: 451.73))
        bezierPath.addCurve(to: CGPoint(x: 93.45, y: 442.43), controlPoint1: CGPoint(x: 104.13, y: 445.11), controlPoint2: CGPoint(x: 104.13, y: 445.11))
        bezierPath.addCurve(to: CGPoint(x: 79.3, y: 438.89), controlPoint1: CGPoint(x: 84.21, y: 440.12), controlPoint2: CGPoint(x: 84.21, y: 440.12))
        bezierPath.addLine(to: CGPoint(x: 85.46, y: 434.83))
        bezierPath.addCurve(to: CGPoint(x: 64.44, y: 515.8), controlPoint1: CGPoint(x: 81.98, y: 456.39), controlPoint2: CGPoint(x: 75.73, y: 479.65))
        bezierPath.addCurve(to: CGPoint(x: 60.81, y: 527.34), controlPoint1: CGPoint(x: 63.37, y: 519.22), controlPoint2: CGPoint(x: 62.26, y: 522.75))
        bezierPath.addCurve(to: CGPoint(x: 43.72, y: 583.72), controlPoint1: CGPoint(x: 50.33, y: 560.55), controlPoint2: CGPoint(x: 47.66, y: 569.24))
        bezierPath.addCurve(to: CGPoint(x: 34.38, y: 631.2), controlPoint1: CGPoint(x: 38.42, y: 603.17), controlPoint2: CGPoint(x: 35.32, y: 618.58))
        bezierPath.addCurve(to: CGPoint(x: 63.83, y: 671), controlPoint1: CGPoint(x: 32.3, y: 659.33), controlPoint2: CGPoint(x: 40.71, y: 671.78))
        bezierPath.addCurve(to: CGPoint(x: 92.95, y: 653.35), controlPoint1: CGPoint(x: 79.3, y: 670.48), controlPoint2: CGPoint(x: 88, y: 664.74))
        bezierPath.addCurve(to: CGPoint(x: 99.58, y: 608.67), controlPoint1: CGPoint(x: 97.06, y: 643.9), controlPoint2: CGPoint(x: 98.35, y: 633.61))
        bezierPath.addCurve(to: CGPoint(x: 101.21, y: 583.49), controlPoint1: CGPoint(x: 100.21, y: 595.66), controlPoint2: CGPoint(x: 100.52, y: 590.53))
        bezierPath.addCurve(to: CGPoint(x: 111.3, y: 540.87), controlPoint1: CGPoint(x: 102.85, y: 566.57), controlPoint2: CGPoint(x: 105.87, y: 552.98))
        bezierPath.addCurve(to: CGPoint(x: 141.99, y: 505.61), controlPoint1: CGPoint(x: 117.88, y: 526.21), controlPoint2: CGPoint(x: 127.85, y: 514.43))
        bezierPath.addCurve(to: CGPoint(x: 147.82, y: 505.99), controlPoint1: CGPoint(x: 143.82, y: 504.47), controlPoint2: CGPoint(x: 146.17, y: 504.62))
        bezierPath.addCurve(to: CGPoint(x: 202.5, y: 527), controlPoint1: CGPoint(x: 164.43, y: 519.72), controlPoint2: CGPoint(x: 183.13, y: 527))
        bezierPath.addCurve(to: CGPoint(x: 314, y: 364), controlPoint1: CGPoint(x: 263.61, y: 527), controlPoint2: CGPoint(x: 314, y: 454.33))
        bezierPath.addCurve(to: CGPoint(x: 313.58, y: 339.04), controlPoint1: CGPoint(x: 314, y: 359.44), controlPoint2: CGPoint(x: 313.86, y: 351.58))
        bezierPath.addCurve(to: CGPoint(x: 313.5, y: 335.67), controlPoint1: CGPoint(x: 313.55, y: 337.98), controlPoint2: CGPoint(x: 313.53, y: 336.88))
        bezierPath.addCurve(to: CGPoint(x: 313, y: 311), controlPoint1: CGPoint(x: 313, y: 313.85), controlPoint2: CGPoint(x: 313, y: 313.72))
        bezierPath.addCurve(to: CGPoint(x: 319.23, y: 259.64), controlPoint1: CGPoint(x: 313, y: 296.63), controlPoint2: CGPoint(x: 315.13, y: 279.76))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.98, y: 44), end: CGPoint(x: 196.98, y: 671.04), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawNebulaHole99(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 700), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 400, height: 700), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 400, y: resizedFrame.height / 700)
        let resizedShadowScale: CGFloat = min(resizedFrame.width / 400, resizedFrame.height / 700)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let gradientColor2 = UIColor(red: 0.230, green: 0.118, blue: 0.597, alpha: 1.000)
        let gradientColor3 = UIColor(red: 0.839, green: 0.219, blue: 1.000, alpha: 1.000)
        let shadow3Color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Gradient Declarations
        let outerWalls = CGGradient(colorsSpace: nil, colors: [gradientColor3.cgColor, gradientColor.cgColor, gradientColor2.cgColor] as CFArray, locations: [0, 0.49, 1])!

        //// Shadow Declarations
        let highlight = NSShadow()
        highlight.shadowColor = shadow3Color
        highlight.shadowOffset = CGSize(width: 0, height: 2)
        highlight.shadowBlurRadius = 0

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 196.1, y: 228.26))
        bezier2Path.addCurve(to: CGPoint(x: 171.64, y: 230.49), controlPoint1: CGPoint(x: 187.83, y: 228.26), controlPoint2: CGPoint(x: 179.65, y: 229.01))
        bezier2Path.addLine(to: CGPoint(x: 172.24, y: 220.8))
        bezier2Path.addCurve(to: CGPoint(x: 199.46, y: 234.91), controlPoint1: CGPoint(x: 181.69, y: 223.79), controlPoint2: CGPoint(x: 190.81, y: 228.55))
        bezier2Path.addLine(to: CGPoint(x: 193.54, y: 234.91))
        bezier2Path.addCurve(to: CGPoint(x: 220.44, y: 220.9), controlPoint1: CGPoint(x: 202.09, y: 228.62), controlPoint2: CGPoint(x: 211.11, y: 223.89))
        bezier2Path.addLine(to: CGPoint(x: 221.97, y: 225.67))
        bezier2Path.addLine(to: CGPoint(x: 221.04, y: 230.58))
        bezier2Path.addCurve(to: CGPoint(x: 211.51, y: 229.14), controlPoint1: CGPoint(x: 217.89, y: 229.99), controlPoint2: CGPoint(x: 214.71, y: 229.51))
        bezier2Path.addCurve(to: CGPoint(x: 196.1, y: 228.26), controlPoint1: CGPoint(x: 206.42, y: 228.55), controlPoint2: CGPoint(x: 201.28, y: 228.26))
        bezier2Path.close()
        context.saveGState()
        bezier2Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.81, y: 220.8), end: CGPoint(x: 196.81, y: 234.91), options: [])
        context.restoreGState()

        ////// Bezier 2 Inner Shadow
        context.saveGState()
        context.clip(to: bezier2Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier2OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier2OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier2OpaqueShadow.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// ball Drawing
        let ballPath = UIBezierPath(rect: CGRect(x: 259, y: 230, width: 1, height: 1))
        UIColor.gray.setFill()
        ballPath.fill()


        //// end Drawing
        let endPath = UIBezierPath(rect: CGRect(x: 122, y: 488, width: 1, height: 1))
        UIColor.gray.setFill()
        endPath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 196.1, y: 218.26))
        bezierPath.addCurve(to: CGPoint(x: 212.65, y: 219.2), controlPoint1: CGPoint(x: 201.66, y: 218.26), controlPoint2: CGPoint(x: 207.18, y: 218.58))
        bezierPath.addCurve(to: CGPoint(x: 222.9, y: 220.75), controlPoint1: CGPoint(x: 216.09, y: 219.6), controlPoint2: CGPoint(x: 219.51, y: 220.11))
        bezierPath.addCurve(to: CGPoint(x: 223.49, y: 230.43), controlPoint1: CGPoint(x: 227.99, y: 221.71), controlPoint2: CGPoint(x: 228.43, y: 228.85))
        bezierPath.addCurve(to: CGPoint(x: 199.46, y: 242.96), controlPoint1: CGPoint(x: 215.22, y: 233.08), controlPoint2: CGPoint(x: 207.17, y: 237.3))
        bezierPath.addCurve(to: CGPoint(x: 193.54, y: 242.96), controlPoint1: CGPoint(x: 197.7, y: 244.26), controlPoint2: CGPoint(x: 195.3, y: 244.26))
        bezierPath.addCurve(to: CGPoint(x: 169.23, y: 230.34), controlPoint1: CGPoint(x: 185.74, y: 237.23), controlPoint2: CGPoint(x: 177.6, y: 232.98))
        bezierPath.addCurve(to: CGPoint(x: 169.83, y: 220.66), controlPoint1: CGPoint(x: 164.26, y: 228.77), controlPoint2: CGPoint(x: 164.7, y: 221.6))
        bezierPath.addCurve(to: CGPoint(x: 196.1, y: 218.26), controlPoint1: CGPoint(x: 178.43, y: 219.07), controlPoint2: CGPoint(x: 187.22, y: 218.26))
        bezierPath.close()
        context.saveGState()
        bezierPath.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.35, y: 218.26), end: CGPoint(x: 196.35, y: 243.93), options: [])
        context.restoreGState()

        ////// Bezier Inner Shadow
        context.saveGState()
        context.clip(to: bezierPath.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezierOpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezierOpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezierOpaqueShadow.setFill()
        bezierPath.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 220.77, y: 245.53))
        bezier3Path.addCurve(to: CGPoint(x: 303.38, y: 361.5), controlPoint1: CGPoint(x: 268.97, y: 258.35), controlPoint2: CGPoint(x: 303.38, y: 306.15))
        bezier3Path.addCurve(to: CGPoint(x: 213.3, y: 479.15), controlPoint1: CGPoint(x: 303.38, y: 419.93), controlPoint2: CGPoint(x: 265.08, y: 469.61))
        bezier3Path.addLine(to: CGPoint(x: 212.39, y: 474.23))
        bezier3Path.addLine(to: CGPoint(x: 217.36, y: 474.83))
        bezier3Path.addCurve(to: CGPoint(x: 216.78, y: 477.94), controlPoint1: CGPoint(x: 217.23, y: 475.89), controlPoint2: CGPoint(x: 217.04, y: 476.93))
        bezier3Path.addLine(to: CGPoint(x: 211.93, y: 476.72))
        bezier3Path.addLine(to: CGPoint(x: 211.79, y: 471.72))
        bezier3Path.addCurve(to: CGPoint(x: 307.31, y: 361.66), controlPoint1: CGPoint(x: 264.73, y: 470.25), controlPoint2: CGPoint(x: 307.31, y: 421.54))
        bezier3Path.addCurve(to: CGPoint(x: 231.03, y: 254.27), controlPoint1: CGPoint(x: 307.31, y: 309.87), controlPoint2: CGPoint(x: 275.24, y: 265.51))
        bezier3Path.addLine(to: CGPoint(x: 232.26, y: 249.42))
        bezier3Path.addLine(to: CGPoint(x: 232.12, y: 254.42))
        bezier3Path.addCurve(to: CGPoint(x: 220.42, y: 255.28), controlPoint1: CGPoint(x: 227.87, y: 254.3), controlPoint2: CGPoint(x: 223.98, y: 254.6))
        bezier3Path.addLine(to: CGPoint(x: 219.48, y: 250.36))
        bezier3Path.addLine(to: CGPoint(x: 220.77, y: 245.53))
        bezier3Path.close()
        context.saveGState()
        bezier3Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 259.55, y: 245.53), end: CGPoint(x: 259.55, y: 479.15), options: [])
        context.restoreGState()

        ////// Bezier 3 Inner Shadow
        context.saveGState()
        context.clip(to: bezier3Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier3OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier3OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier3OpaqueShadow.setFill()
        bezier3Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 218.2, y: 255.2))
        bezier4Path.addCurve(to: CGPoint(x: 218.55, y: 245.45), controlPoint1: CGPoint(x: 213.06, y: 253.83), controlPoint2: CGPoint(x: 213.32, y: 246.44))
        bezier4Path.addCurve(to: CGPoint(x: 232.4, y: 244.43), controlPoint1: CGPoint(x: 222.83, y: 244.64), controlPoint2: CGPoint(x: 227.44, y: 244.29))
        bezier4Path.addCurve(to: CGPoint(x: 233.49, y: 244.58), controlPoint1: CGPoint(x: 232.77, y: 244.44), controlPoint2: CGPoint(x: 233.13, y: 244.49))
        bezier4Path.addCurve(to: CGPoint(x: 317.31, y: 361.66), controlPoint1: CGPoint(x: 282.28, y: 256.98), controlPoint2: CGPoint(x: 317.31, y: 305.43))
        bezier4Path.addCurve(to: CGPoint(x: 212.07, y: 481.72), controlPoint1: CGPoint(x: 317.31, y: 426.74), controlPoint2: CGPoint(x: 270.67, y: 480.09))
        bezier4Path.addCurve(to: CGPoint(x: 207.08, y: 475.49), controlPoint1: CGPoint(x: 208.75, y: 481.81), controlPoint2: CGPoint(x: 206.27, y: 478.71))
        bezier4Path.addCurve(to: CGPoint(x: 207.43, y: 473.63), controlPoint1: CGPoint(x: 207.24, y: 474.89), controlPoint2: CGPoint(x: 207.35, y: 474.27))
        bezier4Path.addCurve(to: CGPoint(x: 211.49, y: 469.31), controlPoint1: CGPoint(x: 207.69, y: 471.46), controlPoint2: CGPoint(x: 209.33, y: 469.71))
        bezier4Path.addCurve(to: CGPoint(x: 293.38, y: 361.5), controlPoint1: CGPoint(x: 258.36, y: 460.68), controlPoint2: CGPoint(x: 293.38, y: 415.25))
        bezier4Path.addCurve(to: CGPoint(x: 218.2, y: 255.2), controlPoint1: CGPoint(x: 293.38, y: 310.56), controlPoint2: CGPoint(x: 261.89, y: 266.81))
        bezier4Path.close()
        context.saveGState()
        bezier4Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 262.12, y: 244.4), end: CGPoint(x: 262.12, y: 481.72), options: [])
        context.restoreGState()

        ////// Bezier 4 Inner Shadow
        context.saveGState()
        context.clip(to: bezier4Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier4OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier4OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier4OpaqueShadow.setFill()
        bezier4Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 161.97, y: 254.27))
        bezier5Path.addCurve(to: CGPoint(x: 158.49, y: 255.23), controlPoint1: CGPoint(x: 160.81, y: 254.57), controlPoint2: CGPoint(x: 159.64, y: 254.89))
        bezier5Path.addCurve(to: CGPoint(x: 85.69, y: 361.66), controlPoint1: CGPoint(x: 115.97, y: 267.91), controlPoint2: CGPoint(x: 85.69, y: 311.35))
        bezier5Path.addCurve(to: CGPoint(x: 181.21, y: 471.72), controlPoint1: CGPoint(x: 85.69, y: 421.54), controlPoint2: CGPoint(x: 128.27, y: 470.25))
        bezier5Path.addLine(to: CGPoint(x: 181.07, y: 476.72))
        bezier5Path.addLine(to: CGPoint(x: 176.22, y: 477.94))
        bezier5Path.addCurve(to: CGPoint(x: 175.71, y: 475.31), controlPoint1: CGPoint(x: 176, y: 477.08), controlPoint2: CGPoint(x: 175.83, y: 476.2))
        bezier5Path.addLine(to: CGPoint(x: 180.66, y: 474.61))
        bezier5Path.addLine(to: CGPoint(x: 179.87, y: 479.55))
        bezier5Path.addCurve(to: CGPoint(x: 87.42, y: 361.5), controlPoint1: CGPoint(x: 126.98, y: 471.14), controlPoint2: CGPoint(x: 87.42, y: 420.9))
        bezier5Path.addCurve(to: CGPoint(x: 140.01, y: 259.08), controlPoint1: CGPoint(x: 87.42, y: 319.09), controlPoint2: CGPoint(x: 107.62, y: 280.5))
        bezier5Path.addCurve(to: CGPoint(x: 170.97, y: 245.29), controlPoint1: CGPoint(x: 149.59, y: 252.75), controlPoint2: CGPoint(x: 160.02, y: 248.08))
        bezier5Path.addLine(to: CGPoint(x: 172.21, y: 250.13))
        bezier5Path.addLine(to: CGPoint(x: 171.4, y: 255.07))
        bezier5Path.addCurve(to: CGPoint(x: 160.88, y: 254.42), controlPoint1: CGPoint(x: 168.16, y: 254.54), controlPoint2: CGPoint(x: 164.67, y: 254.32))
        bezier5Path.addLine(to: CGPoint(x: 160.74, y: 249.42))
        bezier5Path.addLine(to: CGPoint(x: 161.97, y: 254.27))
        bezier5Path.close()
        context.saveGState()
        bezier5Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 133.45, y: 245.29), end: CGPoint(x: 133.45, y: 479.55), options: [])
        context.restoreGState()

        ////// Bezier 5 Inner Shadow
        context.saveGState()
        context.clip(to: bezier5Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier5OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier5OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier5OpaqueShadow.setFill()
        bezier5Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 159.51, y: 244.58))
        bezier6Path.addCurve(to: CGPoint(x: 160.6, y: 244.43), controlPoint1: CGPoint(x: 159.87, y: 244.49), controlPoint2: CGPoint(x: 160.23, y: 244.44))
        bezier6Path.addCurve(to: CGPoint(x: 173.01, y: 245.2), controlPoint1: CGPoint(x: 165.01, y: 244.3), controlPoint2: CGPoint(x: 169.14, y: 244.57))
        bezier6Path.addCurve(to: CGPoint(x: 173.44, y: 254.98), controlPoint1: CGPoint(x: 178.36, y: 246.07), controlPoint2: CGPoint(x: 178.69, y: 253.64))
        bezier6Path.addCurve(to: CGPoint(x: 145.53, y: 267.42), controlPoint1: CGPoint(x: 163.59, y: 257.49), controlPoint2: CGPoint(x: 154.19, y: 261.7))
        bezier6Path.addCurve(to: CGPoint(x: 97.42, y: 361.5), controlPoint1: CGPoint(x: 115.97, y: 286.96), controlPoint2: CGPoint(x: 97.42, y: 322.41))
        bezier6Path.addCurve(to: CGPoint(x: 181.44, y: 469.68), controlPoint1: CGPoint(x: 97.42, y: 416.14), controlPoint2: CGPoint(x: 133.58, y: 462.06))
        bezier6Path.addCurve(to: CGPoint(x: 185.61, y: 473.92), controlPoint1: CGPoint(x: 183.61, y: 470.02), controlPoint2: CGPoint(x: 185.3, y: 471.74))
        bezier6Path.addCurve(to: CGPoint(x: 185.92, y: 475.49), controlPoint1: CGPoint(x: 185.68, y: 474.46), controlPoint2: CGPoint(x: 185.79, y: 474.98))
        bezier6Path.addCurve(to: CGPoint(x: 180.93, y: 481.72), controlPoint1: CGPoint(x: 186.73, y: 478.71), controlPoint2: CGPoint(x: 184.25, y: 481.81))
        bezier6Path.addCurve(to: CGPoint(x: 75.69, y: 361.66), controlPoint1: CGPoint(x: 122.33, y: 480.09), controlPoint2: CGPoint(x: 75.69, y: 426.74))
        bezier6Path.addCurve(to: CGPoint(x: 155.63, y: 245.65), controlPoint1: CGPoint(x: 75.69, y: 307.05), controlPoint2: CGPoint(x: 108.75, y: 259.62))
        bezier6Path.addCurve(to: CGPoint(x: 159.51, y: 244.58), controlPoint1: CGPoint(x: 156.92, y: 245.26), controlPoint2: CGPoint(x: 158.21, y: 244.91))
        bezier6Path.close()
        context.saveGState()
        bezier6Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 130.88, y: 244.4), end: CGPoint(x: 130.88, y: 481.72), options: [])
        context.restoreGState()

        ////// Bezier 6 Inner Shadow
        context.saveGState()
        context.clip(to: bezier6Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier6OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier6OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier6OpaqueShadow.setFill()
        bezier6Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 198.62, y: 497.31))
        bezier7Path.addCurve(to: CGPoint(x: 176.9, y: 503.63), controlPoint1: CGPoint(x: 192.52, y: 500.16), controlPoint2: CGPoint(x: 185.2, y: 502.23))
        bezier7Path.addLine(to: CGPoint(x: 176.78, y: 493.75))
        bezier7Path.addCurve(to: CGPoint(x: 196.1, y: 495.14), controlPoint1: CGPoint(x: 183.14, y: 494.67), controlPoint2: CGPoint(x: 189.59, y: 495.14))
        bezier7Path.addCurve(to: CGPoint(x: 215.84, y: 493.69), controlPoint1: CGPoint(x: 202.76, y: 495.14), controlPoint2: CGPoint(x: 209.35, y: 494.65))
        bezier7Path.addLine(to: CGPoint(x: 215.72, y: 503.57))
        bezier7Path.addCurve(to: CGPoint(x: 194.38, y: 497.31), controlPoint1: CGPoint(x: 207.58, y: 502.16), controlPoint2: CGPoint(x: 200.38, y: 500.11))
        bezier7Path.addLine(to: CGPoint(x: 198.62, y: 497.31))
        bezier7Path.close()
        context.saveGState()
        bezier7Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.31, y: 493.69), end: CGPoint(x: 196.31, y: 503.63), options: [])
        context.restoreGState()

        ////// Bezier 7 Inner Shadow
        context.saveGState()
        context.clip(to: bezier7Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier7OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier7OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier7OpaqueShadow.setFill()
        bezier7Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 194.38, y: 488.25))
        bezier8Path.addCurve(to: CGPoint(x: 198.62, y: 488.25), controlPoint1: CGPoint(x: 195.72, y: 487.62), controlPoint2: CGPoint(x: 197.28, y: 487.62))
        bezier8Path.addCurve(to: CGPoint(x: 217.42, y: 493.71), controlPoint1: CGPoint(x: 203.72, y: 490.63), controlPoint2: CGPoint(x: 210.09, y: 492.45))
        bezier8Path.addCurve(to: CGPoint(x: 217.3, y: 503.59), controlPoint1: CGPoint(x: 223.02, y: 494.68), controlPoint2: CGPoint(x: 222.93, y: 502.75))
        bezier8Path.addCurve(to: CGPoint(x: 196.1, y: 505.14), controlPoint1: CGPoint(x: 210.32, y: 504.62), controlPoint2: CGPoint(x: 203.24, y: 505.14))
        bezier8Path.addCurve(to: CGPoint(x: 175.35, y: 503.65), controlPoint1: CGPoint(x: 189.11, y: 505.14), controlPoint2: CGPoint(x: 182.18, y: 504.64))
        bezier8Path.addCurve(to: CGPoint(x: 175.23, y: 493.77), controlPoint1: CGPoint(x: 169.7, y: 502.83), controlPoint2: CGPoint(x: 169.61, y: 494.72))
        bezier8Path.addCurve(to: CGPoint(x: 194.38, y: 488.25), controlPoint1: CGPoint(x: 182.71, y: 492.51), controlPoint2: CGPoint(x: 189.2, y: 490.67))
        bezier8Path.close()
        context.saveGState()
        bezier8Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.32, y: 487.78), end: CGPoint(x: 196.32, y: 505.14), options: [])
        context.restoreGState()

        ////// Bezier 8 Inner Shadow
        context.saveGState()
        context.clip(to: bezier8Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier8OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier8OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier8OpaqueShadow.setFill()
        bezier8Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 198.96, y: 184.02))
        bezier9Path.addCurve(to: CGPoint(x: 374, y: 361.5), controlPoint1: CGPoint(x: 295.96, y: 185.34), controlPoint2: CGPoint(x: 374, y: 264.39))
        bezier9Path.addCurve(to: CGPoint(x: 196.5, y: 539), controlPoint1: CGPoint(x: 374, y: 459.53), controlPoint2: CGPoint(x: 294.53, y: 539))
        bezier9Path.addCurve(to: CGPoint(x: 19, y: 361.5), controlPoint1: CGPoint(x: 98.47, y: 539), controlPoint2: CGPoint(x: 19, y: 459.53))
        bezier9Path.addCurve(to: CGPoint(x: 162.83, y: 187.19), controlPoint1: CGPoint(x: 19, y: 276.02), controlPoint2: CGPoint(x: 79.87, y: 203.12))
        bezier9Path.addCurve(to: CGPoint(x: 196.5, y: 184), controlPoint1: CGPoint(x: 173.85, y: 185.07), controlPoint2: CGPoint(x: 185.11, y: 184))
        bezier9Path.addCurve(to: CGPoint(x: 198.96, y: 184.02), controlPoint1: CGPoint(x: 197.32, y: 184), controlPoint2: CGPoint(x: 198.14, y: 184.01))
        bezier9Path.close()
        context.saveGState()
        bezier9Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.5, y: 184), end: CGPoint(x: 196.5, y: 539), options: [])
        context.restoreGState()

        ////// Bezier 9 Inner Shadow
        context.saveGState()
        context.clip(to: bezier9Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier9OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier9OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier9OpaqueShadow.setFill()
        bezier9Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()



        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 198.83, y: 194.02))
        bezier10Path.addCurve(to: CGPoint(x: 196.5, y: 194), controlPoint1: CGPoint(x: 198.05, y: 194.01), controlPoint2: CGPoint(x: 197.28, y: 194))
        bezier10Path.addCurve(to: CGPoint(x: 164.72, y: 197.01), controlPoint1: CGPoint(x: 185.74, y: 194), controlPoint2: CGPoint(x: 175.11, y: 195.01))
        bezier10Path.addCurve(to: CGPoint(x: 29, y: 361.5), controlPoint1: CGPoint(x: 86.44, y: 212.04), controlPoint2: CGPoint(x: 29, y: 280.83))
        bezier10Path.addCurve(to: CGPoint(x: 196.5, y: 529), controlPoint1: CGPoint(x: 29, y: 454.01), controlPoint2: CGPoint(x: 103.99, y: 529))
        bezier10Path.addCurve(to: CGPoint(x: 364, y: 361.5), controlPoint1: CGPoint(x: 289.01, y: 529), controlPoint2: CGPoint(x: 364, y: 454.01))
        bezier10Path.addCurve(to: CGPoint(x: 198.83, y: 194.02), controlPoint1: CGPoint(x: 364, y: 269.86), controlPoint2: CGPoint(x: 290.35, y: 195.26))
        bezier10Path.close()
        context.saveGState()
        bezier10Path.addClip()
        context.drawLinearGradient(outerWalls, start: CGPoint(x: 196.5, y: 194), end: CGPoint(x: 196.5, y: 529), options: [])
        context.restoreGState()

        ////// Bezier 10 Inner Shadow
        context.saveGState()
        context.clip(to: bezier10Path.bounds)
        context.setShadow(offset: CGSize.zero, blur: 0)
        context.setAlpha((highlight.shadowColor as! UIColor).cgColor.alpha)
        context.beginTransparencyLayer(auxiliaryInfo: nil)
        let bezier10OpaqueShadow = (highlight.shadowColor as! UIColor).withAlphaComponent(1)
        context.setShadow(offset: CGSize(width: highlight.shadowOffset.width * resizedShadowScale, height: highlight.shadowOffset.height * resizedShadowScale), blur: highlight.shadowBlurRadius * resizedShadowScale, color: bezier10OpaqueShadow.cgColor)
        context.setBlendMode(.sourceOut)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        bezier10OpaqueShadow.setFill()
        bezier10Path.fill()

        context.endTransparencyLayer()
        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawGems(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 390, height: 703), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 390, height: 703), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 390, y: resizedFrame.height / 703)


        //// Color Declarations
        let gradientColor = UIColor(red: 0.510, green: 0.384, blue: 0.922, alpha: 1.000)
        let color2 = UIColor(red: 0.320, green: 0.766, blue: 0.800, alpha: 1.000)
        let gradient3Color = UIColor(red: 0.855, green: 0.854, blue: 0.342, alpha: 1.000)
        let gradient3Color2 = UIColor(red: 0.314, green: 0.882, blue: 0.953, alpha: 1.000)

        //// Gradient Declarations
        let gradient2 = CGGradient(colorsSpace: nil, colors: [gradientColor.cgColor, color2.cgColor] as CFArray, locations: [0, 1])!
        let gradient3 = CGGradient(colorsSpace: nil, colors: [gradient3Color2.cgColor, gradient3Color.cgColor] as CFArray, locations: [0, 1])!

        //// Group 2
        context.saveGState()
        context.translateBy(x: 23, y: 687.25)
        context.rotate(by: -91.97 * CGFloat.pi/180)



        //// Polygon 7 Drawing
        let polygon7Path = UIBezierPath()
        polygon7Path.move(to: CGPoint(x: 187, y: 91.25))
        polygon7Path.addLine(to: CGPoint(x: 257.38, y: 132.71))
        polygon7Path.addLine(to: CGPoint(x: 230.5, y: 199.79))
        polygon7Path.addLine(to: CGPoint(x: 143.5, y: 199.79))
        polygon7Path.addLine(to: CGPoint(x: 116.62, y: 132.71))
        polygon7Path.close()
        context.saveGState()
        polygon7Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 187, y: 91.25), end: CGPoint(x: 187, y: 199.79), options: [])
        context.restoreGState()


        //// Polygon 8 Drawing
        context.saveGState()
        context.translateBy(x: 147.65, y: 242.21)
        context.rotate(by: -180 * CGFloat.pi/180)

        let polygon8Path = UIBezierPath()
        polygon8Path.move(to: CGPoint(x: 73.83, y: -0))
        polygon8Path.addLine(to: CGPoint(x: 144.04, y: 41.45))
        polygon8Path.addLine(to: CGPoint(x: 117.22, y: 108.52))
        polygon8Path.addLine(to: CGPoint(x: 30.43, y: 108.52))
        polygon8Path.addLine(to: CGPoint(x: 3.61, y: 41.45))
        polygon8Path.close()
        context.saveGState()
        polygon8Path.addClip()
        context.drawLinearGradient(gradient2, start: CGPoint(x: 73.83, y: -0), end: CGPoint(x: 73.83, y: 108.52), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon 9 Drawing
        let polygon9Path = UIBezierPath()
        polygon9Path.move(to: CGPoint(x: 131.62, y: 172.75))
        polygon9Path.addLine(to: CGPoint(x: 230.89, y: 199.18))
        polygon9Path.addLine(to: CGPoint(x: 192.98, y: 241.94))
        polygon9Path.addLine(to: CGPoint(x: 70.27, y: 241.94))
        polygon9Path.addLine(to: CGPoint(x: 32.36, y: 199.18))
        polygon9Path.close()
        context.saveGState()
        polygon9Path.addClip()
        context.drawLinearGradient(gradient2, start: CGPoint(x: 131.62, y: 172.75), end: CGPoint(x: 131.63, y: 241.94), options: [])
        context.restoreGState()


        //// Polygon 10 Drawing
        context.saveGState()
        context.translateBy(x: 230.99, y: 160.84)
        context.rotate(by: 180 * CGFloat.pi/180)

        let polygon10Path = UIBezierPath()
        polygon10Path.move(to: CGPoint(x: 104.21, y: 0))
        polygon10Path.addLine(to: CGPoint(x: 203.33, y: 26.55))
        polygon10Path.addLine(to: CGPoint(x: 165.47, y: 69.5))
        polygon10Path.addLine(to: CGPoint(x: 42.96, y: 69.5))
        polygon10Path.addLine(to: CGPoint(x: 5.1, y: 26.55))
        polygon10Path.close()
        context.saveGState()
        polygon10Path.addClip()
        context.drawLinearGradient(gradient2, start: CGPoint(x: 104.21, y: 0), end: CGPoint(x: 104.21, y: 69.5), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon 11 Drawing
        let polygon11Path = UIBezierPath()
        polygon11Path.move(to: CGPoint(x: 131.25, y: 172.78))
        polygon11Path.addLine(to: CGPoint(x: 226.7, y: 199.81))
        polygon11Path.addLine(to: CGPoint(x: 76.67, y: 242.72))
        polygon11Path.addLine(to: CGPoint(x: 131.25, y: 172.78))
        polygon11Path.close()
        context.saveGState()
        polygon11Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 151.69, y: 172.78), end: CGPoint(x: 151.69, y: 242.72), options: [])
        context.restoreGState()


        //// Polygon 12 Drawing
        let polygon12Path = UIBezierPath()
        polygon12Path.move(to: CGPoint(x: 128.26, y: 162.04))
        polygon12Path.addLine(to: CGPoint(x: 32.81, y: 135.01))
        polygon12Path.addLine(to: CGPoint(x: 182.83, y: 92.1))
        polygon12Path.addLine(to: CGPoint(x: 128.26, y: 162.04))
        polygon12Path.close()
        context.saveGState()
        polygon12Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 107.82, y: 162.04), end: CGPoint(x: 107.82, y: 92.1), options: [])
        context.restoreGState()



        context.restoreGState()


        //// Group
        //// Polygon 15 Drawing
        context.saveGState()
        context.translateBy(x: 372, y: 381)
        context.rotate(by: 144.56 * CGFloat.pi/180)

        let polygon15Path = UIBezierPath()
        polygon15Path.move(to: CGPoint(x: 64, y: 136.79))
        polygon15Path.addLine(to: CGPoint(x: -0, y: 83.92))
        polygon15Path.addLine(to: CGPoint(x: 100.59, y: 0))
        polygon15Path.addLine(to: CGPoint(x: 64, y: 136.79))
        polygon15Path.close()
        context.saveGState()
        polygon15Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 50.29, y: 136.79), end: CGPoint(x: 50.29, y: 0), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon 14 Drawing
        context.saveGState()
        context.translateBy(x: 143.57, y: 506.1)
        context.rotate(by: -56.95 * CGFloat.pi/180)

        let polygon14Path = UIBezierPath()
        polygon14Path.move(to: CGPoint(x: 123.63, y: 146.23))
        polygon14Path.addLine(to: CGPoint(x: -0, y: 89.71))
        polygon14Path.addLine(to: CGPoint(x: 194.31, y: -0))
        polygon14Path.addLine(to: CGPoint(x: 123.63, y: 146.23))
        polygon14Path.close()
        context.saveGState()
        polygon14Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 97.15, y: 146.23), end: CGPoint(x: 97.15, y: -0), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon 13 Drawing
        context.saveGState()
        context.translateBy(x: 213, y: 172)
        context.rotate(by: 134.67 * CGFloat.pi/180)

        let polygon13Path = UIBezierPath()
        polygon13Path.move(to: CGPoint(x: 64, y: 136.79))
        polygon13Path.addLine(to: CGPoint(x: -0, y: 83.92))
        polygon13Path.addLine(to: CGPoint(x: 100.59, y: 0))
        polygon13Path.addLine(to: CGPoint(x: 64, y: 136.79))
        polygon13Path.close()
        context.saveGState()
        polygon13Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 50.29, y: 136.79), end: CGPoint(x: 50.29, y: 0), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon Drawing
        let polygonPath = UIBezierPath()
        polygonPath.move(to: CGPoint(x: 232.5, y: 109.5))
        polygonPath.addLine(to: CGPoint(x: 279.58, y: 221.44))
        polygonPath.addLine(to: CGPoint(x: 261.6, y: 402.56))
        polygonPath.addLine(to: CGPoint(x: 203.4, y: 402.56))
        polygonPath.addLine(to: CGPoint(x: 185.42, y: 221.44))
        polygonPath.close()
        context.saveGState()
        polygonPath.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 232.5, y: 109.5), end: CGPoint(x: 232.5, y: 402.56), options: [])
        context.restoreGState()


        //// Polygon 2 Drawing
        context.saveGState()
        context.translateBy(x: 206, y: 516.5)
        context.rotate(by: -180 * CGFloat.pi/180)

        let polygon2Path = UIBezierPath()
        polygon2Path.move(to: CGPoint(x: 49.5, y: 0))
        polygon2Path.addLine(to: CGPoint(x: 96.58, y: 111.94))
        polygon2Path.addLine(to: CGPoint(x: 78.6, y: 293.06))
        polygon2Path.addLine(to: CGPoint(x: 20.4, y: 293.06))
        polygon2Path.addLine(to: CGPoint(x: 2.42, y: 111.94))
        polygon2Path.close()
        context.saveGState()
        polygon2Path.addClip()
        context.drawLinearGradient(gradient2, start: CGPoint(x: 49.5, y: 0), end: CGPoint(x: 49.5, y: 293.06), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon 3 Drawing
        let polygon3Path = UIBezierPath()
        polygon3Path.move(to: CGPoint(x: 195.12, y: 328))
        polygon3Path.addLine(to: CGPoint(x: 261.58, y: 399.69))
        polygon3Path.addLine(to: CGPoint(x: 236.2, y: 515.69))
        polygon3Path.addLine(to: CGPoint(x: 154.05, y: 515.69))
        polygon3Path.addLine(to: CGPoint(x: 128.67, y: 399.69))
        polygon3Path.close()
        context.saveGState()
        polygon3Path.addClip()
        context.drawLinearGradient(gradient2, start: CGPoint(x: 195.12, y: 328), end: CGPoint(x: 195.12, y: 515.69), options: [])
        context.restoreGState()


        //// Polygon 4 Drawing
        context.saveGState()
        context.translateBy(x: 261.87, y: 296.75)
        context.rotate(by: 180 * CGFloat.pi/180)

        let polygon4Path = UIBezierPath()
        polygon4Path.move(to: CGPoint(x: 69.88, y: 0))
        polygon4Path.addLine(to: CGPoint(x: 136.33, y: 71.69))
        polygon4Path.addLine(to: CGPoint(x: 110.95, y: 187.69))
        polygon4Path.addLine(to: CGPoint(x: 28.8, y: 187.69))
        polygon4Path.addLine(to: CGPoint(x: 3.42, y: 71.69))
        polygon4Path.close()
        context.saveGState()
        polygon4Path.addClip()
        context.drawLinearGradient(gradient2, start: CGPoint(x: 69.88, y: 0), end: CGPoint(x: 69.88, y: 187.69), options: [])
        context.restoreGState()

        context.restoreGState()


        //// Polygon 5 Drawing
        let polygon5Path = UIBezierPath()
        polygon5Path.move(to: CGPoint(x: 195, y: 329))
        polygon5Path.addLine(to: CGPoint(x: 259, y: 402))
        polygon5Path.addLine(to: CGPoint(x: 158.41, y: 517.88))
        polygon5Path.addLine(to: CGPoint(x: 195, y: 329))
        polygon5Path.close()
        context.saveGState()
        polygon5Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 208.71, y: 329), end: CGPoint(x: 208.71, y: 517.88), options: [])
        context.restoreGState()


        //// Polygon 6 Drawing
        let polygon6Path = UIBezierPath()
        polygon6Path.move(to: CGPoint(x: 193, y: 300))
        polygon6Path.addLine(to: CGPoint(x: 129, y: 227))
        polygon6Path.addLine(to: CGPoint(x: 229.59, y: 111.12))
        polygon6Path.addLine(to: CGPoint(x: 193, y: 300))
        polygon6Path.close()
        context.saveGState()
        polygon6Path.addClip()
        context.drawLinearGradient(gradient3, start: CGPoint(x: 179.29, y: 300), end: CGPoint(x: 179.29, y: 111.13), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawSacred(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 780, height: 780), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 780, height: 780), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 780, y: resizedFrame.height / 780)



        //// Image Declarations
        let fol = UIImage(named: "fol.jpg")!

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 46, y: 42, width: 700, height: 700))
        context.saveGState()
        ovalPath.addClip()
        context.scaleBy(x: 1, y: -1)
        context.draw(fol.cgImage!, in: CGRect(x: 46, y: -42, width: fol.size.width, height: fol.size.height), byTiling: true)
        context.restoreGState()
        
        context.restoreGState()

    }

    //// Generated Images

    public dynamic class var imageOfNebulaHole1: UIImage {
        if Cache.imageOfNebulaHole1 != nil {
            return Cache.imageOfNebulaHole1!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole1()

        Cache.imageOfNebulaHole1 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole1!
    }

    public dynamic class var imageOfNebulaHole2: UIImage {
        if Cache.imageOfNebulaHole2 != nil {
            return Cache.imageOfNebulaHole2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole2()

        Cache.imageOfNebulaHole2 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole2!
    }

    public dynamic class var imageOfNebulaHole3: UIImage {
        if Cache.imageOfNebulaHole3 != nil {
            return Cache.imageOfNebulaHole3!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole3()

        Cache.imageOfNebulaHole3 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole3!
    }

    public dynamic class var imageOfNebulaHole4: UIImage {
        if Cache.imageOfNebulaHole4 != nil {
            return Cache.imageOfNebulaHole4!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole4()

        Cache.imageOfNebulaHole4 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole4!
    }

    public dynamic class var imageOfNebulaHole5: UIImage {
        if Cache.imageOfNebulaHole5 != nil {
            return Cache.imageOfNebulaHole5!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole5()

        Cache.imageOfNebulaHole5 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole5!
    }

    public dynamic class var imageOfNebulaHole6: UIImage {
        if Cache.imageOfNebulaHole6 != nil {
            return Cache.imageOfNebulaHole6!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole6()

        Cache.imageOfNebulaHole6 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole6!
    }

    public dynamic class var imageOfNebulaHole7: UIImage {
        if Cache.imageOfNebulaHole7 != nil {
            return Cache.imageOfNebulaHole7!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole7()

        Cache.imageOfNebulaHole7 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole7!
    }

    public dynamic class var imageOfNebulaHole8: UIImage {
        if Cache.imageOfNebulaHole8 != nil {
            return Cache.imageOfNebulaHole8!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole8()

        Cache.imageOfNebulaHole8 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole8!
    }

    public dynamic class var imageOfNebulaHole9: UIImage {
        if Cache.imageOfNebulaHole9 != nil {
            return Cache.imageOfNebulaHole9!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 400, height: 700), false, 0)
            NebulaStyleKit.drawNebulaHole9()

        Cache.imageOfNebulaHole9 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNebulaHole9!
    }

    //// Customization Infrastructure

    @IBOutlet dynamic var nebulaHole1Targets: [AnyObject]! {
        get { return Cache.nebulaHole1Targets }
        set {
            Cache.nebulaHole1Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole1)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole2Targets: [AnyObject]! {
        get { return Cache.nebulaHole2Targets }
        set {
            Cache.nebulaHole2Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole2)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole3Targets: [AnyObject]! {
        get { return Cache.nebulaHole3Targets }
        set {
            Cache.nebulaHole3Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole3)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole4Targets: [AnyObject]! {
        get { return Cache.nebulaHole4Targets }
        set {
            Cache.nebulaHole4Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole4)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole5Targets: [AnyObject]! {
        get { return Cache.nebulaHole5Targets }
        set {
            Cache.nebulaHole5Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole5)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole6Targets: [AnyObject]! {
        get { return Cache.nebulaHole6Targets }
        set {
            Cache.nebulaHole6Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole6)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole7Targets: [AnyObject]! {
        get { return Cache.nebulaHole7Targets }
        set {
            Cache.nebulaHole7Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole7)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole8Targets: [AnyObject]! {
        get { return Cache.nebulaHole8Targets }
        set {
            Cache.nebulaHole8Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole8)
            }
        }
    }

    @IBOutlet dynamic var nebulaHole9Targets: [AnyObject]! {
        get { return Cache.nebulaHole9Targets }
        set {
            Cache.nebulaHole9Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: NebulaStyleKit.imageOfNebulaHole9)
            }
        }
    }




    @objc public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
