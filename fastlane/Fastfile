platform :ios do
  before_all do |lane|
    cocoapods
  end

  lane :certificates do
    match(app_identifier: "com.jwitapps.iMessageExtensionUITests")
    match(app_identifier: ["com.jwitapps.MrPutt", "com.jwitapps.MrPutt.iMessageExtension"], readonly: true)
  end

  lane :before_integration do
    # fetch the number of commits in the current branch
    build_number = number_of_commits

    # Set number of commits as the build number in the project's plist file before the bot actually start building the project.
    # This way, the generated archive will have an auto-incremented build number.

    set_info_plist_value(
      path: './MrPutt/Info.plist',
      key: 'CFBundleVersion',
      value: "#{build_number}"
    )

    # Run `pod install`
    cocoapods

    # Download provisioning profiles for the app and copy them to the correct folder.
    sigh(output_path: '/Library/Developer/XcodeServer/ProvisioningProfiles', skip_install: true)
  end

  lane :fly do
    before_all

    match(type: "adhoc", app_identifier: ["com.jwitapps.MrPutt", "com.jwitapps.MrPutt.iMessageExtension"], readonly: true)

    gym(
      scheme: "MrPutt",
      workspace: "MrPutt.xcworkspace",
      configuration: "Release",
      clean:  true,
    )
    pilot(
      username: ENV["ITUNES_CONNECT_USER"],
      wait_processing_interval: 30,
      distribute_external: false,
      skip_waiting_for_build_processing: true,
      skip_submission: true, #allows build script to end before processing the binary
      ipa: "MrPutt.ipa" #path of the ipa generated by your build script
    )
  end

  lane :after_integration do
    plistFile = './MrPutt/Info.plist'
    version_number = 1.0
    build_number = number_of_commits
    target = 'MrPutt'
    # ...

    ipa_folder = "#{ENV['XCS_DERIVED_DATA_DIR']}/deploy/#{version_number}.#{build_number}/"
    ipa_path = "#{ipa_folder}/#{target}.ipa"
    sh "mkdir -p #{ipa_folder}"

  end
end
